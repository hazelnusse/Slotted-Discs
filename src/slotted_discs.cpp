#include "slotted_discs.h"

int eomwrapper(double t, const double x[6], double f[6], void * params)
{
  SlottedDiscs * p = (SlottedDiscs *) params;
  // Assign the states of the SlottedDiscs object
  p->setState(x);
  // Evaluate the RHS of the ODE's representing the equations of motion
  p->eoms();
  // Assign the right hand sides of the ODE's to the array passed
  f[0] = p->q1p;
  f[1] = p->q2p;
  f[2] = p->q3p;
  f[3] = p->q4p;
  f[4] = p->q5p;
  f[5] = p->wp;
  // Return the status
  return GSL_SUCCESS;
}

ostream &operator<<(ostream &file, const SlottedDiscs * discs)
{
  file.write((char *) &(discs->t), sizeof discs->t);
  file.write((char *) &discs->q1, sizeof discs->q1);
  file.write((char *) &discs->q2, sizeof discs->q2);
  file.write((char *) &discs->q3, sizeof discs->q3);
  file.write((char *) &discs->q4, sizeof discs->q4);
  file.write((char *) &discs->q5, sizeof discs->q5);
  file.write((char *) &discs->w, sizeof discs->w);
  file.write((char *) &discs->w1, sizeof discs->w1);
  file.write((char *) &discs->w2, sizeof discs->w2);
  file.write((char *) &discs->w3, sizeof discs->w3);
  file.write((char *) &(discs->no_cb), sizeof discs->no_cb);
  file.write((char *) &(discs->ke), sizeof discs->ke);
  file.write((char *) &(discs->pe), sizeof discs->pe);
  file.write((char *) &(discs->te), sizeof discs->te);
  file.write((char *) &(discs->H), sizeof discs->H);
  file.write((char *) &(discs->p), sizeof discs->p);
  return file;
} // operator <<

void SlottedDiscs::writeRecord_dt(void) const
{
  ofstream fp("./record.py", ios::out);
  fp << "#!/usr/bin/env python" << endl;
  fp << "import numpy as np" << endl;
  fp << "record_dt = np.dtype([('t', np.float64), " <<
        "('q1', np.float64), " <<
        "('q2', np.float64), " <<
        "('q3', np.float64), " <<
        "('x', np.float64), " <<
        "('y', np.float64), " <<
        "('w', np.float64), " <<
        "('w1', np.float64), " <<
        "('w2', np.float64), " <<
        "('w3', np.float64), " <<
        "('cbx', np.float64), " <<
        "('cby', np.float64), " <<
        "('cbz', np.float64), " <<
        "('ke', np.float64), " <<
        "('pe', np.float64), " <<
        "('te', np.float64), " <<
        "('H1', np.float64), " <<
        "('H2', np.float64), " <<
        "('H3', np.float64), " <<
        "('p1', np.float64), " <<
        "('p2', np.float64), " <<
        "('p3', np.float64)]) " << endl;
  fp.close();
} // writeRecord_dt()

SlottedDiscs::SlottedDiscs()
{
  // Default parameters
  ra = rb = .1;
  l = sqrt(2.0)*ra;
  g = 9.81;
  alpha = M_PI/2.0;
  
  double ma, mb;
  ma = mb = 2.0;
  m = ma + mb;
  double Ia = ma*ra*ra/4.0;
  double Ja = ma*ra*ra/2.0;

  double Ib = mb*rb*rb/4.0;
  double Jb = mb*rb*rb/2.0;

  k = l*mb/(ma+mb);
  Ixx = Ia + Ib*pow(cos(alpha),2) + Jb*pow(sin(alpha),2) + mb*pow(l,2)*(ma*mb/
  pow((ma+mb),2)+pow((1-mb/(ma+mb)),2));
  Iyy = Ja + Jb + pow(sin(alpha),2)*(Ib-Jb) + mb*pow(l,2)*(ma*mb/pow((ma+mb),
  2)+pow((1-mb/(ma+mb)),2));
  Izz = Ia + Ib + mb*pow(l,2)*pow((1-mb/(ma+mb)),2) + mb*pow(l,2)*(-1+mb/(ma+
  mb))*(1-mb/(ma+mb));
  Ixy = sin(alpha)*cos(alpha)*(Ib-Jb);

  // Set state
  q1 = 0.0;
  q2 = M_PI / 4.0;
  q3 = M_PI/2.0;
  q4 = q5 = 0.0;
  w = -1.4;

  // Set integration settings
  t = 0.0;
  tf = 10.0;
  h = 0.001;
  T = gsl_odeiv_step_rk8pd;
  s = gsl_odeiv_step_alloc(T, 6);
  c = gsl_odeiv_control_y_new(1e-6, 1e-9);
  e = gsl_odeiv_evolve_alloc(6);
  sys.function = eomwrapper;
  sys.jacobian = NULL;
  sys.dimension = 6;
  sys.params = this;

  for (int i = 0; i < Z_MAX; ++i)
    z[i] = 0.0;

  // Constants
  evalConstants();
  eoms();
  computeOutputs();

  // Write the file which holds the numpy record data type so that plotting is
  // easy
  writeRecord_dt();
 
} // constructor

SlottedDiscs::~SlottedDiscs()
{
  gsl_odeiv_evolve_free(e);
  gsl_odeiv_control_free(c);
  gsl_odeiv_step_free(s);
} // destructor

void SlottedDiscs::printState(void) const
{
  cout.setf(ios::right, ios::adjustfield);
  cout.setf(ios::scientific, ios::floatfield);
  cout.setf(ios::adjustfield, ios::right);
  cout.precision(9);
  cout.width(18);
  cout << q1;
  cout.width(18);
  cout << q2;
  cout.width(18);
  cout << q3;
  cout.width(18);
  cout << q4;
  cout.width(18);
  cout << q5;
  cout.width(18);
  cout << w3;
  cout << endl;
} // printState()

void SlottedDiscs::printEnergy(void) const
{
  cout.setf(ios::scientific, ios::floatfield);
  cout.setf(ios::adjustfield, ios::right);
  cout.precision(9);
  cout.width(18);
  cout << ke;
  cout.width(18);
  cout << pe;
  cout.width(18);
  cout << te;
  cout << endl;
} // printEnergy()

void SlottedDiscs::printParameters() const
{
  cout.setf(ios::scientific, ios::floatfield);
  cout.setf(ios::adjustfield, ios::right);
  cout.precision(9);
  cout << "ra = " << ra << endl << "rb = " << rb << endl;
  cout << "m = " << m << endl;
  cout << "Ixx = " << Ixx << endl << "Iyy = " << Iyy << endl;
  cout << "Izz = " << Izz << endl << "Ixy = " << Ixy << endl;
  cout << "alpha = " << alpha << endl << "l = " << l << endl;
  cout << "k = " << k << endl;
  cout << "g = " << g << endl;
} // printParameters()

void SlottedDiscs::evalConstants(void)
{
  z[113] = g*m;
  z[1] = cos(phi);
  z[2] = sin(phi);
  z[3] = sin(theta);
  z[4] = z[2]*z[3];
  z[5] = z[1]*z[3];
  z[6] = cos(theta);
  z[7] = z[2]*z[6];
  z[8] = z[1]*z[6];
  z[15] = cos(alpha);
  z[16] = sin(alpha);
  z[43] = rb*z[16];
  z[44] = pow(z[16],2);
  z[165] = pow(z[15],2);
  z[167] = z[16]*z[43];
  z[168] = z[15]*z[16];
} //evalConstants()

void SlottedDiscs::eoms(void)
{
  z[14] = sin(q3);
  z[17] = ra*z[14];
  z[12] = sin(q2);
  z[11] = cos(q2);
  z[21] = z[11]*z[14];
  z[28] = z[15]*z[12] + z[16]*z[21];
  z[29] = 1 - pow(z[28],2);
  z[30] = pow(z[29],0.5);
  z[32] = z[28]/z[30];
  z[31] = 1/z[30];
  z[33] = rb*(z[16]*z[32]-z[21]*z[31]);
  z[36] = z[17] + z[33];
  z[34] = rb*(z[15]*z[32]-z[12]*z[31]);
  z[13] = cos(q3);
  z[22] = z[11]*z[13];
  z[35] = rb*z[22]*z[31];
  z[18] = ra*z[13];
  z[37] = z[35] - l - z[18];
  z[38] = pow(z[34],2) + pow(z[36],2) + pow(z[37],2);
  z[39] = pow(z[38],0.5);
  z[40] = z[36]/z[39];
  w1 = w*z[40];
  z[41] = z[37]/z[39];
  w3 = w*z[41];
  q1p = -(w1*z[14]-w3*z[13])/z[11];
  q2p = w1*z[13] + w3*z[14];
  z[45] = (z[11]*z[34]+rb*z[22]*(z[12]*z[13]*z[31]-z[22]*z[28]*(z[15]*z[11]-
  z[16]*z[12]*z[14])/(pow(z[29],0.5)*pow(z[30],2)))-z[12]*z[14]*(z[17]+z[33])-
  z[12]*z[13]*(l+z[18]-z[35])-rb*z[12]*(z[11]*z[31]+z[12]*z[28]*(z[15]*z[11]-
  z[16]*z[12]*z[14])/(pow(z[29],0.5)*pow(z[30],2))-z[15]*(z[30]+pow(z[28],2)/
  pow(z[29],0.5))*(z[15]*z[11]-z[16]*z[12]*z[14])/pow(z[30],2))-rb*z[21]*(
  z[21]*z[28]*(z[15]*z[11]-z[16]*z[12]*z[14])/(pow(z[29],0.5)*pow(z[30],2))-
  z[12]*z[14]*z[31]-z[16]*(z[30]+pow(z[28],2)/pow(z[29],0.5))*(z[15]*z[11]-
  z[16]*z[12]*z[14])/pow(z[30],2)))*q2p/(z[11]*z[14]*(l+z[18]-z[35])+z[43]*
  z[11]*z[12]*z[13]*(z[12]*z[28]/pow(z[29],0.5)-z[15]*(z[30]+pow(z[28],2)/
  pow(z[29],0.5)))/pow(z[30],2)-z[11]*z[13]*(z[17]+z[33])-z[22]*(rb*z[11]*
  z[14]*z[31]-ra*z[14]-z[43]*z[11]*z[13]*z[22]*z[28]/(pow(z[29],0.5)*pow(
  z[30],2)))-z[13]*z[21]*(ra-rb*z[11]*(z[31]+z[16]*z[21]*z[28]/(pow(z[29],0.5)*
  pow(z[30],2))-z[44]*(z[30]+pow(z[28],2)/pow(z[29],0.5))/pow(z[30],2))));
  q3p = z[45];
  z[9] = cos(q1);
  z[10] = sin(q1);
  z[20] = z[12]*z[13];
  z[50] = z[9]*z[14] + z[10]*z[20];
  z[19] = z[12]*z[14];
  z[46] = z[9]*z[13] - z[10]*z[19];
  z[52] = (z[17]*z[50]+z[18]*z[46])*q3p;
  q4p = -z[52];
  z[51] = z[10]*z[14] - z[9]*z[20];
  z[47] = z[9]*z[19] + z[10]*z[13];
  z[53] = (z[17]*z[51]+z[18]*z[47])*q3p;
  q5p = -z[53];
  z[42] = z[34]/z[39];
  z[54] = z[42]*(k+z[18]);
  z[55] = z[17]*z[41] + z[40]*(k+z[18]);
  z[56] = z[17]*z[42];
  z[26] = z[15]*z[11] - z[16]*z[19];
  z[59] = z[26]*z[28];
  z[61] = z[59]/pow(z[29],0.5);
  z[63] = (z[26]*z[30]+z[28]*z[61])/pow(z[30],2);
  z[65] = z[61]/pow(z[30],2);
  z[70] = rb*(z[15]*z[63]-z[11]*z[31]-z[12]*z[65]);
  z[67] = rb*(z[16]*z[63]+z[19]*z[31]-z[21]*z[65]);
  z[72] = rb*(z[20]*z[31]-z[22]*z[65]);
  z[75] = 2*z[34]*z[70] + 2*z[36]*z[67] - 2*z[37]*z[72];
  z[77] = z[75]/pow(z[38],0.5);
  z[87] = (z[37]*z[77]+2*z[39]*z[72])/pow(z[39],2);
  z[89] = w*z[87];
  z[58] = z[16]*z[22];
  z[60] = z[28]*z[58];
  z[62] = z[60]/pow(z[29],0.5);
  z[64] = (z[28]*z[62]+z[30]*z[58])/pow(z[30],2);
  z[66] = z[62]/pow(z[30],2);
  z[71] = rb*(z[15]*z[64]-z[12]*z[66]);
  z[68] = rb*(z[16]*z[64]-z[21]*z[66]-z[22]*z[31]);
  z[69] = z[18] + z[68];
  z[73] = rb*(z[21]*z[31]-z[22]*z[66]);
  z[74] = z[17] - z[73];
  z[76] = 2*z[34]*z[71] + 2*z[36]*z[69] + 2*z[37]*z[74];
  z[78] = z[76]/pow(z[38],0.5);
  z[88] = (z[37]*z[78]-2*z[39]*z[74])/pow(z[39],2);
  z[90] = w*z[88];
  z[93] = -0.5*z[89]*q2p - 0.5*z[90]*q3p;
  z[79] = (z[36]*z[77]-2*z[39]*z[67])/pow(z[39],2);
  z[81] = w*z[79];
  z[80] = (z[36]*z[78]-2*z[39]*z[69])/pow(z[39],2);
  z[82] = w*z[80];
  z[91] = -0.5*z[81]*q2p - 0.5*z[82]*q3p;
  z[83] = (z[34]*z[77]-2*z[39]*z[70])/pow(z[39],2);
  z[85] = w*z[83];
  z[84] = (z[34]*z[78]-2*z[39]*z[71])/pow(z[39],2);
  z[86] = w*z[84];
  z[92] = 0.5*z[85]*q2p + 0.5*z[86]*q3p;
  z[97] = -z[17]*z[42] - 0.5*z[84]*(k+z[18]);
  z[99] = w*z[97];
  z[98] = z[83]*(k+z[18]);
  z[100] = w*z[98];
  z[109] = z[99]*q3p - pow(w,2)*z[41]*z[55] - pow(w,2)*z[42]*z[56] - 0.5*
  z[100]*q2p;
  z[101] = z[18]*z[41] - z[17]*z[40] - 0.5*z[17]*z[88] - 0.5*z[80]*(k+z[18]);
  z[103] = w*z[101];
  z[102] = -0.5*z[17]*z[87] - 0.5*z[79]*(k+z[18]);
  z[104] = w*z[102];
  z[110] = pow(w,2)*z[41]*z[54] + z[103]*q3p + z[104]*q2p - pow(w,2)*z[40]*
  z[56];
  z[105] = z[18]*z[42] - 0.5*z[17]*z[84];
  z[107] = w*z[105];
  z[106] = z[17]*z[83];
  z[108] = w*z[106];
  z[111] = pow(w,2)*z[40]*z[55] + pow(w,2)*z[42]*z[54] + z[107]*q3p - 0.5*
  z[108]*q2p;
  z[114] = z[113]*(z[21]*z[54]-z[12]*z[55]-z[22]*z[56]) + Izz*z[41]*z[93] + 
  z[40]*(Ixx*z[91]+Ixy*z[92]) + m*(z[54]*z[109]+z[55]*z[110]+z[56]*z[111]) - 
  z[42]*(Ixy*z[91]+Iyy*z[92]);
  z[112] = -Iyy*pow(z[42],2) - Izz*pow(z[41],2) - z[40]*(Ixx*z[40]-2*Ixy*
  z[42]) - m*(pow(z[54],2)+pow(z[55],2)+pow(z[56],2));
  z[115] = z[114]/z[112];
  wp = z[115];
} // eoms()

void SlottedDiscs::computeOutputs(void)
{
  w2 = -w*z[42];
  z[48] = z[10]*z[11];
  z[49] = z[9]*z[11];
  ke = 0.5*pow(w,2)*(Iyy*pow(z[42],2)+Izz*pow(z[41],2)+z[40]*(Ixx*z[40]-2*Ixy*
  z[42])+m*(pow(z[54],2)+pow(z[55],2)+pow(z[56],2)));
  pe = g*m*(z[17]*z[21]+z[22]*(k+z[18]));
  te = ke + pe;
  z[116] = z[1]*z[46] + z[2]*z[47];
  z[117] = z[2]*z[49] - z[1]*z[48];
  z[118] = z[1]*z[50] + z[2]*z[51];
  z[119] = z[4]*z[46] + z[6]*z[21] - z[5]*z[47];
  z[120] = -z[4]*z[48] - z[5]*z[49] - z[6]*z[12];
  z[121] = z[4]*z[50] - z[5]*z[51] - z[6]*z[22];
  z[122] = z[3]*z[21] + z[8]*z[47] - z[7]*z[46];
  z[123] = z[7]*z[48] + z[8]*z[49] - z[3]*z[12];
  z[124] = z[8]*z[51] - z[3]*z[22] - z[7]*z[50];
  z[125] = z[15]*z[116] + z[16]*z[117];
  z[126] = z[15]*z[117] - z[16]*z[116];
  z[127] = z[15]*z[119] + z[16]*z[120];
  z[128] = z[15]*z[120] - z[16]*z[119];
  z[129] = z[15]*z[122] + z[16]*z[123];
  z[130] = z[15]*z[123] - z[16]*z[122];
  z[131] = z[1]*z[9] + z[2]*z[10];
  z[132] = z[2]*z[9] - z[1]*z[10];
  z[133] = z[4]*z[9] - z[5]*z[10];
  z[134] = -z[4]*z[10] - z[5]*z[9];
  z[135] = z[8]*z[10] - z[7]*z[9];
  z[136] = z[7]*z[10] + z[8]*z[9];
  z[137] = pow(z[33],2) + pow(z[34],2) + pow(z[35],2);
  z[138] = pow(z[137],0.5);
  z[139] = z[33]/z[138];
  z[140] = z[34]/z[138];
  z[141] = z[35]/z[138];
  z[142] = z[15]*z[11] - z[16]*z[12]*z[14];
  z[143] = z[142]*(z[30]+pow(z[28],2)/pow(z[29],0.5))/pow(z[30],2);
  z[144] = z[28]*z[142]/(pow(z[29],0.5)*pow(z[30],2));
  z[145] = rb*(z[21]*z[144]-z[16]*z[143]-z[12]*z[14]*z[31]);
  z[146] = rb*(z[15]*z[143]-z[11]*z[31]-z[12]*z[144]);
  z[147] = rb*(z[22]*z[144]-z[12]*z[13]*z[31]);
  z[148] = 2*z[34]*z[146] + 2*z[37]*z[147] - 2*z[36]*z[145];
  z[149] = (2*z[39]*z[145]+z[36]*z[148]/pow(z[38],0.5))/pow(z[39],2);
  z[150] = (2*z[39]*z[147]-z[37]*z[148]/pow(z[38],0.5))/pow(z[39],2);
  z[151] = (w*z[11]*(z[13]*z[150]+z[14]*z[149])-2*z[12]*(w1*z[14]-w3*z[13]))/
  pow(z[11],2);
  z[152] = z[16]*z[11]*z[13]*z[28];
  z[153] = (z[16]*z[11]*z[13]*z[30]+z[28]*z[152]/pow(z[29],0.5))/pow(z[30],2);
  z[154] = rb*(z[16]*z[153]-z[11]*z[13]*z[31]-z[21]*z[152]/(pow(z[29],0.5)*
  pow(z[30],2)));
  z[155] = rb*(z[15]*z[153]-z[12]*z[152]/(pow(z[29],0.5)*pow(z[30],2)));
  z[156] = rb*(z[11]*z[14]*z[31]-z[22]*z[152]/(pow(z[29],0.5)*pow(z[30],2)));
  z[157] = 2*z[34]*z[155] + 2*z[36]*(z[154]+ra*z[13]) - 2*z[37]*(z[156]-ra*
  z[14]);
  z[158] = (z[36]*z[157]/pow(z[38],0.5)-2*z[39]*(z[154]+ra*z[13]))/pow(z[39],
  2);
  z[159] = (z[37]*z[157]/pow(z[38],0.5)+2*z[39]*(z[156]-ra*z[14]))/pow(z[39],
  2);
  z[160] = (2*w1*z[13]+2*w3*z[14]+w*z[13]*z[159]-w*z[14]*z[158])/z[11];
  z[161] = (z[13]*z[41]-z[14]*z[40])/z[11];
  z[162] = w*(z[13]*z[149]-z[14]*z[150]);
  z[163] = w3*z[13] - w1*z[14] - 0.5*w*z[13]*z[158] - 0.5*w*z[14]*z[159];
  z[164] = z[13]*z[40] + z[14]*z[41];
  z[166] = (z[162]*(z[11]*z[14]*(l+z[18]-z[35])+z[43]*z[11]*z[12]*z[13]*(
  z[12]*z[28]/pow(z[29],0.5)-z[15]*(z[30]+pow(z[28],2)/pow(z[29],0.5)))/pow(
  z[30],2)-z[11]*z[13]*(z[17]+z[33])-z[22]*(rb*z[11]*z[14]*z[31]-ra*z[14]-
  z[43]*z[11]*z[13]*z[22]*z[28]/(pow(z[29],0.5)*pow(z[30],2)))-z[13]*z[21]*(
  ra-rb*z[11]*(z[31]+z[16]*z[21]*z[28]/(pow(z[29],0.5)*pow(z[30],2))-z[44]*(
  z[30]+pow(z[28],2)/pow(z[29],0.5))/pow(z[30],2))))*(z[11]*z[34]+rb*z[22]*(
  z[12]*z[13]*z[31]-z[22]*z[28]*(z[15]*z[11]-z[16]*z[12]*z[14])/(pow(z[29],
  0.5)*pow(z[30],2)))-z[12]*z[14]*(z[17]+z[33])-z[12]*z[13]*(l+z[18]-z[35])-
  rb*z[12]*(z[11]*z[31]+z[12]*z[28]*(z[15]*z[11]-z[16]*z[12]*z[14])/(pow(
  z[29],0.5)*pow(z[30],2))-z[15]*(z[30]+pow(z[28],2)/pow(z[29],0.5))*(z[15]*
  z[11]-z[16]*z[12]*z[14])/pow(z[30],2))-rb*z[21]*(z[21]*z[28]*(z[15]*z[11]-
  z[16]*z[12]*z[14])/(pow(z[29],0.5)*pow(z[30],2))-z[12]*z[14]*z[31]-z[16]*(
  z[30]+pow(z[28],2)/pow(z[29],0.5))*(z[15]*z[11]-z[16]*z[12]*z[14])/pow(
  z[30],2)))+2*(z[11]*z[34]+rb*z[22]*(z[12]*z[13]*z[31]-z[22]*z[28]*(z[15]*
  z[11]-z[16]*z[12]*z[14])/(pow(z[29],0.5)*pow(z[30],2)))-z[12]*z[14]*(z[17]+
  z[33])-z[12]*z[13]*(l+z[18]-z[35])-rb*z[12]*(z[11]*z[31]+z[12]*z[28]*(z[15]*
  z[11]-z[16]*z[12]*z[14])/(pow(z[29],0.5)*pow(z[30],2))-z[15]*(z[30]+pow(
  z[28],2)/pow(z[29],0.5))*(z[15]*z[11]-z[16]*z[12]*z[14])/pow(z[30],2))-rb*
  z[21]*(z[21]*z[28]*(z[15]*z[11]-z[16]*z[12]*z[14])/(pow(z[29],0.5)*pow(
  z[30],2))-z[12]*z[14]*z[31]-z[16]*(z[30]+pow(z[28],2)/pow(z[29],0.5))*(
  z[15]*z[11]-z[16]*z[12]*z[14])/pow(z[30],2)))*(z[11]*z[13]*z[145]+z[12]*
  z[13]*(z[17]+z[33])+2*z[43]*z[11]*z[12]*z[13]*z[142]*pow(z[28],2)*(z[12]-
  z[15]*z[28])/(z[29]*pow(z[30],3))+z[43]*z[11]*z[12]*z[13]*z[142]*(z[12]*
  z[29]+z[12]*pow(z[28],2)-z[15]*z[28]*(3*z[29]+pow(z[28],2)))/(pow(z[29],1.5)*
  pow(z[30],2))-z[11]*z[14]*z[147]-z[12]*z[14]*(l+z[18]-z[35])-2*z[43]*z[11]*
  z[12]*z[22]*z[28]*pow(z[13],2)/(pow(z[29],0.5)*pow(z[30],2))-rb*z[11]*z[12]*
  z[13]*z[14]*(2*z[16]*z[21]*z[28]/(pow(z[29],0.5)*pow(z[30],2))-z[44]*(z[30]+
  pow(z[28],2)/pow(z[29],0.5))/pow(z[30],2))-z[43]*z[13]*(pow(z[12],2)*(z[12]*
  z[28]/pow(z[29],0.5)-z[15]*(z[30]+pow(z[28],2)/pow(z[29],0.5)))-pow(z[11],2)*(
  2*z[12]*z[28]/pow(z[29],0.5)-z[15]*(z[30]+pow(z[28],2)/pow(z[29],0.5))))/
  pow(z[30],2)-z[22]*(rb*z[11]*z[14]*z[144]-rb*z[12]*z[14]*z[31]-z[43]*z[13]*
  z[22]*(z[11]*z[142]-z[12]*z[28])/(pow(z[29],0.5)*pow(z[30],2))-z[43]*z[11]*
  z[13]*z[22]*z[142]*pow(z[28],2)*(2+z[30]/pow(z[29],0.5))/(z[29]*pow(z[30],3)))-
  rb*z[13]*z[21]*(z[12]*(z[31]+z[16]*z[21]*z[28]/(pow(z[29],0.5)*pow(z[30],2))-
  z[44]*(z[30]+pow(z[28],2)/pow(z[29],0.5))/pow(z[30],2))-z[11]*(z[144]+z[16]*
  z[21]*z[142]/(pow(z[29],0.5)*pow(z[30],2))-z[44]*z[28]*z[142]*(3*z[29]+pow(
  z[28],2))/(pow(z[29],1.5)*pow(z[30],2))-z[142]*pow(z[28],2)*(2*z[44]*z[28]-
  z[16]*z[21]*(2+z[30]/pow(z[29],0.5)))/(z[29]*pow(z[30],3)))))*q2p-2*(z[11]*
  z[14]*(l+z[18]-z[35])+z[43]*z[11]*z[12]*z[13]*(z[12]*z[28]/pow(z[29],0.5)-
  z[15]*(z[30]+pow(z[28],2)/pow(z[29],0.5)))/pow(z[30],2)-z[11]*z[13]*(z[17]+
  z[33])-z[22]*(rb*z[11]*z[14]*z[31]-ra*z[14]-z[43]*z[11]*z[13]*z[22]*z[28]/(
  pow(z[29],0.5)*pow(z[30],2)))-z[13]*z[21]*(ra-rb*z[11]*(z[31]+z[16]*z[21]*
  z[28]/(pow(z[29],0.5)*pow(z[30],2))-z[44]*(z[30]+pow(z[28],2)/pow(z[29],0.5))/
  pow(z[30],2))))*(z[11]*z[146]+z[12]*z[13]*z[147]+z[12]*z[14]*z[145]+rb*
  z[22]*(z[11]*z[13]*z[31]+z[12]*z[13]*z[144]-z[22]*z[142]*pow(z[28],2)*(2+
  z[30]/pow(z[29],0.5))*(z[15]*z[11]-z[16]*z[12]*z[14])/(z[29]*pow(z[30],3))-(
  z[22]*z[142]*(z[15]*z[11]-z[16]*z[12]*z[14])-z[22]*z[28]*(z[15]*z[12]+z[16]*
  z[11]*z[14])-2*z[12]*z[13]*z[28]*(z[15]*z[11]-z[16]*z[12]*z[14]))/(pow(
  z[29],0.5)*pow(z[30],2)))-z[12]*z[34]-z[11]*z[14]*(z[17]+z[33])-rb*z[31]*
  pow(z[12],2)*pow(z[13],2)-z[11]*z[13]*(l+z[18]-z[35])-rb*z[12]*z[14]*(z[12]*
  z[14]*z[31]-z[44]*z[12]*z[14]*(z[30]+pow(z[28],2)/pow(z[29],0.5))/pow(z[30],
  2)-2*z[21]*z[28]*(z[15]*z[11]-z[16]*z[12]*z[14])/(pow(z[29],0.5)*pow(z[30],
  2)))-rb*z[11]*(z[11]*z[31]+2*z[12]*z[28]*(z[15]*z[11]-1.5*z[16]*z[12]*z[14])/(
  pow(z[29],0.5)*pow(z[30],2))-z[15]*(z[30]+pow(z[28],2)/pow(z[29],0.5))*(
  z[15]*z[11]-3*z[16]*z[12]*z[14])/pow(z[30],2))-rb*z[12]*(z[11]*z[144]+
  z[165]*z[12]*(z[30]+pow(z[28],2)/pow(z[29],0.5))/pow(z[30],2)-z[12]*z[31]-
  z[12]*(z[15]*z[12]*z[28]-z[142]*(z[15]*z[11]-z[16]*z[12]*z[14]))/(pow(z[29],
  0.5)*pow(z[30],2))-z[15]*z[28]*z[142]*(3*z[29]+pow(z[28],2))*(z[15]*z[11]-
  z[16]*z[12]*z[14])/(pow(z[29],1.5)*pow(z[30],2))-z[142]*pow(z[28],2)*(z[15]*
  z[11]-z[16]*z[12]*z[14])*(2*z[15]*z[28]-z[12]*(2+z[30]/pow(z[29],0.5)))/(
  z[29]*pow(z[30],3)))-rb*z[21]*(z[16]*(z[15]*z[12]+z[16]*z[11]*z[14])*(z[30]+
  pow(z[28],2)/pow(z[29],0.5))/pow(z[30],2)-z[11]*z[14]*z[31]-z[12]*z[14]*
  z[144]-z[16]*z[28]*z[142]*(3*z[29]+pow(z[28],2))*(z[15]*z[11]-z[16]*z[12]*
  z[14])/(pow(z[29],1.5)*pow(z[30],2))-z[21]*(z[28]*(z[15]*z[12]+z[16]*z[11]*
  z[14])-z[142]*(z[15]*z[11]-z[16]*z[12]*z[14]))/(pow(z[29],0.5)*pow(z[30],2))-
  z[142]*pow(z[28],2)*(z[15]*z[11]-z[16]*z[12]*z[14])*(2*z[16]*z[28]-z[21]*(2+
  z[30]/pow(z[29],0.5)))/(z[29]*pow(z[30],3))))*q2p)/pow((z[11]*z[14]*(l+
  z[18]-z[35])+z[43]*z[11]*z[12]*z[13]*(z[12]*z[28]/pow(z[29],0.5)-z[15]*(
  z[30]+pow(z[28],2)/pow(z[29],0.5)))/pow(z[30],2)-z[11]*z[13]*(z[17]+z[33])-
  z[22]*(rb*z[11]*z[14]*z[31]-ra*z[14]-z[43]*z[11]*z[13]*z[22]*z[28]/(pow(
  z[29],0.5)*pow(z[30],2)))-z[13]*z[21]*(ra-rb*z[11]*(z[31]+z[16]*z[21]*z[28]/(
  pow(z[29],0.5)*pow(z[30],2))-z[44]*(z[30]+pow(z[28],2)/pow(z[29],0.5))/pow(
  z[30],2)))),2);
  z[169] = (z[163]*(z[11]*z[14]*(l+z[18]-z[35])+z[43]*z[11]*z[12]*z[13]*(
  z[12]*z[28]/pow(z[29],0.5)-z[15]*(z[30]+pow(z[28],2)/pow(z[29],0.5)))/pow(
  z[30],2)-z[11]*z[13]*(z[17]+z[33])-z[22]*(rb*z[11]*z[14]*z[31]-ra*z[14]-
  z[43]*z[11]*z[13]*z[22]*z[28]/(pow(z[29],0.5)*pow(z[30],2)))-z[13]*z[21]*(
  ra-rb*z[11]*(z[31]+z[16]*z[21]*z[28]/(pow(z[29],0.5)*pow(z[30],2))-z[44]*(
  z[30]+pow(z[28],2)/pow(z[29],0.5))/pow(z[30],2))))*(z[11]*z[34]+rb*z[22]*(
  z[12]*z[13]*z[31]-z[22]*z[28]*(z[15]*z[11]-z[16]*z[12]*z[14])/(pow(z[29],
  0.5)*pow(z[30],2)))-z[12]*z[14]*(z[17]+z[33])-z[12]*z[13]*(l+z[18]-z[35])-
  rb*z[12]*(z[11]*z[31]+z[12]*z[28]*(z[15]*z[11]-z[16]*z[12]*z[14])/(pow(
  z[29],0.5)*pow(z[30],2))-z[15]*(z[30]+pow(z[28],2)/pow(z[29],0.5))*(z[15]*
  z[11]-z[16]*z[12]*z[14])/pow(z[30],2))-rb*z[21]*(z[21]*z[28]*(z[15]*z[11]-
  z[16]*z[12]*z[14])/(pow(z[29],0.5)*pow(z[30],2))-z[12]*z[14]*z[31]-z[16]*(
  z[30]+pow(z[28],2)/pow(z[29],0.5))*(z[15]*z[11]-z[16]*z[12]*z[14])/pow(
  z[30],2)))+(z[11]*z[34]+rb*z[22]*(z[12]*z[13]*z[31]-z[22]*z[28]*(z[15]*
  z[11]-z[16]*z[12]*z[14])/(pow(z[29],0.5)*pow(z[30],2)))-z[12]*z[14]*(z[17]+
  z[33])-z[12]*z[13]*(l+z[18]-z[35])-rb*z[12]*(z[11]*z[31]+z[12]*z[28]*(z[15]*
  z[11]-z[16]*z[12]*z[14])/(pow(z[29],0.5)*pow(z[30],2))-z[15]*(z[30]+pow(
  z[28],2)/pow(z[29],0.5))*(z[15]*z[11]-z[16]*z[12]*z[14])/pow(z[30],2))-rb*
  z[21]*(z[21]*z[28]*(z[15]*z[11]-z[16]*z[12]*z[14])/(pow(z[29],0.5)*pow(
  z[30],2))-z[12]*z[14]*z[31]-z[16]*(z[30]+pow(z[28],2)/pow(z[29],0.5))*(
  z[15]*z[11]-z[16]*z[12]*z[14])/pow(z[30],2)))*(z[11]*z[13]*(z[154]+2*ra*
  z[13])+z[43]*z[11]*z[12]*z[14]*(z[12]*z[28]/pow(z[29],0.5)-z[15]*(z[30]+
  pow(z[28],2)/pow(z[29],0.5)))/pow(z[30],2)-z[11]*z[14]*z[156]-z[11]*z[14]*(
  z[17]+z[33])-z[11]*z[13]*(l+z[18]-z[35])-rb*pow(z[11],2)*pow(z[13],2)*(
  z[31]-z[44]*(z[30]+pow(z[28],2)/pow(z[29],0.5))/pow(z[30],2))-z[11]*z[14]*(
  rb*z[11]*z[14]*z[31]-2*ra*z[14]-2*z[43]*z[11]*z[13]*z[22]*z[28]/(pow(z[29],
  0.5)*pow(z[30],2)))-z[43]*z[11]*z[12]*z[13]*z[152]*(2*z[12]*z[28]/pow(z[29],
  0.5)-z[15]*(z[30]+2*pow(z[28],2)/pow(z[29],0.5)))/(pow(z[29],0.5)*pow(z[30],
  3))-z[14]*z[21]*(ra-rb*z[11]*(z[31]+z[16]*z[21]*z[28]/(pow(z[29],0.5)*pow(
  z[30],2))-z[44]*(z[30]+pow(z[28],2)/pow(z[29],0.5))/pow(z[30],2)))-z[43]*
  z[11]*z[12]*z[13]*(z[12]*z[28]*z[152]+z[16]*z[11]*z[12]*z[13]*z[29]-z[15]*
  z[28]*(z[28]*z[152]+2*z[16]*z[11]*z[13]*z[29]))/(pow(z[29],1.5)*pow(z[30],2))-
  z[22]*(ra*z[13]+z[43]*z[11]*z[13]*z[22]*z[28]*z[152]*(2+z[30]/pow(z[29],0.5))/(
  z[29]*pow(z[30],3))-rb*z[11]*z[13]*z[31]-z[11]*(rb*z[14]*z[152]+z[43]*z[14]*
  z[22]*z[28]-z[167]*z[11]*z[22]*pow(z[13],2))/(pow(z[29],0.5)*pow(z[30],2)))-
  rb*z[11]*z[13]*z[21]*((z[152]+z[44]*z[11]*z[13]*z[21]+2*z[16]*z[11]*z[13]*
  z[28])/(pow(z[29],0.5)*pow(z[30],2))-z[44]*(z[29]*z[152]+z[152]*pow(z[28],2)+
  2*z[16]*z[11]*z[13]*z[28]*z[29])/(pow(z[29],1.5)*pow(z[30],2))-z[28]*z[152]*(
  2*z[44]*z[28]-z[16]*z[21]*(2+z[30]/pow(z[29],0.5)))/(z[29]*pow(z[30],3))))*
  q2p+(z[11]*z[14]*(l+z[18]-z[35])+z[43]*z[11]*z[12]*z[13]*(z[12]*z[28]/pow(
  z[29],0.5)-z[15]*(z[30]+pow(z[28],2)/pow(z[29],0.5)))/pow(z[30],2)-z[11]*
  z[13]*(z[17]+z[33])-z[22]*(rb*z[11]*z[14]*z[31]-ra*z[14]-z[43]*z[11]*z[13]*
  z[22]*z[28]/(pow(z[29],0.5)*pow(z[30],2)))-z[13]*z[21]*(ra-rb*z[11]*(z[31]+
  z[16]*z[21]*z[28]/(pow(z[29],0.5)*pow(z[30],2))-z[44]*(z[30]+pow(z[28],2)/
  pow(z[29],0.5))/pow(z[30],2))))*(z[11]*z[155]+z[12]*z[14]*(l+z[18]-z[35])+2*
  rb*z[11]*z[14]*z[22]*z[28]*(z[15]*z[11]-z[16]*z[12]*z[14])/(pow(z[29],0.5)*
  pow(z[30],2))-z[12]*z[13]*z[156]-z[12]*z[14]*z[154]-z[12]*z[13]*(z[17]+
  z[33])-rb*z[11]*z[13]*(z[15]*z[11]-z[16]*z[12]*z[14])*(2*z[21]*z[28]/(pow(
  z[29],0.5)*pow(z[30],2))-z[16]*(z[30]+pow(z[28],2)/pow(z[29],0.5))/pow(
  z[30],2))-rb*z[22]*(z[12]*z[14]*z[31]+z[22]*z[28]*z[152]*(2+z[30]/pow(z[29],
  0.5))*(z[15]*z[11]-z[16]*z[12]*z[14])/(z[29]*pow(z[30],3))-z[13]*(z[12]*
  z[152]+z[16]*z[12]*z[22]*z[28]-z[16]*z[11]*z[22]*(z[15]*z[11]-z[16]*z[12]*
  z[14]))/(pow(z[29],0.5)*pow(z[30],2)))-rb*z[12]*(z[168]*z[12]*z[13]*(z[30]+
  pow(z[28],2)/pow(z[29],0.5))/pow(z[30],2)-z[28]*z[152]*(z[15]*z[11]-z[16]*
  z[12]*z[14])*(2*z[15]*z[28]-z[12]*(2+z[30]/pow(z[29],0.5)))/(z[29]*pow(
  z[30],3))-z[15]*(z[15]*z[11]-z[16]*z[12]*z[14])*(z[29]*z[152]+z[152]*pow(
  z[28],2)+2*z[16]*z[11]*z[13]*z[28]*z[29])/(pow(z[29],1.5)*pow(z[30],2))-(
  z[16]*z[13]*z[28]*pow(z[12],2)-z[11]*z[152]-z[16]*z[11]*z[12]*z[13]*(z[15]*
  z[11]-z[16]*z[12]*z[14]))/(pow(z[29],0.5)*pow(z[30],2)))-rb*z[21]*(z[44]*
  z[12]*z[13]*(z[30]+pow(z[28],2)/pow(z[29],0.5))/pow(z[30],2)-z[12]*z[13]*
  z[31]-z[28]*z[152]*(z[15]*z[11]-z[16]*z[12]*z[14])*(2*z[16]*z[28]-z[21]*(2+
  z[30]/pow(z[29],0.5)))/(z[29]*pow(z[30],3))-z[16]*(z[15]*z[11]-z[16]*z[12]*
  z[14])*(z[29]*z[152]+z[152]*pow(z[28],2)+2*z[16]*z[11]*z[13]*z[28]*z[29])/(
  pow(z[29],1.5)*pow(z[30],2))-(z[12]*z[14]*z[152]+z[16]*z[12]*z[13]*z[21]*
  z[28]-z[16]*z[11]*z[13]*z[21]*(z[15]*z[11]-z[16]*z[12]*z[14]))/(pow(z[29],
  0.5)*pow(z[30],2))))*q2p)/pow((z[11]*z[14]*(l+z[18]-z[35])+z[43]*z[11]*
  z[12]*z[13]*(z[12]*z[28]/pow(z[29],0.5)-z[15]*(z[30]+pow(z[28],2)/pow(z[29],
  0.5)))/pow(z[30],2)-z[11]*z[13]*(z[17]+z[33])-z[22]*(rb*z[11]*z[14]*z[31]-
  ra*z[14]-z[43]*z[11]*z[13]*z[22]*z[28]/(pow(z[29],0.5)*pow(z[30],2)))-z[13]*
  z[21]*(ra-rb*z[11]*(z[31]+z[16]*z[21]*z[28]/(pow(z[29],0.5)*pow(z[30],2))-
  z[44]*(z[30]+pow(z[28],2)/pow(z[29],0.5))/pow(z[30],2)))),2);
  z[170] = z[164]*(z[11]*z[34]+rb*z[22]*(z[12]*z[13]*z[31]-z[22]*z[28]*(z[15]*
  z[11]-z[16]*z[12]*z[14])/(pow(z[29],0.5)*pow(z[30],2)))-z[12]*z[14]*(z[17]+
  z[33])-z[12]*z[13]*(l+z[18]-z[35])-rb*z[12]*(z[11]*z[31]+z[12]*z[28]*(z[15]*
  z[11]-z[16]*z[12]*z[14])/(pow(z[29],0.5)*pow(z[30],2))-z[15]*(z[30]+pow(
  z[28],2)/pow(z[29],0.5))*(z[15]*z[11]-z[16]*z[12]*z[14])/pow(z[30],2))-rb*
  z[21]*(z[21]*z[28]*(z[15]*z[11]-z[16]*z[12]*z[14])/(pow(z[29],0.5)*pow(
  z[30],2))-z[12]*z[14]*z[31]-z[16]*(z[30]+pow(z[28],2)/pow(z[29],0.5))*(
  z[15]*z[11]-z[16]*z[12]*z[14])/pow(z[30],2)))/(z[11]*z[14]*(l+z[18]-z[35])+
  z[43]*z[11]*z[12]*z[13]*(z[12]*z[28]/pow(z[29],0.5)-z[15]*(z[30]+pow(z[28],
  2)/pow(z[29],0.5)))/pow(z[30],2)-z[11]*z[13]*(z[17]+z[33])-z[22]*(rb*z[11]*
  z[14]*z[31]-ra*z[14]-z[43]*z[11]*z[13]*z[22]*z[28]/(pow(z[29],0.5)*pow(
  z[30],2)))-z[13]*z[21]*(ra-rb*z[11]*(z[31]+z[16]*z[21]*z[28]/(pow(z[29],0.5)*
  pow(z[30],2))-z[44]*(z[30]+pow(z[28],2)/pow(z[29],0.5))/pow(z[30],2))));
  z[171] = z[9]*z[20] - z[10]*z[14];
  z[172] = -z[9]*z[19] - z[10]*z[13];
  z[173] = (z[17]*z[171]+z[18]*z[172])*q3p;
  z[174] = z[10]*z[11]*(z[13]*z[17]-z[14]*z[18])*q3p - 0.5*(z[17]*z[50]+z[18]*
  z[46])*z[166];
  z[175] = z[9]*z[13] - z[10]*z[12]*z[14];
  z[176] = -z[9]*z[14] - z[10]*z[12]*z[13];
  z[177] = (z[17]*z[175]+z[18]*z[176]+ra*z[13]*z[50]-ra*z[14]*z[46])*q3p + (
  z[17]*z[50]+z[18]*z[46])*z[169];
  z[178] = z[170]*(z[17]*z[50]+z[18]*z[46]);
  z[179] = -z[9]*z[11]*(z[13]*z[17]-z[14]*z[18])*q3p - 0.5*(z[17]*z[51]+z[18]*
  z[47])*z[166];
  z[180] = z[10]*z[13] + z[9]*z[12]*z[14];
  z[181] = z[9]*z[12]*z[13] - z[10]*z[14];
  z[182] = (z[17]*z[180]+z[18]*z[181]+ra*z[13]*z[51]-ra*z[14]*z[47])*q3p + (
  z[17]*z[51]+z[18]*z[47])*z[169];
  z[183] = z[170]*(z[17]*z[51]+z[18]*z[47]);
  z[184] = (2*z[39]*z[146]-z[34]*z[148]/pow(z[38],0.5))/pow(z[39],2);
  z[185] = 0.5*z[17]*z[150] - 0.5*z[149]*(k+z[18]);
  z[186] = -z[15]*z[12] - z[16]*z[11]*z[14];
  z[187] = z[26]*z[142] + z[28]*z[186];
  z[188] = (z[29]*z[187]+z[28]*z[59]*z[142])/pow(z[29],1.5);
  z[189] = (z[30]*(z[28]*z[188]+z[30]*z[186]+z[61]*z[142])+z[28]*z[142]*(
  z[26]*z[30]+2*z[28]*z[61])/pow(z[29],0.5))/pow(z[30],3);
  z[190] = (z[30]*z[188]+2*z[28]*z[61]*z[142]/pow(z[29],0.5))/pow(z[30],3);
  z[191] = rb*(z[15]*z[189]+z[12]*z[31]-z[11]*z[65]-z[11]*z[144]-z[12]*z[190]);
  z[192] = rb*(z[21]*z[190]-z[16]*z[189]-z[19]*z[144]-z[11]*z[14]*z[31]-z[12]*
  z[14]*z[65]);
  z[193] = rb*(z[22]*z[190]-z[20]*z[144]-z[11]*z[13]*z[31]-z[12]*z[13]*z[65]);
  z[194] = 2*z[34]*z[191] + 2*z[37]*z[193] + 2*z[70]*z[146] - 2*z[36]*z[192] - 
  2*z[67]*z[145] - 2*z[72]*z[147];
  z[195] = (2*z[38]*z[194]-z[75]*z[148])/pow(z[38],1.5);
  z[196] = (2*z[148]*(z[37]*z[77]+z[39]*z[72])/pow(z[38],0.5)+z[39]*(4*z[39]*
  z[193]-2*z[77]*z[147]-z[37]*z[195]))/pow(z[39],3);
  z[197] = z[58]*z[142] - z[16]*z[12]*z[13]*z[28];
  z[198] = (z[29]*z[197]+z[28]*z[60]*z[142])/pow(z[29],1.5);
  z[199] = (z[28]*z[142]*(z[30]*z[58]+2*z[28]*z[62])/pow(z[29],0.5)+z[30]*(
  z[28]*z[198]+z[62]*z[142]-z[16]*z[12]*z[13]*z[30]))/pow(z[30],3);
  z[200] = (z[30]*z[198]+2*z[28]*z[62]*z[142]/pow(z[29],0.5))/pow(z[30],3);
  z[201] = rb*(z[15]*z[199]-z[11]*z[66]-z[12]*z[200]);
  z[202] = rb*(z[21]*z[200]+z[22]*z[144]-z[16]*z[199]-z[12]*z[13]*z[31]-z[12]*
  z[14]*z[66]);
  z[203] = rb*(z[21]*z[144]+z[12]*z[13]*z[66]-z[22]*z[200]-z[12]*z[14]*z[31]);
  z[204] = 2*z[34]*z[201] + 2*z[71]*z[146] + 2*z[74]*z[147] - 2*z[36]*z[202] - 
  2*z[37]*z[203] - 2*z[69]*z[145];
  z[205] = (2*z[38]*z[204]-z[76]*z[148])/pow(z[38],1.5);
  z[206] = (2*z[37]*z[78]*z[148]/pow(z[38],0.5)-z[39]*(z[37]*z[205]+2*z[78]*
  z[147]+4*z[39]*z[203]+2*z[74]*z[148]/pow(z[38],0.5)))/pow(z[39],3);
  z[207] = 0.25*z[89]*z[162] + 0.25*w*z[196]*q2p + 0.25*w*z[206]*q3p + 0.25*
  z[90]*z[166];
  z[208] = (2*z[36]*z[77]*z[148]/pow(z[38],0.5)+z[39]*(2*z[77]*z[145]-4*z[39]*
  z[192]-z[36]*z[195]-2*z[67]*z[148]/pow(z[38],0.5)))/pow(z[39],3);
  z[209] = (2*z[36]*z[78]*z[148]/pow(z[38],0.5)+z[39]*(2*z[78]*z[145]-4*z[39]*
  z[202]-z[36]*z[205]-2*z[69]*z[148]/pow(z[38],0.5)))/pow(z[39],3);
  z[210] = 0.25*z[81]*z[162] + 0.25*w*z[208]*q2p + 0.25*w*z[209]*q3p + 0.25*
  z[82]*z[166];
  z[211] = (2*z[34]*z[77]*z[148]/pow(z[38],0.5)+z[39]*(4*z[39]*z[191]-2*z[77]*
  z[146]-z[34]*z[195]-2*z[70]*z[148]/pow(z[38],0.5)))/pow(z[39],3);
  z[212] = (2*z[34]*z[78]*z[148]/pow(z[38],0.5)+z[39]*(4*z[39]*z[201]-2*z[78]*
  z[146]-z[34]*z[205]-2*z[71]*z[148]/pow(z[38],0.5)))/pow(z[39],3);
  z[213] = -0.25*z[85]*z[162] - 0.25*w*z[211]*q2p - 0.25*w*z[212]*q3p - 0.25*
  z[86]*z[166];
  z[214] = 0.25*z[212]*(k+z[18]) - 0.5*z[17]*z[184];
  z[215] = w*z[211]*(k+z[18]);
  z[216] = 0.25*z[100]*z[162] + 0.25*z[215]*q2p + w*z[214]*q3p - pow(w,2)*
  z[41]*z[185] - 0.5*pow(w,2)*z[55]*z[150] - 0.5*pow(w,2)*z[56]*z[184] - 0.5*
  pow(w,2)*z[17]*z[42]*z[184] - 0.5*z[99]*z[166];
  z[217] = 0.25*z[17]*z[206] + 0.5*z[17]*z[149] + 0.5*z[18]*z[150] + 0.25*
  z[209]*(k+z[18]);
  z[218] = 0.25*z[17]*z[196] + 0.25*z[208]*(k+z[18]);
  z[219] = 0.5*pow(w,2)*z[54]*z[150] + 0.5*pow(w,2)*z[56]*z[149] + 0.5*pow(w,
  2)*z[41]*z[184]*(k+z[18]) + w*z[217]*q3p + w*z[218]*q2p - 0.5*z[104]*z[162] - 
  0.5*pow(w,2)*z[17]*z[40]*z[184] - 0.5*z[103]*z[166];
  z[220] = 0.25*z[17]*z[212] + 0.5*z[18]*z[184];
  z[221] = 0.25*z[108]*z[162] + pow(w,2)*z[40]*z[185] + 0.5*pow(w,2)*z[54]*
  z[184] + 0.5*pow(w,2)*z[42]*z[184]*(k+z[18]) + w*z[220]*q3p + 0.25*w*z[17]*
  z[211]*q2p - 0.5*pow(w,2)*z[55]*z[149] - 0.5*z[107]*z[166];
  z[222] = Izz*z[41]*z[207] + 0.5*Izz*z[150]*z[93] + z[40]*(Ixx*z[210]+Ixy*
  z[213]) + 0.5*m*(2*z[54]*z[216]+2*z[55]*z[219]+2*z[56]*z[221]+2*z[185]*
  z[110]+z[17]*z[184]*z[111]+z[184]*(k+z[18])*z[109]) - 0.5*z[113]*(2*z[11]*
  z[55]+2*z[12]*z[185]+z[17]*z[22]*z[184]+2*z[12]*z[14]*z[54]-2*z[12]*z[13]*
  z[56]-z[21]*z[184]*(k+z[18])) - z[42]*(Ixy*z[210]+Iyy*z[213]) - 0.5*z[149]*(
  Ixx*z[91]+Ixy*z[92]) - 0.5*z[184]*(Ixy*z[91]+Iyy*z[92]);
  z[223] = z[40]*(Ixx*z[149]+Ixy*z[184]) - Ixy*z[42]*z[149] - Iyy*z[42]*
  z[184] - Izz*z[41]*z[150] - m*(2*z[55]*z[185]+z[17]*z[56]*z[184]+z[54]*
  z[184]*(k+z[18]));
  z[224] = (z[112]*z[222]-z[223]*z[114])/pow(z[112],2);
  z[225] = (2*z[39]*z[155]-z[34]*z[157]/pow(z[38],0.5))/pow(z[39],2);
  z[226] = 0.5*z[225]*(k+z[18]) - ra*z[14]*z[42];
  z[227] = ra*z[13]*z[41] - 0.5*z[17]*z[159] - ra*z[14]*z[40] - 0.5*z[158]*(k+
  z[18]);
  z[228] = 0.5*z[17]*z[225] + ra*z[13]*z[42];
  z[229] = z[16]*z[13]*(z[11]*z[26]-z[12]*z[28]);
  z[230] = (z[29]*z[229]+z[59]*z[152])/pow(z[29],1.5);
  z[231] = (z[152]*(z[26]*z[30]+2*z[28]*z[61])/pow(z[29],0.5)+z[30]*(z[28]*
  z[230]+z[16]*z[11]*z[13]*z[61]-z[16]*z[12]*z[13]*z[30]))/pow(z[30],3);
  z[232] = (z[30]*z[230]+2*z[61]*z[152]/pow(z[29],0.5))/pow(z[30],3);
  z[233] = rb*(z[15]*z[231]-z[12]*z[232]-z[11]*z[152]/(pow(z[29],0.5)*pow(
  z[30],2)));
  z[234] = rb*(z[21]*z[232]+z[11]*z[13]*z[65]-z[16]*z[231]-z[12]*z[13]*z[31]-
  z[19]*z[152]/(pow(z[29],0.5)*pow(z[30],2)));
  z[235] = rb*(z[22]*z[232]+z[12]*z[14]*z[31]-z[11]*z[14]*z[65]-z[20]*z[152]/(
  pow(z[29],0.5)*pow(z[30],2)));
  z[236] = 2*z[34]*z[233] + 2*z[37]*z[235] + 2*z[70]*z[155] + 2*z[67]*(z[154]+
  ra*z[13]) + 2*z[72]*(z[156]-ra*z[14]) - 2*z[36]*z[234];
  z[237] = (2*z[38]*z[236]-z[75]*z[157])/pow(z[38],1.5);
  z[238] = (2*z[157]*(z[37]*z[77]+z[39]*z[72])/pow(z[38],0.5)-z[39]*(z[37]*
  z[237]-4*z[39]*z[235]-2*z[77]*(z[156]-ra*z[14])))/pow(z[39],3);
  z[239] = z[16]*z[11]*(z[13]*z[58]-z[14]*z[28]);
  z[240] = (z[29]*z[239]+z[60]*z[152])/pow(z[29],1.5);
  z[241] = (z[152]*(z[30]*z[58]+2*z[28]*z[62])/pow(z[29],0.5)+z[30]*(z[28]*
  z[240]+z[16]*z[11]*z[13]*z[62]-z[16]*z[11]*z[14]*z[30]))/pow(z[30],3);
  z[242] = (z[30]*z[240]+2*z[62]*z[152]/pow(z[29],0.5))/pow(z[30],3);
  z[243] = rb*(z[15]*z[241]-z[12]*z[242]);
  z[244] = rb*(z[16]*z[241]+z[11]*z[14]*z[31]-z[21]*z[242]-z[11]*z[13]*z[66]-
  z[22]*z[152]/(pow(z[29],0.5)*pow(z[30],2)));
  z[245] = rb*(z[22]*z[242]-z[11]*z[13]*z[31]-z[11]*z[14]*z[66]-z[21]*z[152]/(
  pow(z[29],0.5)*pow(z[30],2)));
  z[246] = 2*z[34]*z[243] + 2*z[71]*z[155] + 2*z[37]*(z[245]+ra*z[13]) + 2*
  z[69]*(z[154]+ra*z[13]) + 2*z[36]*(z[244]-ra*z[14]) - 2*z[74]*(z[156]-ra*
  z[14]);
  z[247] = (2*z[38]*z[246]-z[76]*z[157])/pow(z[38],1.5);
  z[248] = (2*z[157]*(z[37]*z[78]-z[39]*z[74])/pow(z[38],0.5)-z[39]*(z[37]*
  z[247]-4*z[39]*(z[245]+ra*z[13])-2*z[78]*(z[156]-ra*z[14])))/pow(z[39],3);
  z[249] = 0.25*w*z[238]*q2p + 0.25*w*z[248]*q3p - 0.5*z[89]*z[163] - 0.5*
  z[90]*z[169];
  z[250] = (2*z[157]*(z[36]*z[77]-z[39]*z[67])/pow(z[38],0.5)-z[39]*(z[36]*
  z[237]+4*z[39]*z[234]+2*z[77]*(z[154]+ra*z[13])))/pow(z[39],3);
  z[251] = (2*z[157]*(z[36]*z[78]-z[39]*z[69])/pow(z[38],0.5)-z[39]*(z[36]*
  z[247]+2*z[78]*(z[154]+ra*z[13])-4*z[39]*(z[244]-ra*z[14])))/pow(z[39],3);
  z[252] = 0.25*w*z[250]*q2p + 0.25*w*z[251]*q3p - 0.5*z[81]*z[163] - 0.5*
  z[82]*z[169];
  z[253] = (2*z[34]*z[77]*z[157]/pow(z[38],0.5)+z[39]*(4*z[39]*z[233]-2*z[77]*
  z[155]-z[34]*z[237]-2*z[70]*z[157]/pow(z[38],0.5)))/pow(z[39],3);
  z[254] = (2*z[34]*z[78]*z[157]/pow(z[38],0.5)+z[39]*(4*z[39]*z[243]-2*z[78]*
  z[155]-z[34]*z[247]-2*z[71]*z[157]/pow(z[38],0.5)))/pow(z[39],3);
  z[255] = 0.5*z[85]*z[163] + 0.5*z[86]*z[169] - 0.25*w*z[253]*q2p - 0.25*w*
  z[254]*q3p;
  z[256] = 0.5*ra*z[14]*z[84] + 0.25*z[254]*(k+z[18]) - 0.5*z[17]*z[225] - ra*
  z[13]*z[42];
  z[257] = -ra*z[14]*z[83] - 0.5*z[253]*(k+z[18]);
  z[258] = 0.5*pow(w,2)*z[55]*z[159] + w*z[256]*q3p + z[99]*z[169] - 0.5*
  z[100]*z[163] - pow(w,2)*z[41]*z[227] - pow(w,2)*z[42]*z[228] - 0.5*pow(w,2)*
  z[56]*z[225] - 0.5*w*z[257]*q2p;
  z[259] = 0.25*z[17]*z[248] + 0.5*z[17]*z[158] + 0.5*ra*z[14]*z[80] + 0.25*
  z[251]*(k+z[18]) - 0.5*z[18]*z[159] - ra*z[13]*z[40] - ra*z[14]*z[41] - 0.5*
  ra*z[13]*z[88];
  z[260] = 0.25*z[17]*z[238] + 0.5*ra*z[14]*z[79] + 0.25*z[250]*(k+z[18]) - 
  0.5*ra*z[13]*z[87];
  z[261] = z[104]*z[163] + pow(w,2)*z[41]*z[226] + 0.5*pow(w,2)*z[56]*z[158] + 
  w*z[259]*q3p + w*z[260]*q2p + z[103]*z[169] - pow(w,2)*z[40]*z[228] - 0.5*
  pow(w,2)*z[54]*z[159];
  z[262] = 0.25*z[17]*z[254] + 0.5*z[18]*z[225] - ra*z[14]*z[42] - 0.5*ra*
  z[13]*z[84];
  z[263] = ra*z[13]*z[83] - 0.5*z[17]*z[253];
  z[264] = pow(w,2)*z[40]*z[227] + pow(w,2)*z[42]*z[226] + 0.5*pow(w,2)*z[54]*
  z[225] + w*z[262]*q3p + z[107]*z[169] - 0.5*z[108]*z[163] - 0.5*pow(w,2)*
  z[55]*z[158] - 0.5*w*z[263]*q2p;
  z[265] = Izz*z[41]*z[249] + z[40]*(Ixx*z[252]+Ixy*z[255]) + m*(z[54]*z[258]+
  z[55]*z[261]+z[56]*z[264]+z[226]*z[109]+z[227]*z[110]+z[228]*z[111]) - 
  z[113]*(z[12]*z[227]+z[22]*z[228]-z[21]*z[226]-z[11]*z[13]*z[54]-z[11]*
  z[14]*z[56]) - 0.5*Izz*z[159]*z[93] - z[42]*(Ixy*z[252]+Iyy*z[255]) - 0.5*
  z[158]*(Ixx*z[91]+Ixy*z[92]) - 0.5*z[225]*(Ixy*z[91]+Iyy*z[92]);
  z[266] = Izz*z[41]*z[159] + z[40]*(Ixx*z[158]+Ixy*z[225]) - Ixy*z[42]*
  z[158] - Iyy*z[42]*z[225] - 2*m*(z[54]*z[226]+z[55]*z[227]+z[56]*z[228]);
  z[267] = (z[112]*z[265]-z[266]*z[114])/pow(z[112],2);
  z[268] = -0.5*z[89]*z[164] - 0.5*z[90]*z[170] - 0.5*z[87]*q2p - 0.5*z[88]*
  q3p;
  z[269] = -0.5*z[81]*z[164] - 0.5*z[82]*z[170] - 0.5*z[79]*q2p - 0.5*z[80]*
  q3p;
  z[270] = 0.5*z[85]*z[164] + 0.5*z[86]*z[170] + 0.5*z[83]*q2p + 0.5*z[84]*
  q3p;
  z[271] = z[99]*z[170] + z[97]*q3p - 0.5*z[100]*z[164] - 2*w*z[41]*z[55] - 2*
  w*z[42]*z[56] - 0.5*z[98]*q2p;
  z[272] = z[103]*z[170] + z[104]*z[164] + 2*w*z[41]*z[54] + z[101]*q3p + 
  z[102]*q2p - 2*w*z[40]*z[56];
  z[273] = z[107]*z[170] + 2*w*z[40]*z[55] + 2*w*z[42]*z[54] + z[105]*q3p - 
  0.5*z[108]*z[164] - 0.5*z[106]*q2p;
  z[274] = Izz*z[41]*z[268] + z[40]*(Ixx*z[269]+Ixy*z[270]) + m*(z[54]*z[271]+
  z[55]*z[272]+z[56]*z[273]) - z[42]*(Ixy*z[269]+Iyy*z[270]);

  no_cb[0] = q4 + z[34]*z[48] + z[46]*(z[17]+z[33]) - z[50]*(l+z[18]-z[35]);
  no_cb[1] = q5 + z[47]*(z[17]+z[33]) - z[34]*z[49] - z[51]*(l+z[18]-z[35]);
  no_cb[2] = -z[12]*z[34] - z[21]*(z[17]+z[33]) - z[22]*(l+z[18]-z[35]);
  H[0] = w*(Ixx*z[40]-Ixy*z[42]);
  H[1] = w*(Ixy*z[40]-Iyy*z[42]);
  H[2] = Izz*w*z[41];
  p[0] = m*w*z[54];
  p[1] = m*w*z[55];
  p[2] = m*w*z[56];
  df[0] = 0;
  df[1] = 0.5*z[151];
  df[2] = -0.5*z[160];
  df[3] = 0;
  df[4] = 0;
  df[5] = z[161];
  df[6] = 0;
  df[7] = -0.5*z[162];
  df[8] = z[163];
  df[9] = 0;
  df[10] = 0;
  df[11] = z[164];
  df[12] = 0;
  df[13] = -0.5*z[166];
  df[14] = z[169];
  df[15] = 0;
  df[16] = 0;
  df[17] = z[170];
  df[18] = -z[173];
  df[19] = -z[174];
  df[20] = -z[177];
  df[21] = 0;
  df[22] = 0;
  df[23] = -z[178];
  df[24] = -z[52];
  df[25] = -z[179];
  df[26] = -z[182];
  df[27] = 0;
  df[28] = 0;
  df[29] = -z[183];
  df[30] = 0;
  df[31] = z[224];
  df[32] = z[267];
  df[33] = 0;
  df[34] = 0;
  df[35] = z[274]/z[112];
  T_da[0] = z[116];
  T_da[1] = z[119];
  T_da[2] = z[122];
  T_da[3] = 0;
  T_da[4] = z[117];
  T_da[5] = z[120];
  T_da[6] = z[123];
  T_da[7] = 0;
  T_da[8] = z[118];
  T_da[9] = z[121];
  T_da[10] = z[124];
  T_da[11] = 0;
  T_da[12] = z[17]*z[116] - z[1]*(ctx-q4) - z[2]*(cty-q5) - z[18]*z[118];
  T_da[13] = ctz*z[6] + z[5]*(cty-q5) + z[17]*z[119] - z[4]*(ctx-q4) - z[18]*
  z[121];
  T_da[14] = ctz*z[3] + z[7]*(ctx-q4) + z[17]*z[122] - d - z[8]*(cty-q5) - 
  z[18]*z[124];
  T_da[15] = 1;
  T_db[0] = z[125];
  T_db[1] = z[127];
  T_db[2] = z[129];
  T_db[3] = 0;
  T_db[4] = z[126];
  T_db[5] = z[128];
  T_db[6] = z[130];
  T_db[7] = 0;
  T_db[8] = z[118];
  T_db[9] = z[121];
  T_db[10] = z[124];
  T_db[11] = 0;
  T_db[12] = z[17]*z[116] - z[1]*(ctx-q4) - z[2]*(cty-q5) - z[118]*(l+z[18]);
  T_db[13] = ctz*z[6] + z[5]*(cty-q5) + z[17]*z[119] - z[4]*(ctx-q4) - z[121]*(
  l+z[18]);
  T_db[14] = ctz*z[3] + z[7]*(ctx-q4) + z[17]*z[122] - d - z[8]*(cty-q5) - 
  z[124]*(l+z[18]);
  T_db[15] = 1;
  T_so[0] = z[116];
  T_so[1] = z[119];
  T_so[2] = z[122];
  T_so[3] = 0;
  T_so[4] = z[117];
  T_so[5] = z[120];
  T_so[6] = z[123];
  T_so[7] = 0;
  T_so[8] = z[118];
  T_so[9] = z[121];
  T_so[10] = z[124];
  T_so[11] = 0;
  T_so[12] = z[17]*z[116] - z[1]*(ctx-q4) - z[2]*(cty-q5) - z[118]*(k+z[18]);
  T_so[13] = ctz*z[6] + z[5]*(cty-q5) + z[17]*z[119] - z[4]*(ctx-q4) - z[121]*(
  k+z[18]);
  T_so[14] = ctz*z[3] + z[7]*(ctx-q4) + z[17]*z[122] - d - z[8]*(cty-q5) - 
  z[124]*(k+z[18]);
  T_so[15] = 1;
  T_ca[0] = z[131];
  T_ca[1] = z[133];
  T_ca[2] = z[135];
  T_ca[3] = 0;
  T_ca[4] = z[132];
  T_ca[5] = z[134];
  T_ca[6] = z[136];
  T_ca[7] = 0;
  T_ca[8] = 0;
  T_ca[9] = -z[6];
  T_ca[10] = -z[3];
  T_ca[11] = 0;
  T_ca[12] = -z[1]*(ctx-q4) - z[2]*(cty-q5);
  T_ca[13] = ctz*z[6] + z[5]*(cty-q5) - z[4]*(ctx-q4);
  T_ca[14] = ctz*z[3] + z[7]*(ctx-q4) - d - z[8]*(cty-q5);
  T_ca[15] = 1;
  T_cb[0] = z[11]*z[131]*z[140] + z[12]*z[116]*z[141] + z[117]*(z[21]*z[141]+
  z[22]*z[139]) - z[12]*z[118]*z[139];
  T_cb[1] = z[11]*z[133]*z[140] + z[12]*z[119]*z[141] + z[120]*(z[21]*z[141]+
  z[22]*z[139]) - z[12]*z[121]*z[139];
  T_cb[2] = z[11]*z[135]*z[140] + z[12]*z[122]*z[141] + z[123]*(z[21]*z[141]+
  z[22]*z[139]) - z[12]*z[124]*z[139];
  T_cb[3] = 0;
  T_cb[4] = z[11]*z[132]*z[140] - z[116]*z[139]*pow(z[12],2) - z[118]*z[141]*
  pow(z[12],2) - z[11]*z[131]*(z[21]*z[141]+z[22]*z[139]) - z[12]*z[117]*(
  z[21]*z[139]-z[22]*z[141]);
  T_cb[5] = z[11]*z[134]*z[140] - z[119]*z[139]*pow(z[12],2) - z[121]*z[141]*
  pow(z[12],2) - z[11]*z[133]*(z[21]*z[141]+z[22]*z[139]) - z[12]*z[120]*(
  z[21]*z[139]-z[22]*z[141]);
  T_cb[6] = z[11]*z[136]*z[140] - z[122]*z[139]*pow(z[12],2) - z[124]*z[141]*
  pow(z[12],2) - z[11]*z[135]*(z[21]*z[141]+z[22]*z[139]) - z[12]*z[123]*(
  z[21]*z[139]-z[22]*z[141]);
  T_cb[7] = 0;
  T_cb[8] = 0;
  T_cb[9] = -z[6];
  T_cb[10] = -z[3];
  T_cb[11] = 0;
  T_cb[12] = z[116]*(z[17]+z[33]) - z[1]*(ctx-q4) - z[2]*(cty-q5) - z[34]*
  z[117] - z[118]*(l+z[18]-z[35]);
  T_cb[13] = ctz*z[6] + z[5]*(cty-q5) + z[119]*(z[17]+z[33]) - z[4]*(ctx-q4) - 
  z[34]*z[120] - z[121]*(l+z[18]-z[35]);
  T_cb[14] = ctz*z[3] + z[7]*(ctx-q4) + z[122]*(z[17]+z[33]) - d - z[8]*(cty-
  q5) - z[34]*z[123] - z[124]*(l+z[18]-z[35]);
  T_cb[15] = 1;
  T_dagl[0] = z[116];
  T_dagl[1] = z[119];
  T_dagl[2] = z[122];
  T_dagl[3] = 0;
  T_dagl[4] = -z[118];
  T_dagl[5] = -z[121];
  T_dagl[6] = -z[124];
  T_dagl[7] = 0;
  T_dagl[8] = z[117];
  T_dagl[9] = z[120];
  T_dagl[10] = z[123];
  T_dagl[11] = 0;
  T_dagl[12] = z[17]*z[116] - z[1]*(ctx-q4) - z[2]*(cty-q5) - z[18]*z[118];
  T_dagl[13] = ctz*z[6] + z[5]*(cty-q5) + z[17]*z[119] - z[4]*(ctx-q4) - 
  z[18]*z[121];
  T_dagl[14] = ctz*z[3] + z[7]*(ctx-q4) + z[17]*z[122] - d - z[8]*(cty-q5) - 
  z[18]*z[124];
  T_dagl[15] = 1;
  T_dbgl[0] = z[125];
  T_dbgl[1] = z[127];
  T_dbgl[2] = z[129];
  T_dbgl[3] = 0;
  T_dbgl[4] = -z[118];
  T_dbgl[5] = -z[121];
  T_dbgl[6] = -z[124];
  T_dbgl[7] = 0;
  T_dbgl[8] = z[126];
  T_dbgl[9] = z[128];
  T_dbgl[10] = z[130];
  T_dbgl[11] = 0;
  T_dbgl[12] = z[17]*z[116] - z[1]*(ctx-q4) - z[2]*(cty-q5) - z[118]*(l+z[18]);
  T_dbgl[13] = ctz*z[6] + z[5]*(cty-q5) + z[17]*z[119] - z[4]*(ctx-q4) - 
  z[121]*(l+z[18]);
  T_dbgl[14] = ctz*z[3] + z[7]*(ctx-q4) + z[17]*z[122] - d - z[8]*(cty-q5) - 
  z[124]*(l+z[18]);
  T_dbgl[15] = 1;
} // computeOutputs()

void SlottedDiscs::setState(const double state[6])
{
  q1 = state[0];
  q2 = state[1];
  q3 = state[2];
  q4 = state[3];
  q5 = state[4];
  w = state[5];
} // setState()

void SlottedDiscs::setParameters(DiscParams * p)
{
  m = p->m;
  ra = p->ra;
  rb = p->rb;
  k = p->k;
  l = p->l;
  g = p->g;
  alpha = p->alpha;
  Ixx = p->Ixx;
  Iyy = p->Iyy;
  Izz = p->Izz;
  Ixy = p->Ixy;

  evalConstants();
} // setParameters()
