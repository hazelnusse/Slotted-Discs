#include "slotted_discs.h"

int eomwrapper(double t, const double x[6], double f[6], void * params)
{
  SlottedDiscs * p = (SlottedDiscs *) params;
  // Assign the states of the SlottedDiscs object
  p->setState(x);
  // Evaluate the RHS of the ODE's representing the equations of motion
  p->eoms();
  // Assign the right hand sides of the ODE's to the array passed
  f[0] = p->q1p;
  f[1] = p->q2p;
  f[2] = p->q3p;
  f[3] = p->q4p;
  f[4] = p->q5p;
  f[5] = p->wp;
  // Return the status
  return GSL_SUCCESS;
}

ostream &operator<<(ostream &file, const SlottedDiscs * discs)
{
  file.write((char *) &(discs->t), sizeof discs->t);
  file.write((char *) &discs->q1, sizeof discs->q1);
  file.write((char *) &discs->q2, sizeof discs->q2);
  file.write((char *) &discs->q3, sizeof discs->q3);
  file.write((char *) &discs->q4, sizeof discs->q4);
  file.write((char *) &discs->q5, sizeof discs->q5);
  file.write((char *) &discs->w, sizeof discs->w);
  file.write((char *) &discs->w1, sizeof discs->w1);
  file.write((char *) &discs->w2, sizeof discs->w2);
  file.write((char *) &discs->w3, sizeof discs->w3);
  file.write((char *) &(discs->no_cb), sizeof discs->no_cb);
  file.write((char *) &(discs->no_so), sizeof discs->no_so);
  file.write((char *) &(discs->ke), sizeof discs->ke);
  file.write((char *) &(discs->pe), sizeof discs->pe);
  file.write((char *) &(discs->te), sizeof discs->te);
  file.write((char *) &(discs->H), sizeof discs->H);
  file.write((char *) &(discs->p), sizeof discs->p);
  file.write((char *) &(discs->fax), sizeof discs->fax);
  file.write((char *) &(discs->fay), sizeof discs->fay);
  file.write((char *) &(discs->faz), sizeof discs->faz);
  file.write((char *) &(discs->fbx), sizeof discs->fbx);
  file.write((char *) &(discs->fby), sizeof discs->fby);
  file.write((char *) &(discs->fbz), sizeof discs->fbz);
  return file;
} // operator <<

void setParams(DiscParams * p, double ma, double mb, double ra, double rb, double l, double alpha, double g) 
{
  double Ia = ma*ra*ra/4.0;
  double Ja = ma*ra*ra/2.0;
  double Ib = mb*rb*rb/4.0;
  double Jb = mb*rb*rb/2.0;
  p->m = ma + mb;
  p->ra = ra;
  p->rb = rb;
  p->l = l;
  p->g = 9.81;
  p->alpha = alpha;
  p->k = l*mb/(ma+mb);
  p->Ixx = Ia + Ib*pow(cos(alpha),2) + Jb*pow(sin(alpha),2) + mb*pow(l,2)*(ma*mb/
  pow((ma+mb),2)+pow((1-mb/(ma+mb)),2));
  p->Iyy = Ja + Jb + pow(sin(alpha),2)*(Ib-Jb) + mb*pow(l,2)*(ma*mb/pow((ma+mb),
  2)+pow((1-mb/(ma+mb)),2));
  p->Izz = Ia + Ib + mb*pow(l,2)*pow((1-mb/(ma+mb)),2) + mb*pow(l,2)*(-1+mb/(ma+
  mb))*(1-mb/(ma+mb));
  p->Ixy = sin(alpha)*cos(alpha)*(Ib-Jb);
} // setParams

void SlottedDiscs::writeRecord_dt(void) const
{
  ofstream fp("./record.py", ios::out);
  fp << "#!/usr/bin/env python" << endl;
  fp << "import numpy as np" << endl;
  fp << "record_dt = np.dtype([('t', np.float64), " <<
        "('q1', np.float64), " <<
        "('q2', np.float64), " <<
        "('q3', np.float64), " <<
        "('x', np.float64), " <<
        "('y', np.float64), " <<
        "('w', np.float64), " <<
        "('w1', np.float64), " <<
        "('w2', np.float64), " <<
        "('w3', np.float64), " <<
        "('cbx', np.float64), " <<
        "('cby', np.float64), " <<
        "('cbz', np.float64), " <<
        "('sox', np.float64), " <<
        "('soy', np.float64), " <<
        "('soz', np.float64), " <<
        "('ke', np.float64), " <<
        "('pe', np.float64), " <<
        "('te', np.float64), " <<
        "('H1', np.float64), " <<
        "('H2', np.float64), " <<
        "('H3', np.float64), " <<
        "('p1', np.float64), " <<
        "('p2', np.float64), " <<
        "('p3', np.float64), " <<
        "('fax', np.float64), " <<
        "('fay', np.float64), " <<
        "('faz', np.float64)," <<
        "('fbx', np.float64), " <<
        "('fby', np.float64), " <<
        "('fbz', np.float64)]) " <<
        endl;
  fp.close();
} // writeRecord_dt()

SlottedDiscs::SlottedDiscs()
{
  // Default parameters
  ra = rb = .1;
  l = sqrt(2.0)*ra;
  g = 9.81;
  alpha = M_PI/2.0;
  
  double ma, mb;
  ma = mb = 2.0;
  m = ma + mb;
  double Ia = ma*ra*ra/4.0;
  double Ja = ma*ra*ra/2.0;

  double Ib = mb*rb*rb/4.0;
  double Jb = mb*rb*rb/2.0;

  k = l*mb/(ma+mb);
  Ixx = Ia + Ib*pow(cos(alpha),2) + Jb*pow(sin(alpha),2) + mb*pow(l,2)*(ma*mb/
  pow((ma+mb),2)+pow((1-mb/(ma+mb)),2));
  Iyy = Ja + Jb + pow(sin(alpha),2)*(Ib-Jb) + mb*pow(l,2)*(ma*mb/pow((ma+mb),
  2)+pow((1-mb/(ma+mb)),2));
  Izz = Ia + Ib + mb*pow(l,2)*pow((1-mb/(ma+mb)),2) + mb*pow(l,2)*(-1+mb/(ma+
  mb))*(1-mb/(ma+mb));
  Ixy = sin(alpha)*cos(alpha)*(Ib-Jb);

  // Set state
  q1 = 0.0;
  q2 = M_PI / 4.0;
  q3 = M_PI/2.0;
  q4 = q5 = 0.0;
  w = -1.4;

  // Set integration settings
  t = 0.0;
  tf = 10.0;
  h = 0.001;
  T = gsl_odeiv_step_rk8pd;
  s = gsl_odeiv_step_alloc(T, 6);
  c = gsl_odeiv_control_y_new(1e-6, 1e-9);
  e = gsl_odeiv_evolve_alloc(6);
  sys.function = eomwrapper;
  sys.jacobian = NULL;
  sys.dimension = 6;
  sys.params = this;

  for (int i = 0; i < Z_MAX; ++i)
    z[i] = 0.0;

  // Camera settings
  theta = M_PI / 4.0;
  phi = 0.0;
  d = 1.0;
  ctx = .35;
  cty = .35; 
  ctz = 0.0;
  
  // Constants
  evalConstants();
  eoms();
  computeOutputs();

  // Write the file which holds the numpy record data type so that plotting is
  // easy
  writeRecord_dt();
 
} // constructor

SlottedDiscs::~SlottedDiscs()
{
  gsl_odeiv_evolve_free(e);
  gsl_odeiv_control_free(c);
  gsl_odeiv_step_free(s);
} // destructor

void SlottedDiscs::printState(void) const
{
  cout.setf(ios::right, ios::adjustfield);
  cout.setf(ios::scientific, ios::floatfield);
  cout.setf(ios::adjustfield, ios::right);
  cout.precision(9);
  cout.width(18);
  cout << q1;
  cout.width(18);
  cout << q2;
  cout.width(18);
  cout << q3;
  cout.width(18);
  cout << q4;
  cout.width(18);
  cout << q5;
  cout.width(18);
  cout << w3;
  cout << endl;
} // printState()

void SlottedDiscs::printEnergy(void) const
{
  cout.setf(ios::scientific, ios::floatfield);
  cout.setf(ios::adjustfield, ios::right);
  cout.precision(9);
  cout.width(18);
  cout << ke;
  cout.width(18);
  cout << pe;
  cout.width(18);
  cout << te;
  cout << endl;
} // printEnergy()

void SlottedDiscs::printParameters() const
{
  cout.setf(ios::scientific, ios::floatfield);
  cout.setf(ios::adjustfield, ios::right);
  cout.precision(9);
  cout << "ra = " << ra << endl << "rb = " << rb << endl;
  cout << "m = " << m << endl;
  cout << "Ixx = " << Ixx << endl << "Iyy = " << Iyy << endl;
  cout << "Izz = " << Izz << endl << "Ixy = " << Ixy << endl;
  cout << "alpha = " << alpha << endl << "l = " << l << endl;
  cout << "k = " << k << endl;
  cout << "g = " << g << endl;
} // printParameters()

void SlottedDiscs::evalConstants(void)
{
  z[118] = g*m;
  z[1] = cos(phi);
  z[2] = sin(phi);
  z[3] = sin(theta);
  z[4] = z[2]*z[3];
  z[5] = z[1]*z[3];
  z[6] = cos(theta);
  z[7] = z[2]*z[6];
  z[8] = z[1]*z[6];
  z[15] = cos(alpha);
  z[16] = sin(alpha);
  z[48] = rb*z[16];
  z[49] = pow(z[16],2);
  z[129] = k*m;
  z[142] = l - k;
  z[207] = pow(z[15],2);
  z[209] = z[16]*z[48];
  z[210] = z[15]*z[16];
  z[308] = m*ra;
  fax = fbx = 0;
} //evalConstants()

void SlottedDiscs::eoms(void)
{
  z[14] = sin(q3);
  z[17] = ra*z[14];
  z[12] = sin(q2);
  z[11] = cos(q2);
  z[21] = z[11]*z[14];
  z[28] = z[15]*z[12] + z[16]*z[21];
  z[29] = 1 - pow(z[28],2);
  z[30] = pow(z[29],0.5);
  z[32] = z[28]/z[30];
  z[31] = 1/z[30];
  z[33] = rb*(z[16]*z[32]-z[21]*z[31]);
  z[36] = z[17] + z[33];
  z[34] = rb*(z[15]*z[32]-z[12]*z[31]);
  z[13] = cos(q3);
  z[22] = z[11]*z[13];
  z[35] = rb*z[22]*z[31];
  z[18] = ra*z[13];
  z[37] = z[35] - l - z[18];
  z[38] = pow(z[34],2) + pow(z[36],2) + pow(z[37],2);
  z[39] = pow(z[38],0.5);
  z[40] = z[36]/z[39];
  w1 = w*z[40];
  z[41] = z[37]/z[39];
  w3 = w*z[41];
  q1p = -(w1*z[14]-w3*z[13])/z[11];
  q2p = w1*z[13] + w3*z[14];
  z[50] = (z[11]*z[34]+rb*z[22]*(z[12]*z[13]*z[31]-z[22]*z[28]*(z[15]*z[11]-
  z[16]*z[12]*z[14])/(pow(z[29],0.5)*pow(z[30],2)))-z[12]*z[14]*(z[17]+z[33])-
  z[12]*z[13]*(l+z[18]-z[35])-rb*z[12]*(z[11]*z[31]+z[12]*z[28]*(z[15]*z[11]-
  z[16]*z[12]*z[14])/(pow(z[29],0.5)*pow(z[30],2))-z[15]*(z[30]+pow(z[28],2)/
  pow(z[29],0.5))*(z[15]*z[11]-z[16]*z[12]*z[14])/pow(z[30],2))-rb*z[21]*(
  z[21]*z[28]*(z[15]*z[11]-z[16]*z[12]*z[14])/(pow(z[29],0.5)*pow(z[30],2))-
  z[12]*z[14]*z[31]-z[16]*(z[30]+pow(z[28],2)/pow(z[29],0.5))*(z[15]*z[11]-
  z[16]*z[12]*z[14])/pow(z[30],2)))*q2p/(z[11]*z[14]*(l+z[18]-z[35])+z[48]*
  z[11]*z[12]*z[13]*(z[12]*z[28]/pow(z[29],0.5)-z[15]*(z[30]+pow(z[28],2)/
  pow(z[29],0.5)))/pow(z[30],2)-z[11]*z[13]*(z[17]+z[33])-z[22]*(rb*z[11]*
  z[14]*z[31]-ra*z[14]-z[48]*z[11]*z[13]*z[22]*z[28]/(pow(z[29],0.5)*pow(
  z[30],2)))-z[13]*z[21]*(ra-rb*z[11]*(z[31]+z[16]*z[21]*z[28]/(pow(z[29],0.5)*
  pow(z[30],2))-z[49]*(z[30]+pow(z[28],2)/pow(z[29],0.5))/pow(z[30],2))));
  q3p = z[50];
  z[9] = cos(q1);
  z[10] = sin(q1);
  z[20] = z[12]*z[13];
  z[55] = z[9]*z[14] + z[10]*z[20];
  z[19] = z[12]*z[14];
  z[51] = z[9]*z[13] - z[10]*z[19];
  z[57] = (z[17]*z[55]+z[18]*z[51])*q3p;
  q4p = -z[57];
  z[56] = z[10]*z[14] - z[9]*z[20];
  z[52] = z[9]*z[19] + z[10]*z[13];
  z[58] = (z[17]*z[56]+z[18]*z[52])*q3p;
  q5p = -z[58];
  z[42] = z[34]/z[39];
  z[26] = z[15]*z[11] - z[16]*z[19];
  z[64] = z[26]*z[28];
  z[66] = z[64]/pow(z[29],0.5);
  z[68] = (z[26]*z[30]+z[28]*z[66])/pow(z[30],2);
  z[70] = z[66]/pow(z[30],2);
  z[75] = rb*(z[15]*z[68]-z[11]*z[31]-z[12]*z[70]);
  z[72] = rb*(z[16]*z[68]+z[19]*z[31]-z[21]*z[70]);
  z[77] = rb*(z[20]*z[31]-z[22]*z[70]);
  z[80] = 2*z[34]*z[75] + 2*z[36]*z[72] - 2*z[37]*z[77];
  z[82] = z[80]/pow(z[38],0.5);
  z[92] = (z[37]*z[82]+2*z[39]*z[77])/pow(z[39],2);
  z[94] = w*z[92];
  z[63] = z[16]*z[22];
  z[65] = z[28]*z[63];
  z[67] = z[65]/pow(z[29],0.5);
  z[69] = (z[28]*z[67]+z[30]*z[63])/pow(z[30],2);
  z[71] = z[67]/pow(z[30],2);
  z[76] = rb*(z[15]*z[69]-z[12]*z[71]);
  z[73] = rb*(z[16]*z[69]-z[21]*z[71]-z[22]*z[31]);
  z[74] = z[18] + z[73];
  z[78] = rb*(z[21]*z[31]-z[22]*z[71]);
  z[79] = z[17] - z[78];
  z[81] = 2*z[34]*z[76] + 2*z[36]*z[74] + 2*z[37]*z[79];
  z[83] = z[81]/pow(z[38],0.5);
  z[93] = (z[37]*z[83]-2*z[39]*z[79])/pow(z[39],2);
  z[95] = w*z[93];
  z[98] = -0.5*z[94]*q2p - 0.5*z[95]*q3p;
  z[84] = (z[36]*z[82]-2*z[39]*z[72])/pow(z[39],2);
  z[86] = w*z[84];
  z[85] = (z[36]*z[83]-2*z[39]*z[74])/pow(z[39],2);
  z[87] = w*z[85];
  z[96] = -0.5*z[86]*q2p - 0.5*z[87]*q3p;
  z[88] = (z[34]*z[82]-2*z[39]*z[75])/pow(z[39],2);
  z[90] = w*z[88];
  z[89] = (z[34]*z[83]-2*z[39]*z[76])/pow(z[39],2);
  z[91] = w*z[89];
  z[97] = 0.5*z[90]*q2p + 0.5*z[91]*q3p;
  z[60] = z[17]*z[41] + z[40]*(k+z[18]);
  z[59] = z[42]*(k+z[18]);
  z[110] = z[18]*z[42] - 0.5*z[17]*z[89];
  z[112] = w*z[110];
  z[111] = z[17]*z[88];
  z[113] = w*z[111];
  z[116] = pow(w,2)*z[40]*z[60] + pow(w,2)*z[42]*z[59] + z[112]*q3p - 0.5*
  z[113]*q2p;
  z[102] = -z[17]*z[42] - 0.5*z[89]*(k+z[18]);
  z[104] = w*z[102];
  z[61] = z[17]*z[42];
  z[103] = z[88]*(k+z[18]);
  z[105] = w*z[103];
  z[114] = z[104]*q3p - pow(w,2)*z[41]*z[60] - pow(w,2)*z[42]*z[61] - 0.5*
  z[105]*q2p;
  z[106] = z[18]*z[41] - z[17]*z[40] - 0.5*z[17]*z[93] - 0.5*z[85]*(k+z[18]);
  z[108] = w*z[106];
  z[107] = -0.5*z[17]*z[92] - 0.5*z[84]*(k+z[18]);
  z[109] = w*z[107];
  z[115] = pow(w,2)*z[41]*z[59] + z[108]*q3p + z[109]*q2p - pow(w,2)*z[40]*
  z[61];
  z[119] = z[118]*(z[21]*z[42]*(k+z[18])-z[17]*z[22]*z[42]-z[12]*(z[17]*z[41]+
  z[40]*(k+z[18]))) + Izz*z[41]*z[98] + z[40]*(Ixx*z[96]+Ixy*z[97]) + m*(
  z[17]*z[42]*z[116]+z[42]*(k+z[18])*z[114]+(z[17]*z[41]+z[40]*(k+z[18]))*
  z[115]) - z[42]*(Ixy*z[96]+Iyy*z[97]);
  z[117] = z[42]*(2*Ixy*z[40]-Iyy*z[42]) - Ixx*pow(z[40],2) - Izz*pow(z[41],2) - 
  m*z[17]*z[42]*z[61] - m*z[42]*z[59]*(k+z[18]) - m*z[60]*(z[17]*z[41]+z[40]*(
  k+z[18]));
  z[120] = z[119]/z[117];
  wp = z[120];
} // eoms()

void SlottedDiscs::computeOutputs(void)
{
  z[156] = z[12]*z[13]*z[20]*z[40]*(z[17]+z[33]) + z[12]*z[13]*z[41]*(z[11]*
  z[34]-z[20]*(l+z[18]-z[35])) + z[11]*z[42]*(z[11]*z[34]-z[19]*(z[17]+z[33])-
  z[20]*(l+z[18]-z[35])) + z[11]*(z[21]*z[41]+z[22]*z[40])*(z[13]*(z[17]+
  z[33])-z[14]*(l+z[18]-z[35])) - z[12]*z[14]*z[19]*z[41]*(l+z[18]-z[35]) - 
  z[12]*z[14]*z[40]*(z[11]*z[34]-z[19]*(z[17]+z[33]));
  z[150] = w*(2*m*z[34]*z[41]*z[77]+z[84]*(Ixy+m*z[33]*z[34])+2*m*z[41]*z[75]*(
  z[142]-z[35])+4*m*z[42]*(z[33]*z[72]+z[77]*(z[142]-z[35]))-Iyy*z[88]-2*m*
  z[40]*(z[33]*z[75]+z[34]*z[72])-m*z[34]*z[92]*(z[142]-z[35])-m*z[88]*(pow(
  z[33],2)+pow((z[142]-z[35]),2)));
  z[151] = w*(2*m*z[34]*z[41]*z[78]+z[85]*(Ixy+m*z[33]*z[34])+2*m*z[41]*z[76]*(
  z[142]-z[35])+4*m*z[42]*(z[33]*z[73]+z[78]*(z[142]-z[35]))-Iyy*z[89]-2*m*
  z[40]*(z[33]*z[76]+z[34]*z[73])-m*z[34]*z[93]*(z[142]-z[35])-m*z[89]*(pow(
  z[33],2)+pow((z[142]-z[35]),2)));
  z[149] = z[40]*(Ixy+m*z[33]*z[34]) - Iyy*z[42] - m*z[34]*z[41]*(z[142]-
  z[35]) - m*z[42]*(pow(z[33],2)+pow((z[142]-z[35]),2));
  z[147] = w*(2*m*z[33]*z[41]*z[77]+z[88]*(Ixy+m*z[33]*z[34])+2*m*z[41]*z[72]*(
  z[142]-z[35])+4*m*z[40]*(z[34]*z[75]+z[77]*(z[142]-z[35]))-Ixx*z[84]-2*m*
  z[42]*(z[33]*z[75]+z[34]*z[72])-m*z[33]*z[92]*(z[142]-z[35])-m*z[84]*(pow(
  z[34],2)+pow((z[142]-z[35]),2)));
  z[148] = w*(2*m*z[33]*z[41]*z[78]+z[89]*(Ixy+m*z[33]*z[34])+2*m*z[41]*z[73]*(
  z[142]-z[35])+4*m*z[40]*(z[34]*z[76]+z[78]*(z[142]-z[35]))-Ixx*z[85]-2*m*
  z[42]*(z[33]*z[76]+z[34]*z[73])-m*z[33]*z[93]*(z[142]-z[35])-m*z[85]*(pow(
  z[34],2)+pow((z[142]-z[35]),2)));
  z[146] = z[42]*(Ixy+m*z[33]*z[34]) - Ixx*z[40] - m*z[33]*z[41]*(z[142]-
  z[35]) - m*z[40]*(pow(z[34],2)+pow((z[142]-z[35]),2));
  z[153] = w*(2*m*z[33]*z[40]*z[77]+2*m*z[34]*z[42]*z[77]+2*m*z[40]*z[72]*(
  z[142]-z[35])+2*m*z[42]*z[75]*(z[142]-z[35])+4*m*z[41]*(z[33]*z[72]+z[34]*
  z[75])-Izz*z[92]-m*z[33]*z[84]*(z[142]-z[35])-m*z[34]*z[88]*(z[142]-z[35])-
  m*z[92]*(pow(z[33],2)+pow(z[34],2)));
  z[154] = w*(2*m*z[33]*z[40]*z[78]+2*m*z[34]*z[42]*z[78]+2*m*z[40]*z[73]*(
  z[142]-z[35])+2*m*z[42]*z[76]*(z[142]-z[35])+4*m*z[41]*(z[33]*z[73]+z[34]*
  z[76])-Izz*z[93]-m*z[33]*z[85]*(z[142]-z[35])-m*z[34]*z[89]*(z[142]-z[35])-
  m*z[93]*(pow(z[33],2)+pow(z[34],2)));
  z[152] = Izz*z[41] + m*z[33]*z[40]*(z[142]-z[35]) + m*z[34]*z[42]*(z[142]-
  z[35]) + m*z[41]*(pow(z[33],2)+pow(z[34],2));
  z[159] = -0.5*z[12]*(2*pow(w,2)*z[40]*(Izz*z[41]+m*z[41]*pow(z[33],2)+m*
  z[33]*z[40]*(z[142]-z[35])+m*z[34]*z[42]*(z[142]-z[35]))+2*pow(w,2)*z[41]*(
  z[42]*(Ixy+m*z[33]*z[34])-Ixx*z[40]-m*z[33]*z[41]*(z[142]-z[35])-m*z[40]*
  pow((z[142]-z[35]),2))+z[150]*q2p+z[151]*q3p-2*z[149]*z[120]) - 0.5*z[21]*(
  z[147]*q2p+z[148]*q3p-2*pow(w,2)*z[42]*(Izz*z[41]+m*z[41]*pow(z[34],2)+m*
  z[33]*z[40]*(z[142]-z[35])+m*z[34]*z[42]*(z[142]-z[35]))-2*pow(w,2)*z[41]*(
  z[40]*(Ixy+m*z[33]*z[34])-Iyy*z[42]-m*z[34]*z[41]*(z[142]-z[35])-m*z[42]*
  pow((z[142]-z[35]),2))-2*z[146]*z[120]) - 0.5*z[22]*(2*pow(w,2)*z[42]*(
  z[42]*(Ixy+m*z[33]*z[34])-Ixx*z[40]-m*z[40]*pow(z[34],2)-m*z[33]*z[41]*(
  z[142]-z[35]))-2*pow(w,2)*z[40]*(z[40]*(Ixy+m*z[33]*z[34])-Iyy*z[42]-m*
  z[42]*pow(z[33],2)-m*z[34]*z[41]*(z[142]-z[35]))-z[153]*q2p-z[154]*q3p-2*
  z[152]*z[120]);
  z[157] = z[21]*(z[12]*z[34]*z[40]+(l+z[18]-z[35])*(z[21]*z[41]+z[22]*z[40])) - 
  z[34]*z[42]*pow(z[11],2) - z[22]*(z[12]*z[34]*z[41]+(z[17]+z[33])*(z[21]*
  z[41]+z[22]*z[40])) - z[12]*(z[12]*z[40]*(z[17]+z[33])-z[11]*z[14]*z[42]*(
  z[17]+z[33])-z[12]*z[41]*(l+z[18]-z[35])-z[11]*z[13]*z[42]*(l+z[18]-z[35]));
  z[160] = z[156]*z[157];
  z[161] = z[156]*z[159]/z[160];
  fay = z[161];
  z[155] = z[11]*z[12]*z[34]*z[42]*(z[13]*z[40]+z[14]*z[41]-z[12]*z[19]*z[41]-
  z[12]*z[20]*z[40]-z[11]*(z[21]*z[41]+z[22]*z[40]));
  z[158] = z[118]*z[12]*z[14]*z[19]*z[41]*(z[142]-z[35]) + z[118]*z[12]*z[14]*
  z[40]*(z[11]*z[34]-z[19]*z[33]) + 0.5*z[12]*z[41]*(z[147]*q2p+z[148]*q3p-2*
  pow(w,2)*z[42]*(Izz*z[41]+m*z[41]*pow(z[34],2)+m*z[34]*z[42]*(z[142]-z[35]))-
  2*pow(w,2)*z[41]*(z[40]*(Ixy+m*z[33]*z[34])-Iyy*z[42]-m*z[34]*z[41]*(z[142]-
  z[35])-m*z[42]*pow((z[142]-z[35]),2))-2*z[146]*z[120]) + 0.5*z[11]*z[13]*
  z[42]*(z[147]*q2p+z[148]*q3p-2*pow(w,2)*z[42]*(Izz*z[41]+m*z[41]*pow(z[34],
  2)+m*z[33]*z[40]*(z[142]-z[35])+m*z[34]*z[42]*(z[142]-z[35]))-2*pow(w,2)*
  z[41]*(z[40]*(Ixy+m*z[33]*z[34])-Iyy*z[42]-m*z[34]*z[41]*(z[142]-z[35])-m*
  z[42]*pow((z[142]-z[35]),2))-2*z[146]*z[120]) + 0.5*z[12]*z[40]*(2*pow(w,2)*
  z[42]*(z[42]*(Ixy+m*z[33]*z[34])-Ixx*z[40]-m*z[40]*pow(z[34],2)-2*m*z[33]*
  z[41]*(z[142]-z[35]))-2*pow(w,2)*z[40]*(z[40]*(Ixy+m*z[33]*z[34])-Iyy*z[42]-
  m*z[42]*pow(z[33],2)-m*z[34]*z[41]*(z[142]-z[35]))-z[153]*q2p-z[154]*q3p-2*
  z[152]*z[120]) - z[118]*z[12]*z[13]*z[20]*z[33]*z[40] - z[118]*z[12]*z[13]*
  z[41]*(z[11]*z[34]-z[20]*(z[142]-z[35])) - z[118]*z[11]*z[42]*(z[11]*z[34]-
  z[19]*z[33]-z[20]*(z[142]-z[35])) - z[118]*z[11]*(z[21]*z[41]+z[22]*z[40])*(
  z[13]*z[33]-z[14]*(z[142]-z[35])) - 0.5*z[11]*z[14]*z[42]*(2*pow(w,2)*z[42]*(
  z[42]*(Ixy+m*z[33]*z[34])-Ixx*z[40]-m*z[40]*pow(z[34],2)-m*z[33]*z[41]*(
  z[142]-z[35]))-2*pow(w,2)*z[40]*(z[40]*(Ixy+m*z[33]*z[34])-Iyy*z[42]-m*
  z[42]*pow(z[33],2)-m*z[34]*z[41]*(z[142]-z[35]))-z[153]*q2p-z[154]*q3p-2*
  z[152]*z[120]) - 0.5*(z[21]*z[41]+z[22]*z[40])*(2*pow(w,2)*z[40]*(Izz*z[41]+
  m*z[41]*pow(z[33],2)+m*z[33]*z[40]*(z[142]-z[35])+m*z[34]*z[42]*(z[142]-
  z[35]))+2*pow(w,2)*z[41]*(z[42]*(Ixy+m*z[33]*z[34])-Ixx*z[40]-m*z[33]*z[41]*(
  z[142]-z[35])-m*z[40]*pow((z[142]-z[35]),2))+z[150]*q2p+z[151]*q3p-2*z[149]*
  z[120]);
  z[162] = (z[155]*z[159]+z[157]*z[158])/z[160];
  faz = z[162];
  z[135] = z[12]*z[14]*z[19]*z[41]*(l+z[18]-z[35]) + z[12]*z[14]*z[40]*(z[11]*
  z[34]-z[19]*(z[17]+z[33])) - z[12]*z[13]*z[20]*z[40]*(z[17]+z[33]) - z[12]*
  z[13]*z[41]*(z[11]*z[34]-z[20]*(l+z[18]-z[35])) - z[11]*z[42]*(z[11]*z[34]-
  z[19]*(z[17]+z[33])-z[20]*(l+z[18]-z[35])) - z[11]*(z[21]*z[41]+z[22]*z[40])*(
  z[13]*(z[17]+z[33])-z[14]*(l+z[18]-z[35]));
  z[125] = w*(Ixy*z[88]-Ixx*z[84]-m*z[17]*z[92]*(k+z[18])-m*z[84]*pow((k+
  z[18]),2));
  z[126] = w*(Ixy*z[89]+2*m*z[18]*z[41]*(k+z[18])-Ixx*z[85]-2*m*z[41]*pow(
  z[17],2)-4*m*z[17]*z[40]*(k+z[18])-m*z[17]*z[93]*(k+z[18])-m*z[85]*pow((k+
  z[18]),2));
  z[124] = Ixy*z[42] - Ixx*z[40] - m*z[17]*z[41]*(k+z[18]) - m*z[40]*pow((k+
  z[18]),2);
  z[132] = w*(Izz*z[93]+m*z[93]*pow(z[17],2)+2*m*z[40]*pow(z[17],2)+m*z[17]*
  z[85]*(k+z[18])-4*m*z[17]*z[18]*z[41]-2*m*z[18]*z[40]*(k+z[18]));
  z[133] = w*(Izz*z[92]+m*z[92]*pow(z[17],2)+m*z[17]*z[84]*(k+z[18]));
  z[131] = Izz*z[41] + m*z[41]*pow(z[17],2) + m*z[17]*z[40]*(k+z[18]);
  z[128] = w*(Ixy*z[84]-Iyy*z[88]-m*z[88]*(pow(z[17],2)+pow((k+z[18]),2)));
  z[130] = w*(Ixy*z[85]-Iyy*z[89]-4*z[129]*z[17]*z[42]-m*z[89]*(pow(z[17],2)+
  pow((k+z[18]),2)));
  z[127] = Ixy*z[40] - Iyy*z[42] - m*z[42]*(pow(z[17],2)+pow((k+z[18]),2));
  z[138] = -0.5*z[21]*(z[125]*q2p+z[126]*q3p-2*pow(w,2)*z[42]*(Izz*z[41]+m*
  z[17]*z[40]*(k+z[18]))-2*pow(w,2)*z[41]*(Ixy*z[40]-Iyy*z[42]-m*z[42]*pow((k+
  z[18]),2))-2*z[124]*z[120]) - 0.5*z[22]*(2*pow(w,2)*z[42]*(Ixy*z[42]-Ixx*
  z[40]-m*z[17]*z[41]*(k+z[18]))+z[132]*q3p+z[133]*q2p-2*pow(w,2)*z[40]*(Ixy*
  z[40]-Iyy*z[42]-m*z[42]*pow(z[17],2))-2*z[131]*z[120]) - 0.5*z[12]*(2*pow(w,
  2)*z[40]*(Izz*z[41]+m*z[41]*pow(z[17],2)+m*z[17]*z[40]*(k+z[18]))+2*pow(w,2)*
  z[41]*(Ixy*z[42]-Ixx*z[40]-m*z[17]*z[41]*(k+z[18])-m*z[40]*pow((k+z[18]),2))+
  z[128]*q2p+z[130]*q3p-2*z[127]*z[120]);
  z[136] = z[34]*z[42]*pow(z[11],2) + z[22]*(z[12]*z[34]*z[41]+(z[17]+z[33])*(
  z[21]*z[41]+z[22]*z[40])) + z[12]*(z[12]*z[40]*(z[17]+z[33])-z[11]*z[14]*
  z[42]*(z[17]+z[33])-z[12]*z[41]*(l+z[18]-z[35])-z[11]*z[13]*z[42]*(l+z[18]-
  z[35])) - z[21]*(z[12]*z[34]*z[40]+(l+z[18]-z[35])*(z[21]*z[41]+z[22]*z[40]));
  z[139] = z[135]*z[136];
  z[140] = z[135]*z[138]/z[139];
  fby = z[140];
  z[134] = z[11]*z[12]*z[34]*z[42]*(z[13]*z[40]+z[14]*z[41]-z[11]*z[21]*z[41]-
  z[11]*z[22]*z[40]-z[12]*z[19]*z[41]-z[12]*z[20]*z[40]);
  z[137] = z[118]*z[12]*z[13]*z[17]*z[20]*z[40] + z[118]*z[12]*z[14]*z[17]*
  z[19]*z[40] + z[118]*z[11]*(z[21]*z[41]+z[22]*z[40])*(z[13]*z[17]-z[14]*(k+
  z[18])) + 0.5*z[12]*z[40]*(z[132]*q3p+z[133]*q2p-2*pow(w,2)*z[42]*(Ixx*
  z[40]-Ixy*z[42])-2*pow(w,2)*z[40]*(Ixy*z[40]-Iyy*z[42]-m*z[42]*pow(z[17],2))-
  2*z[131]*z[120]) + 0.5*z[11]*z[13]*z[42]*(z[125]*q2p+z[126]*q3p-2*pow(w,2)*
  z[42]*(Izz*z[41]+m*z[17]*z[40]*(k+z[18]))-2*pow(w,2)*z[41]*(Ixy*z[40]-Iyy*
  z[42]-m*z[42]*pow((k+z[18]),2))-2*z[124]*z[120]) + 0.5*z[12]*z[41]*(z[125]*
  q2p+z[126]*q3p-2*pow(w,2)*z[42]*(Izz*z[41]+2*m*z[17]*z[40]*(k+z[18]))-2*
  pow(w,2)*z[41]*(Ixy*z[40]-Iyy*z[42]-m*z[42]*pow((k+z[18]),2))-2*z[124]*
  z[120]) - z[118]*z[12]*z[13]*z[20]*z[41]*(k+z[18]) - z[118]*z[12]*z[14]*
  z[19]*z[41]*(k+z[18]) - z[118]*z[11]*z[42]*(z[17]*z[19]+z[20]*(k+z[18])) - 
  0.5*z[11]*z[14]*z[42]*(2*pow(w,2)*z[42]*(Ixy*z[42]-Ixx*z[40]-m*z[17]*z[41]*(
  k+z[18]))+z[132]*q3p+z[133]*q2p-2*pow(w,2)*z[40]*(Ixy*z[40]-Iyy*z[42]-m*
  z[42]*pow(z[17],2))-2*z[131]*z[120]) - 0.5*(z[21]*z[41]+z[22]*z[40])*(2*
  pow(w,2)*z[40]*(Izz*z[41]+m*z[41]*pow(z[17],2)+m*z[17]*z[40]*(k+z[18]))+2*
  pow(w,2)*z[41]*(Ixy*z[42]-Ixx*z[40]-m*z[17]*z[41]*(k+z[18])-m*z[40]*pow((k+
  z[18]),2))+z[128]*q2p+z[130]*q3p-2*z[127]*z[120]);
  z[141] = (z[134]*z[138]-z[136]*z[137])/z[139];
  fbz = -z[141];
  z[43] = pow(z[33],2) + pow(z[34],2) + pow(z[35],2);
  z[44] = pow(z[43],0.5);
  z[45] = z[33]/z[44];
  z[46] = z[34]/z[44];
  z[47] = z[35]/z[44];
  w2 = -w*z[42];
  z[53] = z[10]*z[11];
  z[54] = z[9]*z[11];
  ke = 0.5*pow(w,2)*(Iyy*pow(z[42],2)+Izz*pow(z[41],2)+z[40]*(Ixx*z[40]-2*Ixy*
  z[42])+m*(pow(z[59],2)+pow(z[60],2)+pow(z[61],2)));
  pe = g*m*(z[17]*z[21]+z[22]*(k+z[18]));
  te = ke + pe;
  z[163] = z[1]*z[51] + z[2]*z[52];
  z[164] = z[2]*z[54] - z[1]*z[53];
  z[165] = z[1]*z[55] + z[2]*z[56];
  z[166] = z[4]*z[51] + z[6]*z[21] - z[5]*z[52];
  z[167] = -z[4]*z[53] - z[5]*z[54] - z[6]*z[12];
  z[168] = z[4]*z[55] - z[5]*z[56] - z[6]*z[22];
  z[169] = z[3]*z[21] + z[8]*z[52] - z[7]*z[51];
  z[170] = z[7]*z[53] + z[8]*z[54] - z[3]*z[12];
  z[171] = z[8]*z[56] - z[3]*z[22] - z[7]*z[55];
  z[172] = z[15]*z[163] + z[16]*z[164];
  z[173] = z[15]*z[164] - z[16]*z[163];
  z[174] = z[15]*z[166] + z[16]*z[167];
  z[175] = z[15]*z[167] - z[16]*z[166];
  z[176] = z[15]*z[169] + z[16]*z[170];
  z[177] = z[15]*z[170] - z[16]*z[169];
  z[178] = z[1]*z[9] + z[2]*z[10];
  z[179] = z[2]*z[9] - z[1]*z[10];
  z[180] = z[4]*z[9] - z[5]*z[10];
  z[181] = -z[4]*z[10] - z[5]*z[9];
  z[182] = z[8]*z[10] - z[7]*z[9];
  z[183] = z[7]*z[10] + z[8]*z[9];
  z[184] = z[15]*z[11] - z[16]*z[12]*z[14];
  z[185] = z[184]*(z[30]+pow(z[28],2)/pow(z[29],0.5))/pow(z[30],2);
  z[186] = z[28]*z[184]/(pow(z[29],0.5)*pow(z[30],2));
  z[187] = rb*(z[21]*z[186]-z[16]*z[185]-z[12]*z[14]*z[31]);
  z[188] = rb*(z[15]*z[185]-z[11]*z[31]-z[12]*z[186]);
  z[189] = rb*(z[22]*z[186]-z[12]*z[13]*z[31]);
  z[190] = 2*z[34]*z[188] + 2*z[37]*z[189] - 2*z[36]*z[187];
  z[191] = (2*z[39]*z[187]+z[36]*z[190]/pow(z[38],0.5))/pow(z[39],2);
  z[192] = (2*z[39]*z[189]-z[37]*z[190]/pow(z[38],0.5))/pow(z[39],2);
  z[193] = (w*z[11]*(z[13]*z[192]+z[14]*z[191])-2*z[12]*(w1*z[14]-w3*z[13]))/
  pow(z[11],2);
  z[194] = z[16]*z[11]*z[13]*z[28];
  z[195] = (z[16]*z[11]*z[13]*z[30]+z[28]*z[194]/pow(z[29],0.5))/pow(z[30],2);
  z[196] = rb*(z[16]*z[195]-z[11]*z[13]*z[31]-z[21]*z[194]/(pow(z[29],0.5)*
  pow(z[30],2)));
  z[197] = rb*(z[15]*z[195]-z[12]*z[194]/(pow(z[29],0.5)*pow(z[30],2)));
  z[198] = rb*(z[11]*z[14]*z[31]-z[22]*z[194]/(pow(z[29],0.5)*pow(z[30],2)));
  z[199] = 2*z[34]*z[197] + 2*z[36]*(z[196]+ra*z[13]) - 2*z[37]*(z[198]-ra*
  z[14]);
  z[200] = (z[36]*z[199]/pow(z[38],0.5)-2*z[39]*(z[196]+ra*z[13]))/pow(z[39],
  2);
  z[201] = (z[37]*z[199]/pow(z[38],0.5)+2*z[39]*(z[198]-ra*z[14]))/pow(z[39],
  2);
  z[202] = (2*w1*z[13]+2*w3*z[14]+w*z[13]*z[201]-w*z[14]*z[200])/z[11];
  z[203] = (z[13]*z[41]-z[14]*z[40])/z[11];
  z[204] = w*(z[13]*z[191]-z[14]*z[192]);
  z[205] = w3*z[13] - w1*z[14] - 0.5*w*z[13]*z[200] - 0.5*w*z[14]*z[201];
  z[206] = z[13]*z[40] + z[14]*z[41];
  z[208] = (z[204]*(z[11]*z[14]*(l+z[18]-z[35])+z[48]*z[11]*z[12]*z[13]*(
  z[12]*z[28]/pow(z[29],0.5)-z[15]*(z[30]+pow(z[28],2)/pow(z[29],0.5)))/pow(
  z[30],2)-z[11]*z[13]*(z[17]+z[33])-z[22]*(rb*z[11]*z[14]*z[31]-ra*z[14]-
  z[48]*z[11]*z[13]*z[22]*z[28]/(pow(z[29],0.5)*pow(z[30],2)))-z[13]*z[21]*(
  ra-rb*z[11]*(z[31]+z[16]*z[21]*z[28]/(pow(z[29],0.5)*pow(z[30],2))-z[49]*(
  z[30]+pow(z[28],2)/pow(z[29],0.5))/pow(z[30],2))))*(z[11]*z[34]+rb*z[22]*(
  z[12]*z[13]*z[31]-z[22]*z[28]*(z[15]*z[11]-z[16]*z[12]*z[14])/(pow(z[29],
  0.5)*pow(z[30],2)))-z[12]*z[14]*(z[17]+z[33])-z[12]*z[13]*(l+z[18]-z[35])-
  rb*z[12]*(z[11]*z[31]+z[12]*z[28]*(z[15]*z[11]-z[16]*z[12]*z[14])/(pow(
  z[29],0.5)*pow(z[30],2))-z[15]*(z[30]+pow(z[28],2)/pow(z[29],0.5))*(z[15]*
  z[11]-z[16]*z[12]*z[14])/pow(z[30],2))-rb*z[21]*(z[21]*z[28]*(z[15]*z[11]-
  z[16]*z[12]*z[14])/(pow(z[29],0.5)*pow(z[30],2))-z[12]*z[14]*z[31]-z[16]*(
  z[30]+pow(z[28],2)/pow(z[29],0.5))*(z[15]*z[11]-z[16]*z[12]*z[14])/pow(
  z[30],2)))+2*(z[11]*z[34]+rb*z[22]*(z[12]*z[13]*z[31]-z[22]*z[28]*(z[15]*
  z[11]-z[16]*z[12]*z[14])/(pow(z[29],0.5)*pow(z[30],2)))-z[12]*z[14]*(z[17]+
  z[33])-z[12]*z[13]*(l+z[18]-z[35])-rb*z[12]*(z[11]*z[31]+z[12]*z[28]*(z[15]*
  z[11]-z[16]*z[12]*z[14])/(pow(z[29],0.5)*pow(z[30],2))-z[15]*(z[30]+pow(
  z[28],2)/pow(z[29],0.5))*(z[15]*z[11]-z[16]*z[12]*z[14])/pow(z[30],2))-rb*
  z[21]*(z[21]*z[28]*(z[15]*z[11]-z[16]*z[12]*z[14])/(pow(z[29],0.5)*pow(
  z[30],2))-z[12]*z[14]*z[31]-z[16]*(z[30]+pow(z[28],2)/pow(z[29],0.5))*(
  z[15]*z[11]-z[16]*z[12]*z[14])/pow(z[30],2)))*(z[11]*z[13]*z[187]+z[12]*
  z[13]*(z[17]+z[33])+2*z[48]*z[11]*z[12]*z[13]*z[184]*pow(z[28],2)*(z[12]-
  z[15]*z[28])/(z[29]*pow(z[30],3))+z[48]*z[11]*z[12]*z[13]*z[184]*(z[12]*
  z[29]+z[12]*pow(z[28],2)-z[15]*z[28]*(3*z[29]+pow(z[28],2)))/(pow(z[29],1.5)*
  pow(z[30],2))-z[11]*z[14]*z[189]-z[12]*z[14]*(l+z[18]-z[35])-2*z[48]*z[11]*
  z[12]*z[22]*z[28]*pow(z[13],2)/(pow(z[29],0.5)*pow(z[30],2))-rb*z[11]*z[12]*
  z[13]*z[14]*(2*z[16]*z[21]*z[28]/(pow(z[29],0.5)*pow(z[30],2))-z[49]*(z[30]+
  pow(z[28],2)/pow(z[29],0.5))/pow(z[30],2))-z[48]*z[13]*(pow(z[12],2)*(z[12]*
  z[28]/pow(z[29],0.5)-z[15]*(z[30]+pow(z[28],2)/pow(z[29],0.5)))-pow(z[11],2)*(
  2*z[12]*z[28]/pow(z[29],0.5)-z[15]*(z[30]+pow(z[28],2)/pow(z[29],0.5))))/
  pow(z[30],2)-z[22]*(rb*z[11]*z[14]*z[186]-rb*z[12]*z[14]*z[31]-z[48]*z[13]*
  z[22]*(z[11]*z[184]-z[12]*z[28])/(pow(z[29],0.5)*pow(z[30],2))-z[48]*z[11]*
  z[13]*z[22]*z[184]*pow(z[28],2)*(2+z[30]/pow(z[29],0.5))/(z[29]*pow(z[30],3)))-
  rb*z[13]*z[21]*(z[12]*(z[31]+z[16]*z[21]*z[28]/(pow(z[29],0.5)*pow(z[30],2))-
  z[49]*(z[30]+pow(z[28],2)/pow(z[29],0.5))/pow(z[30],2))-z[11]*(z[186]+z[16]*
  z[21]*z[184]/(pow(z[29],0.5)*pow(z[30],2))-z[49]*z[28]*z[184]*(3*z[29]+pow(
  z[28],2))/(pow(z[29],1.5)*pow(z[30],2))-z[184]*pow(z[28],2)*(2*z[49]*z[28]-
  z[16]*z[21]*(2+z[30]/pow(z[29],0.5)))/(z[29]*pow(z[30],3)))))*q2p-2*(z[11]*
  z[14]*(l+z[18]-z[35])+z[48]*z[11]*z[12]*z[13]*(z[12]*z[28]/pow(z[29],0.5)-
  z[15]*(z[30]+pow(z[28],2)/pow(z[29],0.5)))/pow(z[30],2)-z[11]*z[13]*(z[17]+
  z[33])-z[22]*(rb*z[11]*z[14]*z[31]-ra*z[14]-z[48]*z[11]*z[13]*z[22]*z[28]/(
  pow(z[29],0.5)*pow(z[30],2)))-z[13]*z[21]*(ra-rb*z[11]*(z[31]+z[16]*z[21]*
  z[28]/(pow(z[29],0.5)*pow(z[30],2))-z[49]*(z[30]+pow(z[28],2)/pow(z[29],0.5))/
  pow(z[30],2))))*(z[11]*z[188]+z[12]*z[13]*z[189]+z[12]*z[14]*z[187]+rb*
  z[22]*(z[11]*z[13]*z[31]+z[12]*z[13]*z[186]-z[22]*z[184]*pow(z[28],2)*(2+
  z[30]/pow(z[29],0.5))*(z[15]*z[11]-z[16]*z[12]*z[14])/(z[29]*pow(z[30],3))-(
  z[22]*z[184]*(z[15]*z[11]-z[16]*z[12]*z[14])-z[22]*z[28]*(z[15]*z[12]+z[16]*
  z[11]*z[14])-2*z[12]*z[13]*z[28]*(z[15]*z[11]-z[16]*z[12]*z[14]))/(pow(
  z[29],0.5)*pow(z[30],2)))-z[12]*z[34]-z[11]*z[14]*(z[17]+z[33])-rb*z[31]*
  pow(z[12],2)*pow(z[13],2)-z[11]*z[13]*(l+z[18]-z[35])-rb*z[12]*z[14]*(z[12]*
  z[14]*z[31]-z[49]*z[12]*z[14]*(z[30]+pow(z[28],2)/pow(z[29],0.5))/pow(z[30],
  2)-2*z[21]*z[28]*(z[15]*z[11]-z[16]*z[12]*z[14])/(pow(z[29],0.5)*pow(z[30],
  2)))-rb*z[11]*(z[11]*z[31]+2*z[12]*z[28]*(z[15]*z[11]-1.5*z[16]*z[12]*z[14])/(
  pow(z[29],0.5)*pow(z[30],2))-z[15]*(z[30]+pow(z[28],2)/pow(z[29],0.5))*(
  z[15]*z[11]-3*z[16]*z[12]*z[14])/pow(z[30],2))-rb*z[12]*(z[11]*z[186]+
  z[207]*z[12]*(z[30]+pow(z[28],2)/pow(z[29],0.5))/pow(z[30],2)-z[12]*z[31]-
  z[12]*(z[15]*z[12]*z[28]-z[184]*(z[15]*z[11]-z[16]*z[12]*z[14]))/(pow(z[29],
  0.5)*pow(z[30],2))-z[15]*z[28]*z[184]*(3*z[29]+pow(z[28],2))*(z[15]*z[11]-
  z[16]*z[12]*z[14])/(pow(z[29],1.5)*pow(z[30],2))-z[184]*pow(z[28],2)*(z[15]*
  z[11]-z[16]*z[12]*z[14])*(2*z[15]*z[28]-z[12]*(2+z[30]/pow(z[29],0.5)))/(
  z[29]*pow(z[30],3)))-rb*z[21]*(z[16]*(z[15]*z[12]+z[16]*z[11]*z[14])*(z[30]+
  pow(z[28],2)/pow(z[29],0.5))/pow(z[30],2)-z[11]*z[14]*z[31]-z[12]*z[14]*
  z[186]-z[16]*z[28]*z[184]*(3*z[29]+pow(z[28],2))*(z[15]*z[11]-z[16]*z[12]*
  z[14])/(pow(z[29],1.5)*pow(z[30],2))-z[21]*(z[28]*(z[15]*z[12]+z[16]*z[11]*
  z[14])-z[184]*(z[15]*z[11]-z[16]*z[12]*z[14]))/(pow(z[29],0.5)*pow(z[30],2))-
  z[184]*pow(z[28],2)*(z[15]*z[11]-z[16]*z[12]*z[14])*(2*z[16]*z[28]-z[21]*(2+
  z[30]/pow(z[29],0.5)))/(z[29]*pow(z[30],3))))*q2p)/pow((z[11]*z[14]*(l+
  z[18]-z[35])+z[48]*z[11]*z[12]*z[13]*(z[12]*z[28]/pow(z[29],0.5)-z[15]*(
  z[30]+pow(z[28],2)/pow(z[29],0.5)))/pow(z[30],2)-z[11]*z[13]*(z[17]+z[33])-
  z[22]*(rb*z[11]*z[14]*z[31]-ra*z[14]-z[48]*z[11]*z[13]*z[22]*z[28]/(pow(
  z[29],0.5)*pow(z[30],2)))-z[13]*z[21]*(ra-rb*z[11]*(z[31]+z[16]*z[21]*z[28]/(
  pow(z[29],0.5)*pow(z[30],2))-z[49]*(z[30]+pow(z[28],2)/pow(z[29],0.5))/pow(
  z[30],2)))),2);
  z[211] = (z[205]*(z[11]*z[14]*(l+z[18]-z[35])+z[48]*z[11]*z[12]*z[13]*(
  z[12]*z[28]/pow(z[29],0.5)-z[15]*(z[30]+pow(z[28],2)/pow(z[29],0.5)))/pow(
  z[30],2)-z[11]*z[13]*(z[17]+z[33])-z[22]*(rb*z[11]*z[14]*z[31]-ra*z[14]-
  z[48]*z[11]*z[13]*z[22]*z[28]/(pow(z[29],0.5)*pow(z[30],2)))-z[13]*z[21]*(
  ra-rb*z[11]*(z[31]+z[16]*z[21]*z[28]/(pow(z[29],0.5)*pow(z[30],2))-z[49]*(
  z[30]+pow(z[28],2)/pow(z[29],0.5))/pow(z[30],2))))*(z[11]*z[34]+rb*z[22]*(
  z[12]*z[13]*z[31]-z[22]*z[28]*(z[15]*z[11]-z[16]*z[12]*z[14])/(pow(z[29],
  0.5)*pow(z[30],2)))-z[12]*z[14]*(z[17]+z[33])-z[12]*z[13]*(l+z[18]-z[35])-
  rb*z[12]*(z[11]*z[31]+z[12]*z[28]*(z[15]*z[11]-z[16]*z[12]*z[14])/(pow(
  z[29],0.5)*pow(z[30],2))-z[15]*(z[30]+pow(z[28],2)/pow(z[29],0.5))*(z[15]*
  z[11]-z[16]*z[12]*z[14])/pow(z[30],2))-rb*z[21]*(z[21]*z[28]*(z[15]*z[11]-
  z[16]*z[12]*z[14])/(pow(z[29],0.5)*pow(z[30],2))-z[12]*z[14]*z[31]-z[16]*(
  z[30]+pow(z[28],2)/pow(z[29],0.5))*(z[15]*z[11]-z[16]*z[12]*z[14])/pow(
  z[30],2)))+(z[11]*z[34]+rb*z[22]*(z[12]*z[13]*z[31]-z[22]*z[28]*(z[15]*
  z[11]-z[16]*z[12]*z[14])/(pow(z[29],0.5)*pow(z[30],2)))-z[12]*z[14]*(z[17]+
  z[33])-z[12]*z[13]*(l+z[18]-z[35])-rb*z[12]*(z[11]*z[31]+z[12]*z[28]*(z[15]*
  z[11]-z[16]*z[12]*z[14])/(pow(z[29],0.5)*pow(z[30],2))-z[15]*(z[30]+pow(
  z[28],2)/pow(z[29],0.5))*(z[15]*z[11]-z[16]*z[12]*z[14])/pow(z[30],2))-rb*
  z[21]*(z[21]*z[28]*(z[15]*z[11]-z[16]*z[12]*z[14])/(pow(z[29],0.5)*pow(
  z[30],2))-z[12]*z[14]*z[31]-z[16]*(z[30]+pow(z[28],2)/pow(z[29],0.5))*(
  z[15]*z[11]-z[16]*z[12]*z[14])/pow(z[30],2)))*(z[11]*z[13]*(z[196]+2*ra*
  z[13])+z[48]*z[11]*z[12]*z[14]*(z[12]*z[28]/pow(z[29],0.5)-z[15]*(z[30]+
  pow(z[28],2)/pow(z[29],0.5)))/pow(z[30],2)-z[11]*z[14]*z[198]-z[11]*z[14]*(
  z[17]+z[33])-z[11]*z[13]*(l+z[18]-z[35])-rb*pow(z[11],2)*pow(z[13],2)*(
  z[31]-z[49]*(z[30]+pow(z[28],2)/pow(z[29],0.5))/pow(z[30],2))-z[11]*z[14]*(
  rb*z[11]*z[14]*z[31]-2*ra*z[14]-2*z[48]*z[11]*z[13]*z[22]*z[28]/(pow(z[29],
  0.5)*pow(z[30],2)))-z[48]*z[11]*z[12]*z[13]*z[194]*(2*z[12]*z[28]/pow(z[29],
  0.5)-z[15]*(z[30]+2*pow(z[28],2)/pow(z[29],0.5)))/(pow(z[29],0.5)*pow(z[30],
  3))-z[14]*z[21]*(ra-rb*z[11]*(z[31]+z[16]*z[21]*z[28]/(pow(z[29],0.5)*pow(
  z[30],2))-z[49]*(z[30]+pow(z[28],2)/pow(z[29],0.5))/pow(z[30],2)))-z[48]*
  z[11]*z[12]*z[13]*(z[12]*z[28]*z[194]+z[16]*z[11]*z[12]*z[13]*z[29]-z[15]*
  z[28]*(z[28]*z[194]+2*z[16]*z[11]*z[13]*z[29]))/(pow(z[29],1.5)*pow(z[30],2))-
  z[22]*(ra*z[13]+z[48]*z[11]*z[13]*z[22]*z[28]*z[194]*(2+z[30]/pow(z[29],0.5))/(
  z[29]*pow(z[30],3))-rb*z[11]*z[13]*z[31]-z[11]*(rb*z[14]*z[194]+z[48]*z[14]*
  z[22]*z[28]-z[209]*z[11]*z[22]*pow(z[13],2))/(pow(z[29],0.5)*pow(z[30],2)))-
  rb*z[11]*z[13]*z[21]*((z[194]+z[49]*z[11]*z[13]*z[21]+2*z[16]*z[11]*z[13]*
  z[28])/(pow(z[29],0.5)*pow(z[30],2))-z[49]*(z[29]*z[194]+z[194]*pow(z[28],2)+
  2*z[16]*z[11]*z[13]*z[28]*z[29])/(pow(z[29],1.5)*pow(z[30],2))-z[28]*z[194]*(
  2*z[49]*z[28]-z[16]*z[21]*(2+z[30]/pow(z[29],0.5)))/(z[29]*pow(z[30],3))))*
  q2p+(z[11]*z[14]*(l+z[18]-z[35])+z[48]*z[11]*z[12]*z[13]*(z[12]*z[28]/pow(
  z[29],0.5)-z[15]*(z[30]+pow(z[28],2)/pow(z[29],0.5)))/pow(z[30],2)-z[11]*
  z[13]*(z[17]+z[33])-z[22]*(rb*z[11]*z[14]*z[31]-ra*z[14]-z[48]*z[11]*z[13]*
  z[22]*z[28]/(pow(z[29],0.5)*pow(z[30],2)))-z[13]*z[21]*(ra-rb*z[11]*(z[31]+
  z[16]*z[21]*z[28]/(pow(z[29],0.5)*pow(z[30],2))-z[49]*(z[30]+pow(z[28],2)/
  pow(z[29],0.5))/pow(z[30],2))))*(z[11]*z[197]+z[12]*z[14]*(l+z[18]-z[35])+2*
  rb*z[11]*z[14]*z[22]*z[28]*(z[15]*z[11]-z[16]*z[12]*z[14])/(pow(z[29],0.5)*
  pow(z[30],2))-z[12]*z[13]*z[198]-z[12]*z[14]*z[196]-z[12]*z[13]*(z[17]+
  z[33])-rb*z[11]*z[13]*(z[15]*z[11]-z[16]*z[12]*z[14])*(2*z[21]*z[28]/(pow(
  z[29],0.5)*pow(z[30],2))-z[16]*(z[30]+pow(z[28],2)/pow(z[29],0.5))/pow(
  z[30],2))-rb*z[22]*(z[12]*z[14]*z[31]+z[22]*z[28]*z[194]*(2+z[30]/pow(z[29],
  0.5))*(z[15]*z[11]-z[16]*z[12]*z[14])/(z[29]*pow(z[30],3))-z[13]*(z[12]*
  z[194]+z[16]*z[12]*z[22]*z[28]-z[16]*z[11]*z[22]*(z[15]*z[11]-z[16]*z[12]*
  z[14]))/(pow(z[29],0.5)*pow(z[30],2)))-rb*z[12]*(z[210]*z[12]*z[13]*(z[30]+
  pow(z[28],2)/pow(z[29],0.5))/pow(z[30],2)-z[28]*z[194]*(z[15]*z[11]-z[16]*
  z[12]*z[14])*(2*z[15]*z[28]-z[12]*(2+z[30]/pow(z[29],0.5)))/(z[29]*pow(
  z[30],3))-z[15]*(z[15]*z[11]-z[16]*z[12]*z[14])*(z[29]*z[194]+z[194]*pow(
  z[28],2)+2*z[16]*z[11]*z[13]*z[28]*z[29])/(pow(z[29],1.5)*pow(z[30],2))-(
  z[16]*z[13]*z[28]*pow(z[12],2)-z[11]*z[194]-z[16]*z[11]*z[12]*z[13]*(z[15]*
  z[11]-z[16]*z[12]*z[14]))/(pow(z[29],0.5)*pow(z[30],2)))-rb*z[21]*(z[49]*
  z[12]*z[13]*(z[30]+pow(z[28],2)/pow(z[29],0.5))/pow(z[30],2)-z[12]*z[13]*
  z[31]-z[28]*z[194]*(z[15]*z[11]-z[16]*z[12]*z[14])*(2*z[16]*z[28]-z[21]*(2+
  z[30]/pow(z[29],0.5)))/(z[29]*pow(z[30],3))-z[16]*(z[15]*z[11]-z[16]*z[12]*
  z[14])*(z[29]*z[194]+z[194]*pow(z[28],2)+2*z[16]*z[11]*z[13]*z[28]*z[29])/(
  pow(z[29],1.5)*pow(z[30],2))-(z[12]*z[14]*z[194]+z[16]*z[12]*z[13]*z[21]*
  z[28]-z[16]*z[11]*z[13]*z[21]*(z[15]*z[11]-z[16]*z[12]*z[14]))/(pow(z[29],
  0.5)*pow(z[30],2))))*q2p)/pow((z[11]*z[14]*(l+z[18]-z[35])+z[48]*z[11]*
  z[12]*z[13]*(z[12]*z[28]/pow(z[29],0.5)-z[15]*(z[30]+pow(z[28],2)/pow(z[29],
  0.5)))/pow(z[30],2)-z[11]*z[13]*(z[17]+z[33])-z[22]*(rb*z[11]*z[14]*z[31]-
  ra*z[14]-z[48]*z[11]*z[13]*z[22]*z[28]/(pow(z[29],0.5)*pow(z[30],2)))-z[13]*
  z[21]*(ra-rb*z[11]*(z[31]+z[16]*z[21]*z[28]/(pow(z[29],0.5)*pow(z[30],2))-
  z[49]*(z[30]+pow(z[28],2)/pow(z[29],0.5))/pow(z[30],2)))),2);
  z[212] = z[206]*(z[11]*z[34]+rb*z[22]*(z[12]*z[13]*z[31]-z[22]*z[28]*(z[15]*
  z[11]-z[16]*z[12]*z[14])/(pow(z[29],0.5)*pow(z[30],2)))-z[12]*z[14]*(z[17]+
  z[33])-z[12]*z[13]*(l+z[18]-z[35])-rb*z[12]*(z[11]*z[31]+z[12]*z[28]*(z[15]*
  z[11]-z[16]*z[12]*z[14])/(pow(z[29],0.5)*pow(z[30],2))-z[15]*(z[30]+pow(
  z[28],2)/pow(z[29],0.5))*(z[15]*z[11]-z[16]*z[12]*z[14])/pow(z[30],2))-rb*
  z[21]*(z[21]*z[28]*(z[15]*z[11]-z[16]*z[12]*z[14])/(pow(z[29],0.5)*pow(
  z[30],2))-z[12]*z[14]*z[31]-z[16]*(z[30]+pow(z[28],2)/pow(z[29],0.5))*(
  z[15]*z[11]-z[16]*z[12]*z[14])/pow(z[30],2)))/(z[11]*z[14]*(l+z[18]-z[35])+
  z[48]*z[11]*z[12]*z[13]*(z[12]*z[28]/pow(z[29],0.5)-z[15]*(z[30]+pow(z[28],
  2)/pow(z[29],0.5)))/pow(z[30],2)-z[11]*z[13]*(z[17]+z[33])-z[22]*(rb*z[11]*
  z[14]*z[31]-ra*z[14]-z[48]*z[11]*z[13]*z[22]*z[28]/(pow(z[29],0.5)*pow(
  z[30],2)))-z[13]*z[21]*(ra-rb*z[11]*(z[31]+z[16]*z[21]*z[28]/(pow(z[29],0.5)*
  pow(z[30],2))-z[49]*(z[30]+pow(z[28],2)/pow(z[29],0.5))/pow(z[30],2))));
  z[213] = z[9]*z[20] - z[10]*z[14];
  z[214] = -z[9]*z[19] - z[10]*z[13];
  z[215] = (z[17]*z[213]+z[18]*z[214])*q3p;
  z[216] = z[10]*z[11]*(z[13]*z[17]-z[14]*z[18])*q3p - 0.5*(z[17]*z[55]+z[18]*
  z[51])*z[208];
  z[217] = z[9]*z[13] - z[10]*z[12]*z[14];
  z[218] = -z[9]*z[14] - z[10]*z[12]*z[13];
  z[219] = (z[17]*z[217]+z[18]*z[218]+ra*z[13]*z[55]-ra*z[14]*z[51])*q3p + (
  z[17]*z[55]+z[18]*z[51])*z[211];
  z[220] = z[212]*(z[17]*z[55]+z[18]*z[51]);
  z[221] = -z[9]*z[11]*(z[13]*z[17]-z[14]*z[18])*q3p - 0.5*(z[17]*z[56]+z[18]*
  z[52])*z[208];
  z[222] = z[10]*z[13] + z[9]*z[12]*z[14];
  z[223] = z[9]*z[12]*z[13] - z[10]*z[14];
  z[224] = (z[17]*z[222]+z[18]*z[223]+ra*z[13]*z[56]-ra*z[14]*z[52])*q3p + (
  z[17]*z[56]+z[18]*z[52])*z[211];
  z[225] = z[212]*(z[17]*z[56]+z[18]*z[52]);
  z[226] = (2*z[39]*z[188]-z[34]*z[190]/pow(z[38],0.5))/pow(z[39],2);
  z[227] = -z[15]*z[12] - z[16]*z[11]*z[14];
  z[228] = z[26]*z[184] + z[28]*z[227];
  z[229] = (z[29]*z[228]+z[28]*z[64]*z[184])/pow(z[29],1.5);
  z[230] = (z[30]*(z[28]*z[229]+z[30]*z[227]+z[66]*z[184])+z[28]*z[184]*(
  z[26]*z[30]+2*z[28]*z[66])/pow(z[29],0.5))/pow(z[30],3);
  z[231] = (z[30]*z[229]+2*z[28]*z[66]*z[184]/pow(z[29],0.5))/pow(z[30],3);
  z[232] = rb*(z[15]*z[230]+z[12]*z[31]-z[11]*z[70]-z[11]*z[186]-z[12]*z[231]);
  z[233] = rb*(z[21]*z[231]-z[16]*z[230]-z[19]*z[186]-z[11]*z[14]*z[31]-z[12]*
  z[14]*z[70]);
  z[234] = rb*(z[22]*z[231]-z[20]*z[186]-z[11]*z[13]*z[31]-z[12]*z[13]*z[70]);
  z[235] = 2*z[34]*z[232] + 2*z[37]*z[234] + 2*z[75]*z[188] - 2*z[36]*z[233] - 
  2*z[72]*z[187] - 2*z[77]*z[189];
  z[236] = (2*z[38]*z[235]-z[80]*z[190])/pow(z[38],1.5);
  z[237] = (2*z[190]*(z[37]*z[82]+z[39]*z[77])/pow(z[38],0.5)+z[39]*(4*z[39]*
  z[234]-2*z[82]*z[189]-z[37]*z[236]))/pow(z[39],3);
  z[238] = z[63]*z[184] - z[16]*z[12]*z[13]*z[28];
  z[239] = (z[29]*z[238]+z[28]*z[65]*z[184])/pow(z[29],1.5);
  z[240] = (z[28]*z[184]*(z[30]*z[63]+2*z[28]*z[67])/pow(z[29],0.5)+z[30]*(
  z[28]*z[239]+z[67]*z[184]-z[16]*z[12]*z[13]*z[30]))/pow(z[30],3);
  z[241] = (z[30]*z[239]+2*z[28]*z[67]*z[184]/pow(z[29],0.5))/pow(z[30],3);
  z[242] = rb*(z[15]*z[240]-z[11]*z[71]-z[12]*z[241]);
  z[243] = rb*(z[21]*z[241]+z[22]*z[186]-z[16]*z[240]-z[12]*z[13]*z[31]-z[12]*
  z[14]*z[71]);
  z[244] = rb*(z[21]*z[186]+z[12]*z[13]*z[71]-z[22]*z[241]-z[12]*z[14]*z[31]);
  z[245] = 2*z[34]*z[242] + 2*z[76]*z[188] + 2*z[79]*z[189] - 2*z[36]*z[243] - 
  2*z[37]*z[244] - 2*z[74]*z[187];
  z[246] = (2*z[38]*z[245]-z[81]*z[190])/pow(z[38],1.5);
  z[247] = (2*z[37]*z[83]*z[190]/pow(z[38],0.5)-z[39]*(z[37]*z[246]+2*z[83]*
  z[189]+4*z[39]*z[244]+2*z[79]*z[190]/pow(z[38],0.5)))/pow(z[39],3);
  z[248] = 0.25*z[94]*z[204] + 0.25*w*z[237]*q2p + 0.25*w*z[247]*q3p + 0.25*
  z[95]*z[208];
  z[249] = (2*z[36]*z[82]*z[190]/pow(z[38],0.5)+z[39]*(2*z[82]*z[187]-4*z[39]*
  z[233]-z[36]*z[236]-2*z[72]*z[190]/pow(z[38],0.5)))/pow(z[39],3);
  z[250] = (2*z[36]*z[83]*z[190]/pow(z[38],0.5)+z[39]*(2*z[83]*z[187]-4*z[39]*
  z[243]-z[36]*z[246]-2*z[74]*z[190]/pow(z[38],0.5)))/pow(z[39],3);
  z[251] = 0.25*z[86]*z[204] + 0.25*w*z[249]*q2p + 0.25*w*z[250]*q3p + 0.25*
  z[87]*z[208];
  z[252] = (2*z[34]*z[82]*z[190]/pow(z[38],0.5)+z[39]*(4*z[39]*z[232]-2*z[82]*
  z[188]-z[34]*z[236]-2*z[75]*z[190]/pow(z[38],0.5)))/pow(z[39],3);
  z[253] = (2*z[34]*z[83]*z[190]/pow(z[38],0.5)+z[39]*(4*z[39]*z[242]-2*z[83]*
  z[188]-z[34]*z[246]-2*z[76]*z[190]/pow(z[38],0.5)))/pow(z[39],3);
  z[254] = -0.25*z[90]*z[204] - 0.25*w*z[252]*q2p - 0.25*w*z[253]*q3p - 0.25*
  z[91]*z[208];
  z[255] = 0.5*z[17]*z[192] - 0.5*z[191]*(k+z[18]);
  z[256] = 0.25*z[17]*z[253] + 0.5*z[18]*z[226];
  z[257] = 0.25*z[113]*z[204] + pow(w,2)*z[40]*z[255] + 0.5*pow(w,2)*z[59]*
  z[226] + 0.5*pow(w,2)*z[42]*z[226]*(k+z[18]) + w*z[256]*q3p + 0.25*w*z[17]*
  z[252]*q2p - 0.5*pow(w,2)*z[60]*z[191] - 0.5*z[112]*z[208];
  z[258] = 0.25*z[253]*(k+z[18]) - 0.5*z[17]*z[226];
  z[259] = w*z[252]*(k+z[18]);
  z[260] = 0.25*z[105]*z[204] + 0.25*z[259]*q2p + w*z[258]*q3p - pow(w,2)*
  z[41]*z[255] - 0.5*pow(w,2)*z[60]*z[192] - 0.5*pow(w,2)*z[61]*z[226] - 0.5*
  pow(w,2)*z[17]*z[42]*z[226] - 0.5*z[104]*z[208];
  z[261] = 0.25*z[17]*z[247] + 0.5*z[17]*z[191] + 0.5*z[18]*z[192] + 0.25*
  z[250]*(k+z[18]);
  z[262] = 0.25*z[17]*z[237] + 0.25*z[249]*(k+z[18]);
  z[263] = 0.5*pow(w,2)*z[59]*z[192] + 0.5*pow(w,2)*z[61]*z[191] + 0.5*pow(w,
  2)*z[41]*z[226]*(k+z[18]) + w*z[261]*q3p + w*z[262]*q2p - 0.5*z[109]*z[204] - 
  0.5*pow(w,2)*z[17]*z[40]*z[226] - 0.5*z[108]*z[208];
  z[264] = 0.5*z[118]*(2*z[12]*z[13]*z[17]*z[42]+z[21]*z[226]*(k+z[18])-z[17]*
  z[22]*z[226]-2*z[12]*z[14]*z[42]*(k+z[18])-2*z[11]*(z[17]*z[41]+z[40]*(k+
  z[18]))-z[12]*(z[17]*z[192]-z[191]*(k+z[18]))) + Izz*z[41]*z[248] + 0.5*Izz*
  z[192]*z[98] + z[40]*(Ixx*z[251]+Ixy*z[254]) + 0.5*m*(z[17]*z[226]*z[116]+2*
  z[17]*z[42]*z[257]+z[226]*(k+z[18])*z[114]+2*z[42]*(k+z[18])*z[260]+(z[17]*
  z[192]-z[191]*(k+z[18]))*z[115]+2*(z[17]*z[41]+z[40]*(k+z[18]))*z[263]) - 
  z[42]*(Ixy*z[251]+Iyy*z[254]) - 0.5*z[191]*(Ixx*z[96]+Ixy*z[97]) - 0.5*
  z[226]*(Ixy*z[96]+Iyy*z[97]);
  z[265] = Ixx*z[40]*z[191] + z[226]*(Ixy*z[40]-Iyy*z[42]) - Ixy*z[42]*z[191] - 
  Izz*z[41]*z[192] - 0.5*m*z[17]*z[61]*z[226] - 0.5*m*z[42]*z[226]*pow(z[17],
  2) - 0.5*m*z[59]*z[226]*(k+z[18]) - 0.5*m*z[42]*z[226]*pow((k+z[18]),2) - m*
  z[255]*(z[17]*z[41]+z[40]*(k+z[18])) - 0.5*m*z[60]*(z[17]*z[192]-z[191]*(k+
  z[18]));
  z[266] = (z[117]*z[264]-z[265]*z[119])/pow(z[117],2);
  z[267] = (2*z[39]*z[197]-z[34]*z[199]/pow(z[38],0.5))/pow(z[39],2);
  z[268] = z[16]*z[13]*(z[11]*z[26]-z[12]*z[28]);
  z[269] = (z[29]*z[268]+z[64]*z[194])/pow(z[29],1.5);
  z[270] = (z[194]*(z[26]*z[30]+2*z[28]*z[66])/pow(z[29],0.5)+z[30]*(z[28]*
  z[269]+z[16]*z[11]*z[13]*z[66]-z[16]*z[12]*z[13]*z[30]))/pow(z[30],3);
  z[271] = (z[30]*z[269]+2*z[66]*z[194]/pow(z[29],0.5))/pow(z[30],3);
  z[272] = rb*(z[15]*z[270]-z[12]*z[271]-z[11]*z[194]/(pow(z[29],0.5)*pow(
  z[30],2)));
  z[273] = rb*(z[21]*z[271]+z[11]*z[13]*z[70]-z[16]*z[270]-z[12]*z[13]*z[31]-
  z[19]*z[194]/(pow(z[29],0.5)*pow(z[30],2)));
  z[274] = rb*(z[22]*z[271]+z[12]*z[14]*z[31]-z[11]*z[14]*z[70]-z[20]*z[194]/(
  pow(z[29],0.5)*pow(z[30],2)));
  z[275] = 2*z[34]*z[272] + 2*z[37]*z[274] + 2*z[75]*z[197] + 2*z[72]*(z[196]+
  ra*z[13]) + 2*z[77]*(z[198]-ra*z[14]) - 2*z[36]*z[273];
  z[276] = (2*z[38]*z[275]-z[80]*z[199])/pow(z[38],1.5);
  z[277] = (2*z[199]*(z[37]*z[82]+z[39]*z[77])/pow(z[38],0.5)-z[39]*(z[37]*
  z[276]-4*z[39]*z[274]-2*z[82]*(z[198]-ra*z[14])))/pow(z[39],3);
  z[278] = z[16]*z[11]*(z[13]*z[63]-z[14]*z[28]);
  z[279] = (z[29]*z[278]+z[65]*z[194])/pow(z[29],1.5);
  z[280] = (z[194]*(z[30]*z[63]+2*z[28]*z[67])/pow(z[29],0.5)+z[30]*(z[28]*
  z[279]+z[16]*z[11]*z[13]*z[67]-z[16]*z[11]*z[14]*z[30]))/pow(z[30],3);
  z[281] = (z[30]*z[279]+2*z[67]*z[194]/pow(z[29],0.5))/pow(z[30],3);
  z[282] = rb*(z[15]*z[280]-z[12]*z[281]);
  z[283] = rb*(z[16]*z[280]+z[11]*z[14]*z[31]-z[21]*z[281]-z[11]*z[13]*z[71]-
  z[22]*z[194]/(pow(z[29],0.5)*pow(z[30],2)));
  z[284] = rb*(z[22]*z[281]-z[11]*z[13]*z[31]-z[11]*z[14]*z[71]-z[21]*z[194]/(
  pow(z[29],0.5)*pow(z[30],2)));
  z[285] = 2*z[34]*z[282] + 2*z[76]*z[197] + 2*z[37]*(z[284]+ra*z[13]) + 2*
  z[74]*(z[196]+ra*z[13]) + 2*z[36]*(z[283]-ra*z[14]) - 2*z[79]*(z[198]-ra*
  z[14]);
  z[286] = (2*z[38]*z[285]-z[81]*z[199])/pow(z[38],1.5);
  z[287] = (2*z[199]*(z[37]*z[83]-z[39]*z[79])/pow(z[38],0.5)-z[39]*(z[37]*
  z[286]-4*z[39]*(z[284]+ra*z[13])-2*z[83]*(z[198]-ra*z[14])))/pow(z[39],3);
  z[288] = 0.25*w*z[277]*q2p + 0.25*w*z[287]*q3p - 0.5*z[94]*z[205] - 0.5*
  z[95]*z[211];
  z[289] = (2*z[199]*(z[36]*z[82]-z[39]*z[72])/pow(z[38],0.5)-z[39]*(z[36]*
  z[276]+4*z[39]*z[273]+2*z[82]*(z[196]+ra*z[13])))/pow(z[39],3);
  z[290] = (2*z[199]*(z[36]*z[83]-z[39]*z[74])/pow(z[38],0.5)-z[39]*(z[36]*
  z[286]+2*z[83]*(z[196]+ra*z[13])-4*z[39]*(z[283]-ra*z[14])))/pow(z[39],3);
  z[291] = 0.25*w*z[289]*q2p + 0.25*w*z[290]*q3p - 0.5*z[86]*z[205] - 0.5*
  z[87]*z[211];
  z[292] = (2*z[34]*z[82]*z[199]/pow(z[38],0.5)+z[39]*(4*z[39]*z[272]-2*z[82]*
  z[197]-z[34]*z[276]-2*z[75]*z[199]/pow(z[38],0.5)))/pow(z[39],3);
  z[293] = (2*z[34]*z[83]*z[199]/pow(z[38],0.5)+z[39]*(4*z[39]*z[282]-2*z[83]*
  z[197]-z[34]*z[286]-2*z[76]*z[199]/pow(z[38],0.5)))/pow(z[39],3);
  z[294] = 0.5*z[90]*z[205] + 0.5*z[91]*z[211] - 0.25*w*z[292]*q2p - 0.25*w*
  z[293]*q3p;
  z[295] = ra*z[13]*z[41] - 0.5*z[17]*z[201] - ra*z[14]*z[40] - 0.5*z[200]*(k+
  z[18]);
  z[296] = 0.5*z[267]*(k+z[18]) - ra*z[14]*z[42];
  z[297] = 0.25*z[17]*z[293] + 0.5*z[18]*z[267] - ra*z[14]*z[42] - 0.5*ra*
  z[13]*z[89];
  z[298] = ra*z[13]*z[88] - 0.5*z[17]*z[292];
  z[299] = pow(w,2)*z[40]*z[295] + pow(w,2)*z[42]*z[296] + 0.5*pow(w,2)*z[59]*
  z[267] + w*z[297]*q3p + z[112]*z[211] - 0.5*z[113]*z[205] - 0.5*pow(w,2)*
  z[60]*z[200] - 0.5*w*z[298]*q2p;
  z[300] = 0.5*ra*z[14]*z[89] + 0.25*z[293]*(k+z[18]) - 0.5*z[17]*z[267] - ra*
  z[13]*z[42];
  z[301] = 0.5*z[17]*z[267] + ra*z[13]*z[42];
  z[302] = -ra*z[14]*z[88] - 0.5*z[292]*(k+z[18]);
  z[303] = 0.5*pow(w,2)*z[60]*z[201] + w*z[300]*q3p + z[104]*z[211] - 0.5*
  z[105]*z[205] - pow(w,2)*z[41]*z[295] - pow(w,2)*z[42]*z[301] - 0.5*pow(w,2)*
  z[61]*z[267] - 0.5*w*z[302]*q2p;
  z[304] = 0.25*z[17]*z[287] + 0.5*z[17]*z[200] + 0.5*ra*z[14]*z[85] + 0.25*
  z[290]*(k+z[18]) - 0.5*z[18]*z[201] - ra*z[13]*z[40] - ra*z[14]*z[41] - 0.5*
  ra*z[13]*z[93];
  z[305] = 0.25*z[17]*z[277] + 0.5*ra*z[14]*z[84] + 0.25*z[289]*(k+z[18]) - 
  0.5*ra*z[13]*z[92];
  z[306] = z[109]*z[205] + pow(w,2)*z[41]*z[296] + 0.5*pow(w,2)*z[61]*z[200] + 
  w*z[304]*q3p + w*z[305]*q2p + z[108]*z[211] - pow(w,2)*z[40]*z[301] - 0.5*
  pow(w,2)*z[59]*z[201];
  z[307] = 0.5*z[118]*(2*z[11]*z[14]*z[17]*z[42]+z[21]*z[267]*(k+z[18])+2*
  z[11]*z[13]*z[42]*(k+z[18])-z[17]*z[22]*z[267]-2*ra*z[13]*z[22]*z[42]-2*ra*
  z[14]*z[21]*z[42]-z[12]*(2*ra*z[13]*z[41]-z[17]*z[201]-2*ra*z[14]*z[40]-
  z[200]*(k+z[18]))) + Izz*z[41]*z[288] + z[40]*(Ixx*z[291]+Ixy*z[294]) - 0.5*
  Izz*z[201]*z[98] - z[42]*(Ixy*z[291]+Iyy*z[294]) - 0.5*z[200]*(Ixx*z[96]+
  Ixy*z[97]) - 0.5*z[267]*(Ixy*z[96]+Iyy*z[97]) - 0.5*m*(2*ra*z[14]*z[42]*
  z[114]-2*z[17]*z[42]*z[299]-z[17]*z[267]*z[116]-2*ra*z[13]*z[42]*z[116]-2*
  z[42]*(k+z[18])*z[303]-z[267]*(k+z[18])*z[114]-2*(z[17]*z[41]+z[40]*(k+
  z[18]))*z[306]-(2*ra*z[13]*z[41]-z[17]*z[201]-2*ra*z[14]*z[40]-z[200]*(k+
  z[18]))*z[115]);
  z[309] = Ixx*z[40]*z[200] + Izz*z[41]*z[201] + z[308]*z[14]*z[42]*z[59] + 
  z[267]*(Ixy*z[40]-Iyy*z[42]) - Ixy*z[42]*z[200] - m*z[17]*z[42]*z[301] - 
  z[308]*z[13]*z[42]*z[61] - 0.5*m*z[17]*z[61]*z[267] - m*z[42]*z[296]*(k+
  z[18]) - 0.5*m*z[59]*z[267]*(k+z[18]) - m*z[295]*(z[17]*z[41]+z[40]*(k+
  z[18])) - 0.5*m*z[60]*(2*ra*z[13]*z[41]-z[17]*z[201]-2*ra*z[14]*z[40]-
  z[200]*(k+z[18]));
  z[310] = (z[117]*z[307]-z[309]*z[119])/pow(z[117],2);
  z[311] = -0.5*z[94]*z[206] - 0.5*z[95]*z[212] - 0.5*z[92]*q2p - 0.5*z[93]*
  q3p;
  z[312] = -0.5*z[86]*z[206] - 0.5*z[87]*z[212] - 0.5*z[84]*q2p - 0.5*z[85]*
  q3p;
  z[313] = 0.5*z[90]*z[206] + 0.5*z[91]*z[212] + 0.5*z[88]*q2p + 0.5*z[89]*
  q3p;
  z[314] = z[112]*z[212] + 2*w*z[40]*z[60] + 2*w*z[42]*z[59] + z[110]*q3p - 
  0.5*z[113]*z[206] - 0.5*z[111]*q2p;
  z[315] = z[104]*z[212] + z[102]*q3p - 0.5*z[105]*z[206] - 2*w*z[41]*z[60] - 
  2*w*z[42]*z[61] - 0.5*z[103]*q2p;
  z[316] = z[108]*z[212] + z[109]*z[206] + 2*w*z[41]*z[59] + z[106]*q3p + 
  z[107]*q2p - 2*w*z[40]*z[61];
  z[317] = Izz*z[41]*z[311] + z[40]*(Ixx*z[312]+Ixy*z[313]) + m*(z[17]*z[42]*
  z[314]+z[42]*(k+z[18])*z[315]+(z[17]*z[41]+z[40]*(k+z[18]))*z[316]) - z[42]*(
  Ixy*z[312]+Iyy*z[313]);

  no_cb[0] = q4 + z[34]*z[53] + z[51]*(z[17]+z[33]) - z[55]*(l+z[18]-z[35]);
  no_cb[1] = q5 + z[52]*(z[17]+z[33]) - z[34]*z[54] - z[56]*(l+z[18]-z[35]);
  no_cb[2] = -z[12]*z[34] - z[21]*(z[17]+z[33]) - z[22]*(l+z[18]-z[35]);
  no_so[0] = q4 + z[17]*z[51] - z[55]*(k+z[18]);
  no_so[1] = q5 + z[17]*z[52] - z[56]*(k+z[18]);
  no_so[2] = -z[17]*z[21] - z[22]*(k+z[18]);
  H[0] = w*(Iyy*pow(z[42],2)+Izz*pow(z[41],2)+z[40]*(Ixx*z[40]-2*Ixy*z[42]));
  H[1] = -w*(Izz*z[12]*z[40]*z[41]-Izz*z[11]*z[14]*z[41]*z[42]-z[12]*z[41]*(
  Ixx*z[40]-Ixy*z[42])-z[11]*z[13]*z[42]*(Ixx*z[40]-Ixy*z[42])-(z[21]*z[41]+
  z[22]*z[40])*(Ixy*z[40]-Iyy*z[42]));
  H[2] = w*(Izz*z[22]*z[41]+z[12]*(Ixy*z[40]-Iyy*z[42])-z[21]*(Ixx*z[40]-Ixy*
  z[42]));
  p[0] = m*w*(z[40]*z[59]+z[41]*z[61]-z[42]*z[60]);
  p[1] = -m*w*(z[12]*z[40]*z[61]-z[12]*z[41]*z[59]-z[11]*z[13]*z[42]*z[59]-
  z[11]*z[14]*z[42]*z[61]-z[60]*(z[21]*z[41]+z[22]*z[40]));
  p[2] = -m*w*(z[21]*z[59]-z[12]*z[60]-z[22]*z[61]);
  df[0] = 0;
  df[1] = 0.5*z[193];
  df[2] = -0.5*z[202];
  df[3] = 0;
  df[4] = 0;
  df[5] = z[203];
  df[6] = 0;
  df[7] = -0.5*z[204];
  df[8] = z[205];
  df[9] = 0;
  df[10] = 0;
  df[11] = z[206];
  df[12] = 0;
  df[13] = -0.5*z[208];
  df[14] = z[211];
  df[15] = 0;
  df[16] = 0;
  df[17] = z[212];
  df[18] = -z[215];
  df[19] = -z[216];
  df[20] = -z[219];
  df[21] = 0;
  df[22] = 0;
  df[23] = -z[220];
  df[24] = -z[57];
  df[25] = -z[221];
  df[26] = -z[224];
  df[27] = 0;
  df[28] = 0;
  df[29] = -z[225];
  df[30] = 0;
  df[31] = z[266];
  df[32] = z[310];
  df[33] = 0;
  df[34] = 0;
  df[35] = z[317]/z[117];
  T_da[0] = z[163];
  T_da[1] = z[166];
  T_da[2] = z[169];
  T_da[3] = 0;
  T_da[4] = z[164];
  T_da[5] = z[167];
  T_da[6] = z[170];
  T_da[7] = 0;
  T_da[8] = z[165];
  T_da[9] = z[168];
  T_da[10] = z[171];
  T_da[11] = 0;
  T_da[12] = z[17]*z[163] - z[1]*(ctx-q4) - z[2]*(cty-q5) - z[18]*z[165];
  T_da[13] = ctz*z[6] + z[5]*(cty-q5) + z[17]*z[166] - z[4]*(ctx-q4) - z[18]*
  z[168];
  T_da[14] = ctz*z[3] + z[7]*(ctx-q4) + z[17]*z[169] - d - z[8]*(cty-q5) - 
  z[18]*z[171];
  T_da[15] = 1;
  T_db[0] = z[172];
  T_db[1] = z[174];
  T_db[2] = z[176];
  T_db[3] = 0;
  T_db[4] = z[173];
  T_db[5] = z[175];
  T_db[6] = z[177];
  T_db[7] = 0;
  T_db[8] = z[165];
  T_db[9] = z[168];
  T_db[10] = z[171];
  T_db[11] = 0;
  T_db[12] = z[17]*z[163] - z[1]*(ctx-q4) - z[2]*(cty-q5) - z[165]*(l+z[18]);
  T_db[13] = ctz*z[6] + z[5]*(cty-q5) + z[17]*z[166] - z[4]*(ctx-q4) - z[168]*(
  l+z[18]);
  T_db[14] = ctz*z[3] + z[7]*(ctx-q4) + z[17]*z[169] - d - z[8]*(cty-q5) - 
  z[171]*(l+z[18]);
  T_db[15] = 1;
  T_so[0] = z[163];
  T_so[1] = z[166];
  T_so[2] = z[169];
  T_so[3] = 0;
  T_so[4] = z[164];
  T_so[5] = z[167];
  T_so[6] = z[170];
  T_so[7] = 0;
  T_so[8] = z[165];
  T_so[9] = z[168];
  T_so[10] = z[171];
  T_so[11] = 0;
  T_so[12] = z[17]*z[163] - z[1]*(ctx-q4) - z[2]*(cty-q5) - z[165]*(k+z[18]);
  T_so[13] = ctz*z[6] + z[5]*(cty-q5) + z[17]*z[166] - z[4]*(ctx-q4) - z[168]*(
  k+z[18]);
  T_so[14] = ctz*z[3] + z[7]*(ctx-q4) + z[17]*z[169] - d - z[8]*(cty-q5) - 
  z[171]*(k+z[18]);
  T_so[15] = 1;
  T_ca[0] = z[178];
  T_ca[1] = z[180];
  T_ca[2] = z[182];
  T_ca[3] = 0;
  T_ca[4] = z[179];
  T_ca[5] = z[181];
  T_ca[6] = z[183];
  T_ca[7] = 0;
  T_ca[8] = 0;
  T_ca[9] = -z[6];
  T_ca[10] = -z[3];
  T_ca[11] = 0;
  T_ca[12] = -z[1]*(ctx-q4) - z[2]*(cty-q5);
  T_ca[13] = ctz*z[6] + z[5]*(cty-q5) - z[4]*(ctx-q4);
  T_ca[14] = ctz*z[3] + z[7]*(ctx-q4) - d - z[8]*(cty-q5);
  T_ca[15] = 1;
  T_cb[0] = z[11]*z[46]*z[178] + z[12]*z[47]*z[163] + z[164]*(z[21]*z[47]+
  z[22]*z[45]) - z[12]*z[45]*z[165];
  T_cb[1] = z[11]*z[46]*z[180] + z[12]*z[47]*z[166] + z[167]*(z[21]*z[47]+
  z[22]*z[45]) - z[12]*z[45]*z[168];
  T_cb[2] = z[11]*z[46]*z[182] + z[12]*z[47]*z[169] + z[170]*(z[21]*z[47]+
  z[22]*z[45]) - z[12]*z[45]*z[171];
  T_cb[3] = 0;
  T_cb[4] = z[11]*z[46]*z[179] - z[45]*z[163]*pow(z[12],2) - z[47]*z[165]*
  pow(z[12],2) - z[11]*z[178]*(z[21]*z[47]+z[22]*z[45]) - z[12]*z[164]*(z[21]*
  z[45]-z[22]*z[47]);
  T_cb[5] = z[11]*z[46]*z[181] - z[45]*z[166]*pow(z[12],2) - z[47]*z[168]*
  pow(z[12],2) - z[11]*z[180]*(z[21]*z[47]+z[22]*z[45]) - z[12]*z[167]*(z[21]*
  z[45]-z[22]*z[47]);
  T_cb[6] = z[11]*z[46]*z[183] - z[45]*z[169]*pow(z[12],2) - z[47]*z[171]*
  pow(z[12],2) - z[11]*z[182]*(z[21]*z[47]+z[22]*z[45]) - z[12]*z[170]*(z[21]*
  z[45]-z[22]*z[47]);
  T_cb[7] = 0;
  T_cb[8] = 0;
  T_cb[9] = -z[6];
  T_cb[10] = -z[3];
  T_cb[11] = 0;
  T_cb[12] = z[163]*(z[17]+z[33]) - z[1]*(ctx-q4) - z[2]*(cty-q5) - z[34]*
  z[164] - z[165]*(l+z[18]-z[35]);
  T_cb[13] = ctz*z[6] + z[5]*(cty-q5) + z[166]*(z[17]+z[33]) - z[4]*(ctx-q4) - 
  z[34]*z[167] - z[168]*(l+z[18]-z[35]);
  T_cb[14] = ctz*z[3] + z[7]*(ctx-q4) + z[169]*(z[17]+z[33]) - d - z[8]*(cty-
  q5) - z[34]*z[170] - z[171]*(l+z[18]-z[35]);
  T_cb[15] = 1;
  T_dagl[0] = z[163];
  T_dagl[1] = z[166];
  T_dagl[2] = z[169];
  T_dagl[3] = 0;
  T_dagl[4] = -z[165];
  T_dagl[5] = -z[168];
  T_dagl[6] = -z[171];
  T_dagl[7] = 0;
  T_dagl[8] = z[164];
  T_dagl[9] = z[167];
  T_dagl[10] = z[170];
  T_dagl[11] = 0;
  T_dagl[12] = z[17]*z[163] - z[1]*(ctx-q4) - z[2]*(cty-q5) - z[18]*z[165];
  T_dagl[13] = ctz*z[6] + z[5]*(cty-q5) + z[17]*z[166] - z[4]*(ctx-q4) - 
  z[18]*z[168];
  T_dagl[14] = ctz*z[3] + z[7]*(ctx-q4) + z[17]*z[169] - d - z[8]*(cty-q5) - 
  z[18]*z[171];
  T_dagl[15] = 1;
  T_dbgl[0] = z[172];
  T_dbgl[1] = z[174];
  T_dbgl[2] = z[176];
  T_dbgl[3] = 0;
  T_dbgl[4] = -z[165];
  T_dbgl[5] = -z[168];
  T_dbgl[6] = -z[171];
  T_dbgl[7] = 0;
  T_dbgl[8] = z[173];
  T_dbgl[9] = z[175];
  T_dbgl[10] = z[177];
  T_dbgl[11] = 0;
  T_dbgl[12] = z[17]*z[163] - z[1]*(ctx-q4) - z[2]*(cty-q5) - z[165]*(l+z[18]);
  T_dbgl[13] = ctz*z[6] + z[5]*(cty-q5) + z[17]*z[166] - z[4]*(ctx-q4) - 
  z[168]*(l+z[18]);
  T_dbgl[14] = ctz*z[3] + z[7]*(ctx-q4) + z[17]*z[169] - d - z[8]*(cty-q5) - 
  z[171]*(l+z[18]);
  T_dbgl[15] = 1;
} // computeOutputs()

void SlottedDiscs::setState(const double state[6])
{
  q1 = state[0];
  q2 = state[1];
  q3 = state[2];
  q4 = state[3];
  q5 = state[4];
  w = state[5];
} // setState()

void SlottedDiscs::setParameters(DiscParams * p)
{
  m = p->m;
  ra = p->ra;
  rb = p->rb;
  k = p->k;
  l = p->l;
  g = p->g;
  alpha = p->alpha;
  Ixx = p->Ixx;
  Iyy = p->Iyy;
  Izz = p->Izz;
  Ixy = p->Ixy;

  evalConstants();
} // setParameters()
