#include "slotted_discs.h"

int eomwrapper(double t, const double x[6], double f[6], void * params)
{
  SlottedDiscs * p = (SlottedDiscs *) params;
  // Assign the states of the SlottedDiscs object
  p->setState(x);
  // Evaluate the RHS of the ODE's representing the equations of motion
  p->eoms();
  // Assign the right hand sides of the ODE's to the array passed
  f[0] = p->q1p;
  f[1] = p->q2p;
  f[2] = p->q3p;
  f[3] = p->q4p;
  f[4] = p->q5p;
  f[5] = p->wp;
  // Return the status
  return GSL_SUCCESS;
}

ostream &operator<<(ostream &file, const SlottedDiscs * discs)
{
  file.write((char *) &(discs->t), sizeof discs->t);
  file.write((char *) &discs->q1, sizeof discs->q1);
  file.write((char *) &discs->q2, sizeof discs->q2);
  file.write((char *) &discs->q3, sizeof discs->q3);
  file.write((char *) &discs->q4, sizeof discs->q4);
  file.write((char *) &discs->q5, sizeof discs->q5);
  file.write((char *) &discs->w, sizeof discs->w);
  file.write((char *) &discs->w1, sizeof discs->w1);
  file.write((char *) &discs->w2, sizeof discs->w2);
  file.write((char *) &discs->w3, sizeof discs->w3);
  file.write((char *) &(discs->no_cb), sizeof discs->no_cb);
  file.write((char *) &(discs->ke), sizeof discs->ke);
  file.write((char *) &(discs->pe), sizeof discs->pe);
  file.write((char *) &(discs->te), sizeof discs->te);
  file.write((char *) &(discs->H), sizeof discs->H);
  file.write((char *) &(discs->p), sizeof discs->p);
  return file;
} // operator <<

void SlottedDiscs::writeRecord_dt(void) const
{
  ofstream fp("./record.py", ios::out);
  fp << "#!/usr/bin/env python" << endl;
  fp << "import numpy as np" << endl;
  fp << "record_dt = np.dtype([('t', np.float64), " <<
        "('q1', np.float64), " <<
        "('q2', np.float64), " <<
        "('q3', np.float64), " <<
        "('x', np.float64), " <<
        "('y', np.float64), " <<
        "('w', np.float64), " <<
        "('w1', np.float64), " <<
        "('w2', np.float64), " <<
        "('w3', np.float64), " <<
        "('cbx', np.float64), " <<
        "('cby', np.float64), " <<
        "('cbz', np.float64), " <<
        "('ke', np.float64), " <<
        "('pe', np.float64), " <<
        "('te', np.float64), " <<
        "('H1', np.float64), " <<
        "('H2', np.float64), " <<
        "('H3', np.float64), " <<
        "('p1', np.float64), " <<
        "('p2', np.float64), " <<
        "('p3', np.float64)]) " << endl;
  fp.close();
} // writeRecord_dt()

SlottedDiscs::SlottedDiscs()
{
  // Default parameters
  ra = rb = .1;
  l = sqrt(2.0)*ra;
  g = 9.81;
  alpha = M_PI/2.0;
  
  double ma, mb;
  ma = mb = 2.0;
  m = ma + mb;
  double Ia = ma*ra*ra/4.0;
  double Ja = ma*ra*ra/2.0;

  double Ib = mb*rb*rb/4.0;
  double Jb = mb*rb*rb/2.0;

  k = l*mb/(ma+mb);
  Ixx = Ia + Ib*pow(cos(alpha),2) + Jb*pow(sin(alpha),2) + mb*pow(l,2)*(ma*mb/
  pow((ma+mb),2)+pow((1-mb/(ma+mb)),2));
  Iyy = Ja + Jb + pow(sin(alpha),2)*(Ib-Jb) + mb*pow(l,2)*(ma*mb/pow((ma+mb),
  2)+pow((1-mb/(ma+mb)),2));
  Izz = Ia + Ib + mb*pow(l,2)*pow((1-mb/(ma+mb)),2) + mb*pow(l,2)*(-1+mb/(ma+
  mb))*(1-mb/(ma+mb));
  Ixy = sin(alpha)*cos(alpha)*(Ib-Jb);

  // Set state
  q1 = 0.0;
  q2 = M_PI / 4.0;
  q3 = M_PI/2.0;
  q4 = q5 = 0.0;
  w = -1.4;

  // Set integration settings
  t = 0.0;
  tf = 10.0;
  h = 0.001;
  T = gsl_odeiv_step_rk8pd;
  s = gsl_odeiv_step_alloc(T, 6);
  c = gsl_odeiv_control_y_new(1e-6, 1e-9);
  e = gsl_odeiv_evolve_alloc(6);
  sys.function = eomwrapper;
  sys.jacobian = NULL;
  sys.dimension = 6;
  sys.params = this;

  for (int i = 0; i < Z_MAX; ++i)
    z[i] = 0.0;

  // Constants
  evalConstants();
  eoms();
  computeOutputs();

  // Write the file which holds the numpy record data type so that plotting is
  // easy
  writeRecord_dt();
 
} // constructor

SlottedDiscs::~SlottedDiscs()
{
  gsl_odeiv_evolve_free(e);
  gsl_odeiv_control_free(c);
  gsl_odeiv_step_free(s);
} // destructor

void SlottedDiscs::printState(void) const
{
  cout.setf(ios::right, ios::adjustfield);
  cout.setf(ios::scientific, ios::floatfield);
  cout.setf(ios::adjustfield, ios::right);
  cout.precision(9);
  cout.width(18);
  cout << q1;
  cout.width(18);
  cout << q2;
  cout.width(18);
  cout << q3;
  cout.width(18);
  cout << q4;
  cout.width(18);
  cout << q5;
  cout.width(18);
  cout << w3;
  cout << endl;
} // printState()

void SlottedDiscs::printEnergy(void) const
{
  cout.setf(ios::scientific, ios::floatfield);
  cout.setf(ios::adjustfield, ios::right);
  cout.precision(9);
  cout.width(18);
  cout << ke;
  cout.width(18);
  cout << pe;
  cout.width(18);
  cout << te;
  cout << endl;
} // printEnergy()

void SlottedDiscs::printParameters() const
{
  cout.setf(ios::scientific, ios::floatfield);
  cout.setf(ios::adjustfield, ios::right);
  cout.precision(9);
  cout << "ra = " << ra << endl << "rb = " << rb << endl;
  cout << "m = " << m << endl;
  cout << "Ixx = " << Ixx << endl << "Iyy = " << Iyy << endl;
  cout << "Izz = " << Izz << endl << "Ixy = " << Ixy << endl;
  cout << "alpha = " << alpha << endl << "l = " << l << endl;
  cout << "k = " << k << endl;
  cout << "g = " << g << endl;
} // printParameters()

void SlottedDiscs::evalConstants(void)
{
  z[94] = g*m;
  z[7] = cos(alpha);
  z[8] = sin(alpha);
  z[126] = rb*z[8];
  z[127] = pow(z[8],2);
  z[128] = pow(z[7],2);
  z[130] = z[7]*z[8];
} //evalConstants()

void SlottedDiscs::eoms(void)
{
  z[6] = sin(q3);
  z[9] = ra*z[6];
  z[4] = sin(q2);
  z[3] = cos(q2);
  z[13] = z[3]*z[6];
  z[20] = z[7]*z[4] + z[8]*z[13];
  z[21] = 1 - pow(z[20],2);
  z[22] = pow(z[21],0.5);
  z[24] = z[20]/z[22];
  z[23] = 1/z[22];
  z[25] = rb*(z[8]*z[24]-z[13]*z[23]);
  z[28] = z[9] + z[25];
  z[26] = rb*(z[7]*z[24]-z[4]*z[23]);
  z[5] = cos(q3);
  z[14] = z[3]*z[5];
  z[27] = rb*z[14]*z[23];
  z[10] = ra*z[5];
  z[29] = z[27] - l - z[10];
  z[30] = pow(z[26],2) + pow(z[28],2) + pow(z[29],2);
  z[31] = pow(z[30],0.5);
  z[32] = z[28]/z[31];
  w1 = w*z[32];
  z[33] = z[29]/z[31];
  w3 = w*z[33];
  q1p = -(sin(q3)*w1-cos(q3)*w3)/cos(q2);
  q2p = sin(q3)*w3 + cos(q3)*w1;
  q3p = (cos(q2)*z[26]+rb*z[14]*(sin(q2)*z[5]*z[23]-z[14]*z[20]*(z[7]*cos(q2)-
  z[8]*sin(q2)*z[6])/(pow(z[21],0.5)*pow(z[22],2)))-sin(q2)*z[6]*(z[9]+z[25])-
  sin(q2)*z[5]*(l+z[10]-z[27])-rb*z[4]*(cos(q2)*z[23]+z[4]*z[20]*(z[7]*cos(q2)-
  z[8]*sin(q2)*z[6])/(pow(z[21],0.5)*pow(z[22],2))-z[7]*(z[22]+pow(z[20],2)/
  pow(z[21],0.5))*(z[7]*cos(q2)-z[8]*sin(q2)*z[6])/pow(z[22],2))-rb*z[13]*(
  z[13]*z[20]*(z[7]*cos(q2)-z[8]*sin(q2)*z[6])/(pow(z[21],0.5)*pow(z[22],2))-
  sin(q2)*z[6]*z[23]-z[8]*(z[22]+pow(z[20],2)/pow(z[21],0.5))*(z[7]*cos(q2)-
  z[8]*sin(q2)*z[6])/pow(z[22],2)))*q2p/(sin(q3)*z[3]*(l+z[10]-z[27])+rb*z[8]*
  cos(q3)*z[3]*z[4]*(z[4]*z[20]/pow(z[21],0.5)-z[7]*(z[22]+pow(z[20],2)/pow(
  z[21],0.5)))/pow(z[22],2)-cos(q3)*z[3]*(z[9]+z[25])-z[14]*(rb*sin(q3)*z[3]*
  z[23]-ra*sin(q3)-rb*z[8]*cos(q3)*z[3]*z[14]*z[20]/(pow(z[21],0.5)*pow(z[22],
  2)))-cos(q3)*z[13]*(ra-rb*z[3]*(z[23]+z[8]*z[13]*z[20]/(pow(z[21],0.5)*pow(
  z[22],2))-pow(z[8],2)*(z[22]+pow(z[20],2)/pow(z[21],0.5))/pow(z[22],2))));
  z[1] = cos(q1);
  z[2] = sin(q1);
  z[12] = z[4]*z[5];
  z[11] = z[4]*z[6];
  q4p = -(z[9]*(z[1]*z[6]+z[2]*z[12])+z[10]*(z[1]*z[5]-z[2]*z[11]))*q3p;
  q5p = -(z[10]*(z[1]*z[11]+z[2]*z[5])-z[9]*(z[1]*z[12]-z[2]*z[6]))*q3p;
  z[34] = z[26]/z[31];
  z[35] = z[34]*(k+z[10]);
  z[36] = z[9]*z[33] + z[32]*(k+z[10]);
  z[37] = z[9]*z[34];
  z[18] = z[7]*z[3] - z[8]*z[11];
  z[40] = z[18]*z[20];
  z[42] = z[40]/pow(z[21],0.5);
  z[44] = (z[18]*z[22]+z[20]*z[42])/pow(z[22],2);
  z[46] = z[42]/pow(z[22],2);
  z[51] = rb*(z[7]*z[44]-z[3]*z[23]-z[4]*z[46]);
  z[48] = rb*(z[8]*z[44]+z[11]*z[23]-z[13]*z[46]);
  z[53] = rb*(z[12]*z[23]-z[14]*z[46]);
  z[56] = 2*z[26]*z[51] + 2*z[28]*z[48] - 2*z[29]*z[53];
  z[58] = z[56]/pow(z[30],0.5);
  z[68] = (z[29]*z[58]+2*z[31]*z[53])/pow(z[31],2);
  z[70] = w*z[68];
  z[39] = z[8]*z[14];
  z[41] = z[20]*z[39];
  z[43] = z[41]/pow(z[21],0.5);
  z[45] = (z[20]*z[43]+z[22]*z[39])/pow(z[22],2);
  z[47] = z[43]/pow(z[22],2);
  z[52] = rb*(z[7]*z[45]-z[4]*z[47]);
  z[49] = rb*(z[8]*z[45]-z[13]*z[47]-z[14]*z[23]);
  z[50] = z[10] + z[49];
  z[54] = rb*(z[13]*z[23]-z[14]*z[47]);
  z[55] = z[9] - z[54];
  z[57] = 2*z[26]*z[52] + 2*z[28]*z[50] + 2*z[29]*z[55];
  z[59] = z[57]/pow(z[30],0.5);
  z[69] = (z[29]*z[59]-2*z[31]*z[55])/pow(z[31],2);
  z[71] = w*z[69];
  z[74] = -0.5*z[70]*q2p - 0.5*z[71]*q3p;
  z[60] = (z[28]*z[58]-2*z[31]*z[48])/pow(z[31],2);
  z[62] = w*z[60];
  z[61] = (z[28]*z[59]-2*z[31]*z[50])/pow(z[31],2);
  z[63] = w*z[61];
  z[72] = -0.5*z[62]*q2p - 0.5*z[63]*q3p;
  z[64] = (z[26]*z[58]-2*z[31]*z[51])/pow(z[31],2);
  z[66] = w*z[64];
  z[65] = (z[26]*z[59]-2*z[31]*z[52])/pow(z[31],2);
  z[67] = w*z[65];
  z[73] = 0.5*z[66]*q2p + 0.5*z[67]*q3p;
  z[78] = -z[9]*z[34] - 0.5*z[65]*(k+z[10]);
  z[80] = w*z[78];
  z[79] = z[64]*(k+z[10]);
  z[81] = w*z[79];
  z[90] = z[80]*q3p - pow(w,2)*z[33]*z[36] - pow(w,2)*z[34]*z[37] - 0.5*z[81]*
  q2p;
  z[82] = z[10]*z[33] - z[9]*z[32] - 0.5*z[9]*z[69] - 0.5*z[61]*(k+z[10]);
  z[84] = w*z[82];
  z[83] = -0.5*z[9]*z[68] - 0.5*z[60]*(k+z[10]);
  z[85] = w*z[83];
  z[91] = pow(w,2)*z[33]*z[35] + z[84]*q3p + z[85]*q2p - pow(w,2)*z[32]*z[37];
  z[86] = z[10]*z[34] - 0.5*z[9]*z[65];
  z[88] = w*z[86];
  z[87] = z[9]*z[64];
  z[89] = w*z[87];
  z[92] = pow(w,2)*z[32]*z[36] + pow(w,2)*z[34]*z[35] + z[88]*q3p - 0.5*z[89]*
  q2p;
  z[95] = z[94]*(z[13]*z[35]-z[4]*z[36]-z[14]*z[37]) + Izz*z[33]*z[74] + 
  z[32]*(Ixx*z[72]+Ixy*z[73]) + m*(z[35]*z[90]+z[36]*z[91]+z[37]*z[92]) - 
  z[34]*(Ixy*z[72]+Iyy*z[73]);
  z[93] = -Iyy*pow(z[34],2) - Izz*pow(z[33],2) - z[32]*(Ixx*z[32]-2*Ixy*z[34]) - 
  m*(pow(z[35],2)+pow(z[36],2)+pow(z[37],2));
  z[96] = z[95]/z[93];
  wp = z[96];
} // eoms()

void SlottedDiscs::computeOutputs(void)
{
  w2 = -w*z[34];
  ke = 0.5*pow(w,2)*(Iyy*pow(z[34],2)+Izz*pow(z[33],2)+z[32]*(Ixx*z[32]-2*Ixy*
  z[34])+m*(pow(z[35],2)+pow(z[36],2)+pow(z[37],2)));
  pe = g*m*(z[9]*z[13]+z[14]*(k+z[10]));
  te = ke + pe;
  z[97] = z[1]*z[5] - z[2]*z[11];
  z[98] = z[1]*z[11] + z[2]*z[5];
  z[99] = z[2]*z[3];
  z[100] = z[1]*z[3];
  z[101] = z[1]*z[6] + z[2]*z[12];
  z[102] = z[2]*z[6] - z[1]*z[12];
  equilibria = k*rb*sin(q3)*cos(q2)*(sin(q2)-cos(alpha)*(cos(alpha)*sin(q2)+
  sin(alpha)*sin(q3)*cos(q2)))/(pow((1-pow((cos(alpha)*sin(q2)+sin(alpha)*sin(
  q3)*cos(q2)),2)),0.5)*pow((pow((l+ra*cos(q3)-rb*cos(q2)*cos(q3)/pow((1-pow((
  cos(alpha)*sin(q2)+sin(alpha)*sin(q3)*cos(q2)),2)),0.5)),2)+pow(rb,2)*pow((
  sin(q2)-cos(alpha)*(cos(alpha)*sin(q2)+sin(alpha)*sin(q3)*cos(q2))),2)/(1-
  pow((cos(alpha)*sin(q2)+sin(alpha)*sin(q3)*cos(q2)),2))+pow((ra*sin(q3)-rb*(
  sin(q3)*cos(q2)-sin(alpha)*(cos(alpha)*sin(q2)+sin(alpha)*sin(q3)*cos(q2)))/
  pow((1-pow((cos(alpha)*sin(q2)+sin(alpha)*sin(q3)*cos(q2)),2)),0.5)),2)),
  0.5)) - sin(q2)*(ra*sin(q3)*(l+ra*cos(q3)-rb*cos(q2)*cos(q3)/pow((1-pow((
  cos(alpha)*sin(q2)+sin(alpha)*sin(q3)*cos(q2)),2)),0.5))-(k+ra*cos(q3))*(ra*
  sin(q3)-rb*(sin(q3)*cos(q2)-sin(alpha)*(cos(alpha)*sin(q2)+sin(alpha)*sin(
  q3)*cos(q2)))/pow((1-pow((cos(alpha)*sin(q2)+sin(alpha)*sin(q3)*cos(q2)),2)),
  0.5)))/pow((pow((l+ra*cos(q3)-rb*cos(q2)*cos(q3)/pow((1-pow((cos(alpha)*sin(
  q2)+sin(alpha)*sin(q3)*cos(q2)),2)),0.5)),2)+pow(rb,2)*pow((sin(q2)-cos(
  alpha)*(cos(alpha)*sin(q2)+sin(alpha)*sin(q3)*cos(q2))),2)/(1-pow((cos(
  alpha)*sin(q2)+sin(alpha)*sin(q3)*cos(q2)),2))+pow((ra*sin(q3)-rb*(sin(q3)*
  cos(q2)-sin(alpha)*(cos(alpha)*sin(q2)+sin(alpha)*sin(q3)*cos(q2)))/pow((1-
  pow((cos(alpha)*sin(q2)+sin(alpha)*sin(q3)*cos(q2)),2)),0.5)),2)),0.5);
  z[103] = z[7]*z[3] - z[8]*z[4]*z[6];
  z[104] = z[103]*(z[22]+pow(z[20],2)/pow(z[21],0.5))/pow(z[22],2);
  z[105] = z[20]*z[103]/(pow(z[21],0.5)*pow(z[22],2));
  z[106] = rb*(z[13]*z[105]-z[8]*z[104]-z[4]*z[6]*z[23]);
  z[107] = rb*(z[7]*z[104]-z[3]*z[23]-z[4]*z[105]);
  z[108] = rb*(z[14]*z[105]-z[4]*z[5]*z[23]);
  z[109] = 2*z[26]*z[107] + 2*z[29]*z[108] - 2*z[28]*z[106];
  z[110] = (2*z[31]*z[106]+z[28]*z[109]/pow(z[30],0.5))/pow(z[31],2);
  z[111] = (2*z[31]*z[108]-z[29]*z[109]/pow(z[30],0.5))/pow(z[31],2);
  z[112] = (w*z[3]*(z[5]*z[111]+z[6]*z[110])-2*z[4]*(w1*z[6]-w3*z[5]))/pow(
  z[3],2);
  z[113] = z[8]*z[3]*z[5]*z[20];
  z[114] = (z[8]*z[3]*z[5]*z[22]+z[20]*z[113]/pow(z[21],0.5))/pow(z[22],2);
  z[115] = rb*(z[8]*z[114]-z[3]*z[5]*z[23]-z[13]*z[113]/(pow(z[21],0.5)*pow(
  z[22],2)));
  z[116] = rb*(z[7]*z[114]-z[4]*z[113]/(pow(z[21],0.5)*pow(z[22],2)));
  z[117] = rb*(z[3]*z[6]*z[23]-z[14]*z[113]/(pow(z[21],0.5)*pow(z[22],2)));
  z[118] = 2*z[26]*z[116] + 2*z[28]*(z[115]+ra*z[5]) - 2*z[29]*(z[117]-ra*
  z[6]);
  z[119] = (z[28]*z[118]/pow(z[30],0.5)-2*z[31]*(z[115]+ra*z[5]))/pow(z[31],2);
  z[120] = (z[29]*z[118]/pow(z[30],0.5)+2*z[31]*(z[117]-ra*z[6]))/pow(z[31],2);
  z[121] = (2*w1*z[5]+2*w3*z[6]+w*z[5]*z[120]-w*z[6]*z[119])/z[3];
  z[122] = (z[5]*z[33]-z[6]*z[32])/z[3];
  z[123] = w*(z[5]*z[110]-z[6]*z[111]);
  z[124] = w3*z[5] - w1*z[6] - 0.5*w*z[5]*z[119] - 0.5*w*z[6]*z[120];
  z[125] = z[5]*z[32] + z[6]*z[33];
  z[129] = (z[123]*(z[3]*z[6]*(l+z[10]-z[27])+z[126]*z[3]*z[4]*z[5]*(z[4]*
  z[20]/pow(z[21],0.5)-z[7]*(z[22]+pow(z[20],2)/pow(z[21],0.5)))/pow(z[22],2)-
  z[3]*z[5]*(z[9]+z[25])-z[14]*(rb*z[3]*z[6]*z[23]-ra*z[6]-z[126]*z[3]*z[5]*
  z[14]*z[20]/(pow(z[21],0.5)*pow(z[22],2)))-z[5]*z[13]*(ra-rb*z[3]*(z[23]+
  z[8]*z[13]*z[20]/(pow(z[21],0.5)*pow(z[22],2))-z[127]*(z[22]+pow(z[20],2)/
  pow(z[21],0.5))/pow(z[22],2))))*(z[3]*z[26]+rb*z[14]*(z[4]*z[5]*z[23]-z[14]*
  z[20]*(z[7]*z[3]-z[8]*z[4]*z[6])/(pow(z[21],0.5)*pow(z[22],2)))-z[4]*z[6]*(
  z[9]+z[25])-z[4]*z[5]*(l+z[10]-z[27])-rb*z[4]*(z[3]*z[23]+z[4]*z[20]*(z[7]*
  z[3]-z[8]*z[4]*z[6])/(pow(z[21],0.5)*pow(z[22],2))-z[7]*(z[22]+pow(z[20],2)/
  pow(z[21],0.5))*(z[7]*z[3]-z[8]*z[4]*z[6])/pow(z[22],2))-rb*z[13]*(z[13]*
  z[20]*(z[7]*z[3]-z[8]*z[4]*z[6])/(pow(z[21],0.5)*pow(z[22],2))-z[4]*z[6]*
  z[23]-z[8]*(z[22]+pow(z[20],2)/pow(z[21],0.5))*(z[7]*z[3]-z[8]*z[4]*z[6])/
  pow(z[22],2)))+2*(z[3]*z[26]+rb*z[14]*(z[4]*z[5]*z[23]-z[14]*z[20]*(z[7]*
  z[3]-z[8]*z[4]*z[6])/(pow(z[21],0.5)*pow(z[22],2)))-z[4]*z[6]*(z[9]+z[25])-
  z[4]*z[5]*(l+z[10]-z[27])-rb*z[4]*(z[3]*z[23]+z[4]*z[20]*(z[7]*z[3]-z[8]*
  z[4]*z[6])/(pow(z[21],0.5)*pow(z[22],2))-z[7]*(z[22]+pow(z[20],2)/pow(z[21],
  0.5))*(z[7]*z[3]-z[8]*z[4]*z[6])/pow(z[22],2))-rb*z[13]*(z[13]*z[20]*(z[7]*
  z[3]-z[8]*z[4]*z[6])/(pow(z[21],0.5)*pow(z[22],2))-z[4]*z[6]*z[23]-z[8]*(
  z[22]+pow(z[20],2)/pow(z[21],0.5))*(z[7]*z[3]-z[8]*z[4]*z[6])/pow(z[22],2)))*(
  z[3]*z[5]*z[106]+z[4]*z[5]*(z[9]+z[25])+2*z[126]*z[3]*z[4]*z[5]*z[103]*pow(
  z[20],2)*(z[4]-z[7]*z[20])/(z[21]*pow(z[22],3))+z[126]*z[3]*z[4]*z[5]*
  z[103]*(z[4]*z[21]+z[4]*pow(z[20],2)-z[7]*z[20]*(3*z[21]+pow(z[20],2)))/(
  pow(z[21],1.5)*pow(z[22],2))-z[3]*z[6]*z[108]-z[4]*z[6]*(l+z[10]-z[27])-2*
  z[126]*z[3]*z[4]*z[14]*z[20]*pow(z[5],2)/(pow(z[21],0.5)*pow(z[22],2))-
  z[126]*z[3]*z[4]*z[5]*z[6]*(2*z[13]*z[20]/(pow(z[21],0.5)*pow(z[22],2))-
  z[8]*(z[22]+pow(z[20],2)/pow(z[21],0.5))/pow(z[22],2))-z[126]*z[5]*(pow(
  z[4],2)*(z[4]*z[20]/pow(z[21],0.5)-z[7]*(z[22]+pow(z[20],2)/pow(z[21],0.5)))-
  pow(z[3],2)*(2*z[4]*z[20]/pow(z[21],0.5)-z[7]*(z[22]+pow(z[20],2)/pow(z[21],
  0.5))))/pow(z[22],2)-rb*z[14]*(z[3]*z[6]*z[105]-z[4]*z[6]*z[23]-z[8]*z[5]*
  z[14]*(z[3]*z[103]-z[4]*z[20])/(pow(z[21],0.5)*pow(z[22],2))-z[8]*z[3]*z[5]*
  z[14]*z[103]*pow(z[20],2)*(2+z[22]/pow(z[21],0.5))/(z[21]*pow(z[22],3)))-rb*
  z[5]*z[13]*(z[4]*(z[23]+z[8]*z[13]*z[20]/(pow(z[21],0.5)*pow(z[22],2))-
  z[127]*(z[22]+pow(z[20],2)/pow(z[21],0.5))/pow(z[22],2))-z[3]*(z[105]+z[8]*
  z[13]*z[103]/(pow(z[21],0.5)*pow(z[22],2))-z[127]*z[20]*z[103]*(3*z[21]+
  pow(z[20],2))/(pow(z[21],1.5)*pow(z[22],2))-z[8]*z[103]*pow(z[20],2)*(2*
  z[8]*z[20]-z[13]*(2+z[22]/pow(z[21],0.5)))/(z[21]*pow(z[22],3)))))*q2p-2*(
  z[3]*z[6]*(l+z[10]-z[27])+z[126]*z[3]*z[4]*z[5]*(z[4]*z[20]/pow(z[21],0.5)-
  z[7]*(z[22]+pow(z[20],2)/pow(z[21],0.5)))/pow(z[22],2)-z[3]*z[5]*(z[9]+
  z[25])-z[14]*(rb*z[3]*z[6]*z[23]-ra*z[6]-z[126]*z[3]*z[5]*z[14]*z[20]/(pow(
  z[21],0.5)*pow(z[22],2)))-z[5]*z[13]*(ra-rb*z[3]*(z[23]+z[8]*z[13]*z[20]/(
  pow(z[21],0.5)*pow(z[22],2))-z[127]*(z[22]+pow(z[20],2)/pow(z[21],0.5))/
  pow(z[22],2))))*(z[3]*z[107]+z[4]*z[5]*z[108]+z[4]*z[6]*z[106]+rb*z[3]*(
  z[128]*z[3]*(z[22]+pow(z[20],2)/pow(z[21],0.5))/pow(z[22],2)-z[3]*z[23]-2*
  z[4]*z[20]*(z[7]*z[3]-1.5*z[8]*z[4]*z[6])/(pow(z[21],0.5)*pow(z[22],2)))+rb*
  z[4]*z[6]*(2*z[13]*z[20]*(z[7]*z[3]-z[8]*z[4]*z[6])/(pow(z[21],0.5)*pow(
  z[22],2))-z[4]*z[6]*z[23]-z[8]*(z[22]+pow(z[20],2)/pow(z[21],0.5))*(3*z[7]*
  z[3]-z[8]*z[4]*z[6])/pow(z[22],2))+rb*z[14]*(z[3]*z[5]*z[23]+z[4]*z[5]*
  z[105]-z[14]*z[103]*pow(z[20],2)*(2+z[22]/pow(z[21],0.5))*(z[7]*z[3]-z[8]*
  z[4]*z[6])/(z[21]*pow(z[22],3))-(z[14]*z[103]*(z[7]*z[3]-z[8]*z[4]*z[6])-
  z[14]*z[20]*(z[7]*z[4]+z[8]*z[3]*z[6])-2*z[4]*z[5]*z[20]*(z[7]*z[3]-z[8]*
  z[4]*z[6]))/(pow(z[21],0.5)*pow(z[22],2)))-z[4]*z[26]-z[3]*z[6]*(z[9]+z[25])-
  rb*z[23]*pow(z[4],2)*pow(z[5],2)-z[3]*z[5]*(l+z[10]-z[27])-rb*z[4]*(z[3]*
  z[105]+z[128]*z[4]*(z[22]+pow(z[20],2)/pow(z[21],0.5))/pow(z[22],2)-z[4]*
  z[23]-z[4]*(z[7]*z[4]*z[20]-z[103]*(z[7]*z[3]-z[8]*z[4]*z[6]))/(pow(z[21],
  0.5)*pow(z[22],2))-z[7]*z[20]*z[103]*(3*z[21]+pow(z[20],2))*(z[7]*z[3]-z[8]*
  z[4]*z[6])/(pow(z[21],1.5)*pow(z[22],2))-z[103]*pow(z[20],2)*(z[7]*z[3]-
  z[8]*z[4]*z[6])*(2*z[7]*z[20]-z[4]*(2+z[22]/pow(z[21],0.5)))/(z[21]*pow(
  z[22],3)))-rb*z[13]*(z[8]*(z[7]*z[4]+z[8]*z[3]*z[6])*(z[22]+pow(z[20],2)/
  pow(z[21],0.5))/pow(z[22],2)-z[3]*z[6]*z[23]-z[4]*z[6]*z[105]-z[8]*z[20]*
  z[103]*(3*z[21]+pow(z[20],2))*(z[7]*z[3]-z[8]*z[4]*z[6])/(pow(z[21],1.5)*
  pow(z[22],2))-z[13]*(z[20]*(z[7]*z[4]+z[8]*z[3]*z[6])-z[103]*(z[7]*z[3]-
  z[8]*z[4]*z[6]))/(pow(z[21],0.5)*pow(z[22],2))-z[103]*pow(z[20],2)*(z[7]*
  z[3]-z[8]*z[4]*z[6])*(2*z[8]*z[20]-z[13]*(2+z[22]/pow(z[21],0.5)))/(z[21]*
  pow(z[22],3))))*q2p)/pow((z[3]*z[6]*(l+z[10]-z[27])+z[126]*z[3]*z[4]*z[5]*(
  z[4]*z[20]/pow(z[21],0.5)-z[7]*(z[22]+pow(z[20],2)/pow(z[21],0.5)))/pow(
  z[22],2)-z[3]*z[5]*(z[9]+z[25])-z[14]*(rb*z[3]*z[6]*z[23]-ra*z[6]-z[126]*
  z[3]*z[5]*z[14]*z[20]/(pow(z[21],0.5)*pow(z[22],2)))-z[5]*z[13]*(ra-rb*z[3]*(
  z[23]+z[8]*z[13]*z[20]/(pow(z[21],0.5)*pow(z[22],2))-z[127]*(z[22]+pow(
  z[20],2)/pow(z[21],0.5))/pow(z[22],2)))),2);
  z[131] = (z[124]*(z[3]*z[6]*(l+z[10]-z[27])+z[126]*z[3]*z[4]*z[5]*(z[4]*
  z[20]/pow(z[21],0.5)-z[7]*(z[22]+pow(z[20],2)/pow(z[21],0.5)))/pow(z[22],2)-
  z[3]*z[5]*(z[9]+z[25])-z[14]*(rb*z[3]*z[6]*z[23]-ra*z[6]-z[126]*z[3]*z[5]*
  z[14]*z[20]/(pow(z[21],0.5)*pow(z[22],2)))-z[5]*z[13]*(ra-rb*z[3]*(z[23]+
  z[8]*z[13]*z[20]/(pow(z[21],0.5)*pow(z[22],2))-z[127]*(z[22]+pow(z[20],2)/
  pow(z[21],0.5))/pow(z[22],2))))*(z[3]*z[26]+rb*z[14]*(z[4]*z[5]*z[23]-z[14]*
  z[20]*(z[7]*z[3]-z[8]*z[4]*z[6])/(pow(z[21],0.5)*pow(z[22],2)))-z[4]*z[6]*(
  z[9]+z[25])-z[4]*z[5]*(l+z[10]-z[27])-rb*z[4]*(z[3]*z[23]+z[4]*z[20]*(z[7]*
  z[3]-z[8]*z[4]*z[6])/(pow(z[21],0.5)*pow(z[22],2))-z[7]*(z[22]+pow(z[20],2)/
  pow(z[21],0.5))*(z[7]*z[3]-z[8]*z[4]*z[6])/pow(z[22],2))-rb*z[13]*(z[13]*
  z[20]*(z[7]*z[3]-z[8]*z[4]*z[6])/(pow(z[21],0.5)*pow(z[22],2))-z[4]*z[6]*
  z[23]-z[8]*(z[22]+pow(z[20],2)/pow(z[21],0.5))*(z[7]*z[3]-z[8]*z[4]*z[6])/
  pow(z[22],2)))+(z[3]*z[26]+rb*z[14]*(z[4]*z[5]*z[23]-z[14]*z[20]*(z[7]*z[3]-
  z[8]*z[4]*z[6])/(pow(z[21],0.5)*pow(z[22],2)))-z[4]*z[6]*(z[9]+z[25])-z[4]*
  z[5]*(l+z[10]-z[27])-rb*z[4]*(z[3]*z[23]+z[4]*z[20]*(z[7]*z[3]-z[8]*z[4]*
  z[6])/(pow(z[21],0.5)*pow(z[22],2))-z[7]*(z[22]+pow(z[20],2)/pow(z[21],0.5))*(
  z[7]*z[3]-z[8]*z[4]*z[6])/pow(z[22],2))-rb*z[13]*(z[13]*z[20]*(z[7]*z[3]-
  z[8]*z[4]*z[6])/(pow(z[21],0.5)*pow(z[22],2))-z[4]*z[6]*z[23]-z[8]*(z[22]+
  pow(z[20],2)/pow(z[21],0.5))*(z[7]*z[3]-z[8]*z[4]*z[6])/pow(z[22],2)))*(2*
  ra*z[3]+z[3]*z[5]*z[115]+2*z[126]*z[5]*z[6]*z[14]*z[20]*pow(z[3],2)/(pow(
  z[21],0.5)*pow(z[22],2))+z[126]*z[3]*(z[8]*z[3]*pow(z[5],2)*(z[22]+pow(
  z[20],2)/pow(z[21],0.5))+z[4]*z[6]*(z[4]*z[20]/pow(z[21],0.5)-z[7]*(z[22]+
  pow(z[20],2)/pow(z[21],0.5))))/pow(z[22],2)-z[3]*z[6]*z[117]-rb*z[23]*pow(
  z[3],2)-z[3]*z[6]*(z[9]+z[25])-z[3]*z[5]*(l+z[10]-z[27])-z[126]*z[3]*z[4]*
  z[5]*z[113]*(2*z[4]*z[20]/pow(z[21],0.5)-z[7]*(z[22]+2*pow(z[20],2)/pow(
  z[21],0.5)))/(pow(z[21],0.5)*pow(z[22],3))-z[6]*z[13]*(ra-rb*z[3]*(z[23]+
  z[8]*z[13]*z[20]/(pow(z[21],0.5)*pow(z[22],2))-z[127]*(z[22]+pow(z[20],2)/
  pow(z[21],0.5))/pow(z[22],2)))-z[126]*z[3]*z[4]*z[5]*(z[4]*z[20]*z[113]+
  z[8]*z[3]*z[4]*z[5]*z[21]-z[7]*z[20]*(z[20]*z[113]+2*z[8]*z[3]*z[5]*z[21]))/(
  pow(z[21],1.5)*pow(z[22],2))-z[14]*(ra*z[5]+z[126]*z[3]*z[5]*z[14]*z[20]*
  z[113]*(2+z[22]/pow(z[21],0.5))/(z[21]*pow(z[22],3))-rb*z[3]*z[5]*z[23]-rb*
  z[3]*(z[6]*z[113]+z[8]*z[6]*z[14]*z[20]-z[127]*z[3]*z[14]*pow(z[5],2))/(
  pow(z[21],0.5)*pow(z[22],2)))-rb*z[3]*z[5]*z[13]*((z[113]+z[127]*z[3]*z[5]*
  z[13]+2*z[8]*z[3]*z[5]*z[20])/(pow(z[21],0.5)*pow(z[22],2))-z[8]*z[20]*
  z[113]*(2*z[8]*z[20]-z[13]*(2+z[22]/pow(z[21],0.5)))/(z[21]*pow(z[22],3))-
  z[127]*(z[21]*z[113]+z[113]*pow(z[20],2)+2*z[8]*z[3]*z[5]*z[20]*z[21])/(
  pow(z[21],1.5)*pow(z[22],2))))*q2p+(z[3]*z[6]*(l+z[10]-z[27])+z[126]*z[3]*
  z[4]*z[5]*(z[4]*z[20]/pow(z[21],0.5)-z[7]*(z[22]+pow(z[20],2)/pow(z[21],0.5)))/
  pow(z[22],2)-z[3]*z[5]*(z[9]+z[25])-z[14]*(rb*z[3]*z[6]*z[23]-ra*z[6]-
  z[126]*z[3]*z[5]*z[14]*z[20]/(pow(z[21],0.5)*pow(z[22],2)))-z[5]*z[13]*(ra-
  rb*z[3]*(z[23]+z[8]*z[13]*z[20]/(pow(z[21],0.5)*pow(z[22],2))-z[127]*(z[22]+
  pow(z[20],2)/pow(z[21],0.5))/pow(z[22],2))))*(z[3]*z[116]+z[4]*z[6]*(l+
  z[10]-z[27])+2*rb*z[3]*z[6]*z[14]*z[20]*(z[7]*z[3]-z[8]*z[4]*z[6])/(pow(
  z[21],0.5)*pow(z[22],2))-z[4]*z[5]*z[117]-z[4]*z[6]*z[115]-z[4]*z[5]*(z[9]+
  z[25])-rb*z[3]*z[5]*(z[7]*z[3]-z[8]*z[4]*z[6])*(2*z[13]*z[20]/(pow(z[21],
  0.5)*pow(z[22],2))-z[8]*(z[22]+pow(z[20],2)/pow(z[21],0.5))/pow(z[22],2))-
  rb*z[14]*(z[4]*z[6]*z[23]+z[14]*z[20]*z[113]*(2+z[22]/pow(z[21],0.5))*(z[7]*
  z[3]-z[8]*z[4]*z[6])/(z[21]*pow(z[22],3))-z[5]*(z[4]*z[113]+z[8]*z[4]*z[14]*
  z[20]-z[8]*z[3]*z[14]*(z[7]*z[3]-z[8]*z[4]*z[6]))/(pow(z[21],0.5)*pow(z[22],
  2)))-rb*z[4]*(z[130]*z[4]*z[5]*(z[22]+pow(z[20],2)/pow(z[21],0.5))/pow(
  z[22],2)-z[20]*z[113]*(z[7]*z[3]-z[8]*z[4]*z[6])*(2*z[7]*z[20]-z[4]*(2+
  z[22]/pow(z[21],0.5)))/(z[21]*pow(z[22],3))-z[7]*(z[7]*z[3]-z[8]*z[4]*z[6])*(
  z[21]*z[113]+z[113]*pow(z[20],2)+2*z[8]*z[3]*z[5]*z[20]*z[21])/(pow(z[21],
  1.5)*pow(z[22],2))-(z[8]*z[5]*z[20]*pow(z[4],2)-z[3]*z[113]-z[8]*z[3]*z[4]*
  z[5]*(z[7]*z[3]-z[8]*z[4]*z[6]))/(pow(z[21],0.5)*pow(z[22],2)))-rb*z[13]*(
  z[127]*z[4]*z[5]*(z[22]+pow(z[20],2)/pow(z[21],0.5))/pow(z[22],2)-z[4]*z[5]*
  z[23]-z[20]*z[113]*(z[7]*z[3]-z[8]*z[4]*z[6])*(2*z[8]*z[20]-z[13]*(2+z[22]/
  pow(z[21],0.5)))/(z[21]*pow(z[22],3))-z[8]*(z[7]*z[3]-z[8]*z[4]*z[6])*(
  z[21]*z[113]+z[113]*pow(z[20],2)+2*z[8]*z[3]*z[5]*z[20]*z[21])/(pow(z[21],
  1.5)*pow(z[22],2))-(z[4]*z[6]*z[113]+z[8]*z[4]*z[5]*z[13]*z[20]-z[8]*z[3]*
  z[5]*z[13]*(z[7]*z[3]-z[8]*z[4]*z[6]))/(pow(z[21],0.5)*pow(z[22],2))))*q2p)/
  pow((z[3]*z[6]*(l+z[10]-z[27])+z[126]*z[3]*z[4]*z[5]*(z[4]*z[20]/pow(z[21],
  0.5)-z[7]*(z[22]+pow(z[20],2)/pow(z[21],0.5)))/pow(z[22],2)-z[3]*z[5]*(z[9]+
  z[25])-z[14]*(rb*z[3]*z[6]*z[23]-ra*z[6]-z[126]*z[3]*z[5]*z[14]*z[20]/(pow(
  z[21],0.5)*pow(z[22],2)))-z[5]*z[13]*(ra-rb*z[3]*(z[23]+z[8]*z[13]*z[20]/(
  pow(z[21],0.5)*pow(z[22],2))-z[127]*(z[22]+pow(z[20],2)/pow(z[21],0.5))/
  pow(z[22],2)))),2);
  z[132] = z[125]*(z[3]*z[26]+rb*z[14]*(z[4]*z[5]*z[23]-z[14]*z[20]*(z[7]*
  z[3]-z[8]*z[4]*z[6])/(pow(z[21],0.5)*pow(z[22],2)))-z[4]*z[6]*(z[9]+z[25])-
  z[4]*z[5]*(l+z[10]-z[27])-rb*z[4]*(z[3]*z[23]+z[4]*z[20]*(z[7]*z[3]-z[8]*
  z[4]*z[6])/(pow(z[21],0.5)*pow(z[22],2))-z[7]*(z[22]+pow(z[20],2)/pow(z[21],
  0.5))*(z[7]*z[3]-z[8]*z[4]*z[6])/pow(z[22],2))-rb*z[13]*(z[13]*z[20]*(z[7]*
  z[3]-z[8]*z[4]*z[6])/(pow(z[21],0.5)*pow(z[22],2))-z[4]*z[6]*z[23]-z[8]*(
  z[22]+pow(z[20],2)/pow(z[21],0.5))*(z[7]*z[3]-z[8]*z[4]*z[6])/pow(z[22],2)))/(
  z[3]*z[6]*(l+z[10]-z[27])+z[126]*z[3]*z[4]*z[5]*(z[4]*z[20]/pow(z[21],0.5)-
  z[7]*(z[22]+pow(z[20],2)/pow(z[21],0.5)))/pow(z[22],2)-z[3]*z[5]*(z[9]+
  z[25])-z[14]*(rb*z[3]*z[6]*z[23]-ra*z[6]-z[126]*z[3]*z[5]*z[14]*z[20]/(pow(
  z[21],0.5)*pow(z[22],2)))-z[5]*z[13]*(ra-rb*z[3]*(z[23]+z[8]*z[13]*z[20]/(
  pow(z[21],0.5)*pow(z[22],2))-z[127]*(z[22]+pow(z[20],2)/pow(z[21],0.5))/
  pow(z[22],2))));
  z[133] = (z[10]*(z[1]*z[11]+z[2]*z[5])-z[9]*(z[1]*z[12]-z[2]*z[6]))*q3p;
  z[134] = 0.5*(z[9]*(z[1]*z[6]+z[2]*z[12])+z[10]*(z[1]*z[5]-z[2]*z[11]))*
  z[129] - z[2]*z[3]*(z[5]*z[9]-z[6]*z[10])*q3p;
  z[135] = (z[10]*(z[1]*z[6]+z[2]*z[4]*z[5])-ra*z[2]*z[5]*z[12]-ra*z[2]*z[6]*
  z[11]-z[9]*(z[1]*z[5]-z[2]*z[4]*z[6]))*q3p - (z[9]*(z[1]*z[6]+z[2]*z[12])+
  z[10]*(z[1]*z[5]-z[2]*z[11]))*z[131];
  z[136] = z[132]*(z[9]*(z[1]*z[6]+z[2]*z[12])+z[10]*(z[1]*z[5]-z[2]*z[11]));
  z[137] = (z[9]*(z[1]*z[6]+z[2]*z[12])+z[10]*(z[1]*z[5]-z[2]*z[11]))*q3p;
  z[138] = z[1]*z[3]*(z[5]*z[9]-z[6]*z[10])*q3p + 0.5*(z[10]*(z[1]*z[11]+z[2]*
  z[5])-z[9]*(z[1]*z[12]-z[2]*z[6]))*z[129];
  z[139] = -(z[9]*(z[2]*z[5]+z[1]*z[4]*z[6])-ra*z[1]*z[5]*z[12]-ra*z[1]*z[6]*
  z[11]-z[10]*(z[2]*z[6]-z[1]*z[4]*z[5]))*q3p - (z[10]*(z[1]*z[11]+z[2]*z[5])-
  z[9]*(z[1]*z[12]-z[2]*z[6]))*z[131];
  z[140] = z[132]*(z[10]*(z[1]*z[11]+z[2]*z[5])-z[9]*(z[1]*z[12]-z[2]*z[6]));
  z[141] = (2*z[31]*z[107]-z[26]*z[109]/pow(z[30],0.5))/pow(z[31],2);
  z[142] = 0.5*z[9]*z[111] - 0.5*z[110]*(k+z[10]);
  z[143] = -z[7]*z[4] - z[8]*z[3]*z[6];
  z[144] = z[18]*z[103] + z[20]*z[143];
  z[145] = (z[21]*z[144]+z[20]*z[40]*z[103])/pow(z[21],1.5);
  z[146] = (z[22]*(z[20]*z[145]+z[22]*z[143]+z[42]*z[103])+z[20]*z[103]*(
  z[18]*z[22]+2*z[20]*z[42])/pow(z[21],0.5))/pow(z[22],3);
  z[147] = (z[22]*z[145]+2*z[20]*z[42]*z[103]/pow(z[21],0.5))/pow(z[22],3);
  z[148] = rb*(z[7]*z[146]+z[4]*z[23]-z[3]*z[46]-z[3]*z[105]-z[4]*z[147]);
  z[149] = rb*(z[13]*z[147]-z[8]*z[146]-z[11]*z[105]-z[3]*z[6]*z[23]-z[4]*
  z[6]*z[46]);
  z[150] = rb*(z[14]*z[147]-z[12]*z[105]-z[3]*z[5]*z[23]-z[4]*z[5]*z[46]);
  z[151] = 2*z[26]*z[148] + 2*z[29]*z[150] + 2*z[51]*z[107] - 2*z[28]*z[149] - 
  2*z[48]*z[106] - 2*z[53]*z[108];
  z[152] = (2*z[30]*z[151]-z[56]*z[109])/pow(z[30],1.5);
  z[153] = (2*z[109]*(z[29]*z[58]+z[31]*z[53])/pow(z[30],0.5)+z[31]*(4*z[31]*
  z[150]-2*z[58]*z[108]-z[29]*z[152]))/pow(z[31],3);
  z[154] = z[39]*z[103] - z[8]*z[4]*z[5]*z[20];
  z[155] = (z[21]*z[154]+z[20]*z[41]*z[103])/pow(z[21],1.5);
  z[156] = (z[20]*z[103]*(z[22]*z[39]+2*z[20]*z[43])/pow(z[21],0.5)+z[22]*(
  z[20]*z[155]+z[43]*z[103]-z[8]*z[4]*z[5]*z[22]))/pow(z[22],3);
  z[157] = (z[22]*z[155]+2*z[20]*z[43]*z[103]/pow(z[21],0.5))/pow(z[22],3);
  z[158] = rb*(z[7]*z[156]-z[3]*z[47]-z[4]*z[157]);
  z[159] = rb*(z[13]*z[157]+z[14]*z[105]-z[8]*z[156]-z[4]*z[5]*z[23]-z[4]*
  z[6]*z[47]);
  z[160] = rb*(z[13]*z[105]+z[4]*z[5]*z[47]-z[14]*z[157]-z[4]*z[6]*z[23]);
  z[161] = 2*z[26]*z[158] + 2*z[52]*z[107] + 2*z[55]*z[108] - 2*z[28]*z[159] - 
  2*z[29]*z[160] - 2*z[50]*z[106];
  z[162] = (2*z[30]*z[161]-z[57]*z[109])/pow(z[30],1.5);
  z[163] = (2*z[29]*z[59]*z[109]/pow(z[30],0.5)-z[31]*(z[29]*z[162]+2*z[59]*
  z[108]+4*z[31]*z[160]+2*z[55]*z[109]/pow(z[30],0.5)))/pow(z[31],3);
  z[164] = 0.25*z[70]*z[123] + 0.25*w*z[153]*q2p + 0.25*w*z[163]*q3p + 0.25*
  z[71]*z[129];
  z[165] = (2*z[28]*z[58]*z[109]/pow(z[30],0.5)+z[31]*(2*z[58]*z[106]-4*z[31]*
  z[149]-z[28]*z[152]-2*z[48]*z[109]/pow(z[30],0.5)))/pow(z[31],3);
  z[166] = (2*z[28]*z[59]*z[109]/pow(z[30],0.5)+z[31]*(2*z[59]*z[106]-4*z[31]*
  z[159]-z[28]*z[162]-2*z[50]*z[109]/pow(z[30],0.5)))/pow(z[31],3);
  z[167] = 0.25*z[62]*z[123] + 0.25*w*z[165]*q2p + 0.25*w*z[166]*q3p + 0.25*
  z[63]*z[129];
  z[168] = (2*z[26]*z[58]*z[109]/pow(z[30],0.5)+z[31]*(4*z[31]*z[148]-2*z[58]*
  z[107]-z[26]*z[152]-2*z[51]*z[109]/pow(z[30],0.5)))/pow(z[31],3);
  z[169] = (2*z[26]*z[59]*z[109]/pow(z[30],0.5)+z[31]*(4*z[31]*z[158]-2*z[59]*
  z[107]-z[26]*z[162]-2*z[52]*z[109]/pow(z[30],0.5)))/pow(z[31],3);
  z[170] = -0.25*z[66]*z[123] - 0.25*w*z[168]*q2p - 0.25*w*z[169]*q3p - 0.25*
  z[67]*z[129];
  z[171] = 0.25*z[169]*(k+z[10]) - 0.5*z[9]*z[141];
  z[172] = w*z[168]*(k+z[10]);
  z[173] = 0.25*z[81]*z[123] + 0.25*z[172]*q2p + w*z[171]*q3p - pow(w,2)*
  z[33]*z[142] - 0.5*pow(w,2)*z[36]*z[111] - 0.5*pow(w,2)*z[37]*z[141] - 0.5*
  pow(w,2)*z[9]*z[34]*z[141] - 0.5*z[80]*z[129];
  z[174] = 0.25*z[9]*z[163] + 0.5*z[9]*z[110] + 0.5*z[10]*z[111] + 0.25*
  z[166]*(k+z[10]);
  z[175] = 0.25*z[9]*z[153] + 0.25*z[165]*(k+z[10]);
  z[176] = 0.5*pow(w,2)*z[35]*z[111] + 0.5*pow(w,2)*z[37]*z[110] + 0.5*pow(w,
  2)*z[33]*z[141]*(k+z[10]) + w*z[174]*q3p + w*z[175]*q2p - 0.5*z[85]*z[123] - 
  0.5*pow(w,2)*z[9]*z[32]*z[141] - 0.5*z[84]*z[129];
  z[177] = 0.25*z[9]*z[169] + 0.5*z[10]*z[141];
  z[178] = 0.25*z[89]*z[123] + pow(w,2)*z[32]*z[142] + 0.5*pow(w,2)*z[35]*
  z[141] + 0.5*pow(w,2)*z[34]*z[141]*(k+z[10]) + w*z[177]*q3p + 0.25*w*z[9]*
  z[168]*q2p - 0.5*pow(w,2)*z[36]*z[110] - 0.5*z[88]*z[129];
  z[179] = Izz*z[33]*z[164] + 0.5*Izz*z[111]*z[74] + z[32]*(Ixx*z[167]+Ixy*
  z[170]) + 0.5*m*(2*z[35]*z[173]+2*z[36]*z[176]+2*z[37]*z[178]+2*z[142]*
  z[91]+z[9]*z[141]*z[92]+z[141]*(k+z[10])*z[90]) - 0.5*z[94]*(2*z[3]*z[36]+2*
  z[4]*z[142]+z[9]*z[14]*z[141]+2*z[4]*z[6]*z[35]-2*z[4]*z[5]*z[37]-z[13]*
  z[141]*(k+z[10])) - z[34]*(Ixy*z[167]+Iyy*z[170]) - 0.5*z[110]*(Ixx*z[72]+
  Ixy*z[73]) - 0.5*z[141]*(Ixy*z[72]+Iyy*z[73]);
  z[180] = z[32]*(Ixx*z[110]+Ixy*z[141]) - Ixy*z[34]*z[110] - Iyy*z[34]*
  z[141] - Izz*z[33]*z[111] - m*(2*z[36]*z[142]+z[9]*z[37]*z[141]+z[35]*
  z[141]*(k+z[10]));
  z[181] = (z[93]*z[179]-z[180]*z[95])/pow(z[93],2);
  z[182] = (2*z[31]*z[116]-z[26]*z[118]/pow(z[30],0.5))/pow(z[31],2);
  z[183] = 0.5*z[182]*(k+z[10]) - ra*z[6]*z[34];
  z[184] = ra*z[5]*z[33] - 0.5*z[9]*z[120] - ra*z[6]*z[32] - 0.5*z[119]*(k+
  z[10]);
  z[185] = 0.5*z[9]*z[182] + ra*z[5]*z[34];
  z[186] = z[8]*z[5]*(z[3]*z[18]-z[4]*z[20]);
  z[187] = (z[21]*z[186]+z[40]*z[113])/pow(z[21],1.5);
  z[188] = (z[113]*(z[18]*z[22]+2*z[20]*z[42])/pow(z[21],0.5)+z[22]*(z[20]*
  z[187]+z[8]*z[3]*z[5]*z[42]-z[8]*z[4]*z[5]*z[22]))/pow(z[22],3);
  z[189] = (z[22]*z[187]+2*z[42]*z[113]/pow(z[21],0.5))/pow(z[22],3);
  z[190] = rb*(z[7]*z[188]-z[4]*z[189]-z[3]*z[113]/(pow(z[21],0.5)*pow(z[22],
  2)));
  z[191] = rb*(z[13]*z[189]+z[3]*z[5]*z[46]-z[8]*z[188]-z[4]*z[5]*z[23]-z[11]*
  z[113]/(pow(z[21],0.5)*pow(z[22],2)));
  z[192] = rb*(z[14]*z[189]+z[4]*z[6]*z[23]-z[3]*z[6]*z[46]-z[12]*z[113]/(
  pow(z[21],0.5)*pow(z[22],2)));
  z[193] = 2*z[26]*z[190] + 2*z[29]*z[192] + 2*z[51]*z[116] + 2*z[48]*(z[115]+
  ra*z[5]) + 2*z[53]*(z[117]-ra*z[6]) - 2*z[28]*z[191];
  z[194] = (2*z[30]*z[193]-z[56]*z[118])/pow(z[30],1.5);
  z[195] = (2*z[118]*(z[29]*z[58]+z[31]*z[53])/pow(z[30],0.5)-z[31]*(z[29]*
  z[194]-4*z[31]*z[192]-2*z[58]*(z[117]-ra*z[6])))/pow(z[31],3);
  z[196] = z[8]*z[3]*(z[5]*z[39]-z[6]*z[20]);
  z[197] = (z[21]*z[196]+z[41]*z[113])/pow(z[21],1.5);
  z[198] = (z[113]*(z[22]*z[39]+2*z[20]*z[43])/pow(z[21],0.5)+z[22]*(z[20]*
  z[197]+z[8]*z[3]*z[5]*z[43]-z[8]*z[3]*z[6]*z[22]))/pow(z[22],3);
  z[199] = (z[22]*z[197]+2*z[43]*z[113]/pow(z[21],0.5))/pow(z[22],3);
  z[200] = rb*(z[7]*z[198]-z[4]*z[199]);
  z[201] = rb*(z[8]*z[198]+z[3]*z[6]*z[23]-z[13]*z[199]-z[3]*z[5]*z[47]-z[14]*
  z[113]/(pow(z[21],0.5)*pow(z[22],2)));
  z[202] = rb*(z[14]*z[199]-z[3]*z[5]*z[23]-z[3]*z[6]*z[47]-z[13]*z[113]/(
  pow(z[21],0.5)*pow(z[22],2)));
  z[203] = 2*z[26]*z[200] + 2*z[52]*z[116] + 2*z[29]*(z[202]+ra*z[5]) + 2*
  z[50]*(z[115]+ra*z[5]) + 2*z[28]*(z[201]-ra*z[6]) - 2*z[55]*(z[117]-ra*z[6]);
  z[204] = (2*z[30]*z[203]-z[57]*z[118])/pow(z[30],1.5);
  z[205] = (2*z[118]*(z[29]*z[59]-z[31]*z[55])/pow(z[30],0.5)-z[31]*(z[29]*
  z[204]-4*z[31]*(z[202]+ra*z[5])-2*z[59]*(z[117]-ra*z[6])))/pow(z[31],3);
  z[206] = 0.25*w*z[195]*q2p + 0.25*w*z[205]*q3p - 0.5*z[70]*z[124] - 0.5*
  z[71]*z[131];
  z[207] = (2*z[118]*(z[28]*z[58]-z[31]*z[48])/pow(z[30],0.5)-z[31]*(z[28]*
  z[194]+4*z[31]*z[191]+2*z[58]*(z[115]+ra*z[5])))/pow(z[31],3);
  z[208] = (2*z[118]*(z[28]*z[59]-z[31]*z[50])/pow(z[30],0.5)-z[31]*(z[28]*
  z[204]+2*z[59]*(z[115]+ra*z[5])-4*z[31]*(z[201]-ra*z[6])))/pow(z[31],3);
  z[209] = 0.25*w*z[207]*q2p + 0.25*w*z[208]*q3p - 0.5*z[62]*z[124] - 0.5*
  z[63]*z[131];
  z[210] = (2*z[26]*z[58]*z[118]/pow(z[30],0.5)+z[31]*(4*z[31]*z[190]-2*z[58]*
  z[116]-z[26]*z[194]-2*z[51]*z[118]/pow(z[30],0.5)))/pow(z[31],3);
  z[211] = (2*z[26]*z[59]*z[118]/pow(z[30],0.5)+z[31]*(4*z[31]*z[200]-2*z[59]*
  z[116]-z[26]*z[204]-2*z[52]*z[118]/pow(z[30],0.5)))/pow(z[31],3);
  z[212] = 0.5*z[66]*z[124] + 0.5*z[67]*z[131] - 0.25*w*z[210]*q2p - 0.25*w*
  z[211]*q3p;
  z[213] = 0.5*ra*z[6]*z[65] + 0.25*z[211]*(k+z[10]) - 0.5*z[9]*z[182] - ra*
  z[5]*z[34];
  z[214] = -ra*z[6]*z[64] - 0.5*z[210]*(k+z[10]);
  z[215] = 0.5*pow(w,2)*z[36]*z[120] + w*z[213]*q3p + z[80]*z[131] - 0.5*
  z[81]*z[124] - pow(w,2)*z[33]*z[184] - pow(w,2)*z[34]*z[185] - 0.5*pow(w,2)*
  z[37]*z[182] - 0.5*w*z[214]*q2p;
  z[216] = 0.25*z[9]*z[205] + 0.5*z[9]*z[119] + 0.5*ra*z[6]*z[61] + 0.25*
  z[208]*(k+z[10]) - 0.5*z[10]*z[120] - ra*z[5]*z[32] - ra*z[6]*z[33] - 0.5*
  ra*z[5]*z[69];
  z[217] = 0.25*z[9]*z[195] + 0.5*ra*z[6]*z[60] + 0.25*z[207]*(k+z[10]) - 0.5*
  ra*z[5]*z[68];
  z[218] = z[85]*z[124] + pow(w,2)*z[33]*z[183] + 0.5*pow(w,2)*z[37]*z[119] + 
  w*z[216]*q3p + w*z[217]*q2p + z[84]*z[131] - pow(w,2)*z[32]*z[185] - 0.5*
  pow(w,2)*z[35]*z[120];
  z[219] = 0.25*z[9]*z[211] + 0.5*z[10]*z[182] - ra*z[6]*z[34] - 0.5*ra*z[5]*
  z[65];
  z[220] = ra*z[5]*z[64] - 0.5*z[9]*z[210];
  z[221] = pow(w,2)*z[32]*z[184] + pow(w,2)*z[34]*z[183] + 0.5*pow(w,2)*z[35]*
  z[182] + w*z[219]*q3p + z[88]*z[131] - 0.5*z[89]*z[124] - 0.5*pow(w,2)*
  z[36]*z[119] - 0.5*w*z[220]*q2p;
  z[222] = Izz*z[33]*z[206] + z[32]*(Ixx*z[209]+Ixy*z[212]) + m*(z[35]*z[215]+
  z[36]*z[218]+z[37]*z[221]+z[183]*z[90]+z[184]*z[91]+z[185]*z[92]) - z[94]*(
  z[4]*z[184]+z[14]*z[185]-z[13]*z[183]-z[3]*z[5]*z[35]-z[3]*z[6]*z[37]) - 
  0.5*Izz*z[120]*z[74] - z[34]*(Ixy*z[209]+Iyy*z[212]) - 0.5*z[119]*(Ixx*
  z[72]+Ixy*z[73]) - 0.5*z[182]*(Ixy*z[72]+Iyy*z[73]);
  z[223] = Izz*z[33]*z[120] + z[32]*(Ixx*z[119]+Ixy*z[182]) - Ixy*z[34]*
  z[119] - Iyy*z[34]*z[182] - 2*m*(z[35]*z[183]+z[36]*z[184]+z[37]*z[185]);
  z[224] = (z[93]*z[222]-z[223]*z[95])/pow(z[93],2);
  z[225] = -0.5*z[70]*z[125] - 0.5*z[71]*z[132] - 0.5*z[68]*q2p - 0.5*z[69]*
  q3p;
  z[226] = -0.5*z[62]*z[125] - 0.5*z[63]*z[132] - 0.5*z[60]*q2p - 0.5*z[61]*
  q3p;
  z[227] = 0.5*z[66]*z[125] + 0.5*z[67]*z[132] + 0.5*z[64]*q2p + 0.5*z[65]*
  q3p;
  z[228] = z[80]*z[132] + z[78]*q3p - 0.5*z[81]*z[125] - 2*w*z[33]*z[36] - 2*
  w*z[34]*z[37] - 0.5*z[79]*q2p;
  z[229] = z[84]*z[132] + z[85]*z[125] + 2*w*z[33]*z[35] + z[82]*q3p + z[83]*
  q2p - 2*w*z[32]*z[37];
  z[230] = z[88]*z[132] + 2*w*z[32]*z[36] + 2*w*z[34]*z[35] + z[86]*q3p - 0.5*
  z[89]*z[125] - 0.5*z[87]*q2p;
  z[231] = Izz*z[33]*z[225] + z[32]*(Ixx*z[226]+Ixy*z[227]) + m*(z[35]*z[228]+
  z[36]*z[229]+z[37]*z[230]) - z[34]*(Ixy*z[226]+Iyy*z[227]);

  no_cb[0] = q4 + z[26]*z[99] + z[97]*(z[9]+z[25]) - z[101]*(l+z[10]-z[27]);
  no_cb[1] = q5 + z[98]*(z[9]+z[25]) - z[26]*z[100] - z[102]*(l+z[10]-z[27]);
  no_cb[2] = -z[4]*z[26] - z[13]*(z[9]+z[25]) - z[14]*(l+z[10]-z[27]);
  H[0] = w*(Iyy*pow(z[34],2)+Izz*pow(z[33],2)+z[32]*(Ixx*z[32]-2*Ixy*z[34]));
  H[1] = -w*(Izz*z[4]*z[32]*z[33]-Izz*z[3]*z[6]*z[33]*z[34]-z[4]*z[33]*(Ixx*
  z[32]-Ixy*z[34])-z[3]*z[5]*z[34]*(Ixx*z[32]-Ixy*z[34])-(z[13]*z[33]+z[14]*
  z[32])*(Ixy*z[32]-Iyy*z[34]));
  H[2] = w*(Izz*z[14]*z[33]+z[4]*(Ixy*z[32]-Iyy*z[34])-z[13]*(Ixx*z[32]-Ixy*
  z[34]));
  p[0] = m*w*(z[32]*z[35]+z[33]*z[37]-z[34]*z[36]);
  p[1] = -m*w*(z[4]*z[32]*z[37]-z[4]*z[33]*z[35]-z[3]*z[5]*z[34]*z[35]-z[3]*
  z[6]*z[34]*z[37]-z[36]*(z[13]*z[33]+z[14]*z[32]));
  p[2] = -m*w*(z[13]*z[35]-z[4]*z[36]-z[14]*z[37]);
  df[0] = 0;
  df[1] = 0.5*z[112];
  df[2] = -0.5*z[121];
  df[3] = 0;
  df[4] = 0;
  df[5] = z[122];
  df[6] = 0;
  df[7] = -0.5*z[123];
  df[8] = z[124];
  df[9] = 0;
  df[10] = 0;
  df[11] = z[125];
  df[12] = 0;
  df[13] = -0.5*z[129];
  df[14] = z[131];
  df[15] = 0;
  df[16] = 0;
  df[17] = z[132];
  df[18] = z[133];
  df[19] = z[134];
  df[20] = z[135];
  df[21] = 0;
  df[22] = 0;
  df[23] = -z[136];
  df[24] = -z[137];
  df[25] = z[138];
  df[26] = z[139];
  df[27] = 0;
  df[28] = 0;
  df[29] = -z[140];
  df[30] = 0;
  df[31] = z[181];
  df[32] = z[224];
  df[33] = 0;
  df[34] = 0;
  df[35] = z[231]/z[93];
} // computeOutputs()

void SlottedDiscs::setState(const double state[6])
{
  q1 = state[0];
  q2 = state[1];
  q3 = state[2];
  q4 = state[3];
  q5 = state[4];
  w = state[5];
} // setState()

void SlottedDiscs::setParameters(DiscParams * p)
{
  m = p->m;
  ra = p->ra;
  rb = p->rb;
  k = p->k;
  l = p->l;
  g = p->g;
  alpha = p->alpha;
  Ixx = p->Ixx;
  Iyy = p->Iyy;
  Izz = p->Izz;
  Ixy = p->Ixy;

  evalConstants();
} // setParameters()
